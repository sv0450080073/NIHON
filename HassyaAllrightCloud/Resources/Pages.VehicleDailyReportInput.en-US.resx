<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="actualgeneralkilo_label" xml:space="preserve">
    <value>Actual general km</value>
  </data>
  <data name="actualhighspeedkm_label" xml:space="preserve">
    <value>Actual highway km</value>
  </data>
  <data name="actualvehicletime_label" xml:space="preserve">
    <value>Actual time</value>
  </data>
  <data name="arrivaltime_label" xml:space="preserve">
    <value>Drop off time</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>There is an error in the input of km!</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>There is an error in specifying the range of the odometer!</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>Please set the back to garage time longer than the leave garage time.</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>Please set the arrival time longer than the departure time.</value>
  </data>
  <data name="boardingpersonnel_label" xml:space="preserve">
    <value>Number of passenger</value>
  </data>
  <data name="btn_close" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="dailyreportdate_label" xml:space="preserve">
    <value>Daily report date</value>
  </data>
  <data name="delete_btn" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="delete_header" xml:space="preserve">
    <value>Delete confirmation of daily report by vehicle</value>
  </data>
  <data name="delete_message" xml:space="preserve">
    <value>Are you sure to delete?</value>
  </data>
  <data name="departuretime_label" xml:space="preserve">
    <value>Leave garage time</value>
  </data>
  <data name="departuretime_label_1" xml:space="preserve">
    <value>Departure time</value>
  </data>
  <data name="endmeter_label" xml:space="preserve">
    <value>End meter</value>
  </data>
  <data name="forwardinggeneralkilo_label" xml:space="preserve">
    <value>Deadhead general km</value>
  </data>
  <data name="forwardinghighspeedkm_label" xml:space="preserve">
    <value>Deadhead highway km</value>
  </data>
  <data name="header_label" xml:space="preserve">
    <value>Input daily report by vehicle</value>
  </data>
  <data name="Km_label" xml:space="preserve">
    <value>Km</value>
  </data>
  <data name="lampoil_label" xml:space="preserve">
    <value>Lamp oil</value>
  </data>
  <data name="lightoil_label" xml:space="preserve">
    <value>Light oil</value>
  </data>
  <data name="liter_label" xml:space="preserve">
    <value>Litter</value>
  </data>
  <data name="numberoftrip_label" xml:space="preserve">
    <value>Number of operations</value>
  </data>
  <data name="oil_label" xml:space="preserve">
    <value>Oil</value>
  </data>
  <data name="operatingperiod_label" xml:space="preserve">
    <value>Operation period</value>
  </data>
  <data name="otherkilo_label" xml:space="preserve">
    <value>Other km</value>
  </data>
  <data name="plusman_label" xml:space="preserve">
    <value>Pax</value>
  </data>
  <data name="restrainttime_label" xml:space="preserve">
    <value>Working time</value>
  </data>
  <data name="returntime_label" xml:space="preserve">
    <value>Back to garage time</value>
  </data>
  <data name="save_btn" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="startingmeter_label" xml:space="preserve">
    <value>Start meter</value>
  </data>
  <data name="totalmile_label" xml:space="preserve">
    <value>Total running km</value>
  </data>
  <data name="vehicle_label" xml:space="preserve">
    <value>Vehicle</value>
  </data>
</root>