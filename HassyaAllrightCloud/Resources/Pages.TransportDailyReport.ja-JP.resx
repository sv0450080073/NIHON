<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aggregationcategory_label" xml:space="preserve">
    <value>集計区分</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>運行年月日を入力してください！</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>集計区分を選択してください！</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>受付営業所の範囲指定に誤りがあります！</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>該当データが存在しません！</value>
  </data>
  <data name="clear_btn" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="company_label" xml:space="preserve">
    <value>会社</value>
  </data>
  <data name="company_nulltext" xml:space="preserve">
    <value>会社コード：会社名</value>
  </data>
  <data name="count_table" xml:space="preserve">
    <value>カウント表</value>
  </data>
  <data name="csvsetting_label" xml:space="preserve">
    <value>CSV 設定</value>
  </data>
  <data name="csv_btn" xml:space="preserve">
    <value>CSV</value>
  </data>
  <data name="delimitertype_label" xml:space="preserve">
    <value>区切り文字タイプ</value>
  </data>
  <data name="departure_date_label" xml:space="preserve">
    <value>出庫年月日</value>
  </data>
  <data name="formsetting_label" xml:space="preserve">
    <value>帳票設定</value>
  </data>
  <data name="general_transportation" xml:space="preserve">
    <value>一般輸送</value>
  </data>
  <data name="grouping_label" xml:space="preserve">
    <value>括り区分</value>
  </data>
  <data name="headingoutput_label" xml:space="preserve">
    <value>見出し出力</value>
  </data>
  <data name="init_layout_btn" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="large_size" xml:space="preserve">
    <value>大</value>
  </data>
  <data name="medium_size" xml:space="preserve">
    <value>中</value>
  </data>
  <data name="operation_date_label" xml:space="preserve">
    <value>運行年月日</value>
  </data>
  <data name="output_category_label" xml:space="preserve">
    <value>出力区分</value>
  </data>
  <data name="output_enclose" xml:space="preserve">
    <value>「”」で括る</value>
  </data>
  <data name="output_notenclose" xml:space="preserve">
    <value>「”」で括らない</value>
  </data>
  <data name="output_notwithheader" xml:space="preserve">
    <value>未出力</value>
  </data>
  <data name="output_setting" xml:space="preserve">
    <value>出力指示</value>
  </data>
  <data name="output_withcomma" xml:space="preserve">
    <value>カンマ</value>
  </data>
  <data name="output_withheader" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="output_withsemicolon" xml:space="preserve">
    <value>セミコロン</value>
  </data>
  <data name="output_withtab" xml:space="preserve">
    <value>タブ</value>
  </data>
  <data name="page_header" xml:space="preserve">
    <value>検索条件</value>
  </data>
  <data name="page_title" xml:space="preserve">
    <value>運輸日報</value>
  </data>
  <data name="pdf_btn" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="preview_btn" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="print_btn" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="return_date_label" xml:space="preserve">
    <value>帰庫年月日</value>
  </data>
  <data name="save_layout_btn" xml:space="preserve">
    <value>初期化</value>
  </data>
  <data name="sizeofpaper_label" xml:space="preserve">
    <value>用紙サイズ</value>
  </data>
  <data name="size_setting" xml:space="preserve">
    <value>幅切替</value>
  </data>
  <data name="small_size" xml:space="preserve">
    <value>小</value>
  </data>
  <data name="special_transportation" xml:space="preserve">
    <value>特殊輸送</value>
  </data>
  <data name="specific_transportation" xml:space="preserve">
    <value>特定輸送</value>
  </data>
  <data name="start_btn" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="tab_title_1" xml:space="preserve">
    <value>検索条件</value>
  </data>
  <data name="tab_title_2" xml:space="preserve">
    <value>表示設定</value>
  </data>
  <data name="tab_title_3" xml:space="preserve">
    <value>帳票出力</value>
  </data>
  <data name="tab_title_4" xml:space="preserve">
    <value>レイアウト設定</value>
  </data>
  <data name="total_switching" xml:space="preserve">
    <value>合計切替</value>
  </data>
  <data name="total_table" xml:space="preserve">
    <value>合計表</value>
  </data>
  <data name="vehiclesaleoffice_label" xml:space="preserve">
    <value>車輌営業所</value>
  </data>
  <data name="vehiclesaleoffice_nulltext" xml:space="preserve">
    <value>営業所コード：営業所名</value>
  </data>
</root>