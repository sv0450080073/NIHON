<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>承認</value>
  </data>
  <data name="AllDay" xml:space="preserve">
    <value>(終日)</value>
  </data>
  <data name="ApprovalNote" xml:space="preserve">
    <value>承認者の備考</value>
  </data>
  <data name="ApprovalStatus" xml:space="preserve">
    <value>承認区分</value>
  </data>
  <data name="ApproveDay" xml:space="preserve">
    <value>承認年月日</value>
  </data>
  <data name="Approver" xml:space="preserve">
    <value>承認者</value>
  </data>
  <data name="ApproveTime" xml:space="preserve">
    <value>承認時間</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>検索日付の範囲指定に誤りがあります！</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>該当のデータが存在しません！</value>
  </data>
  <data name="Branch" xml:space="preserve">
    <value>営業所</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="CustomGroup" xml:space="preserve">
    <value>カスタムグループ</value>
  </data>
  <data name="CustomGroupScheduleAdd" xml:space="preserve">
    <value>個人カスタムグループ作成</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>(水)</value>
  </data>
  <data name="DayUp" xml:space="preserve">
    <value>(月)</value>
  </data>
  <data name="DisplaySetting" xml:space="preserve">
    <value>表示設定</value>
  </data>
  <data name="EmployeeNullText" xml:space="preserve">
    <value>社員コード : 社員名</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>終了日時</value>
  </data>
  <data name="EraseAll" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="EventType" xml:space="preserve">
    <value>休日種別</value>
  </data>
  <data name="FilterCondition" xml:space="preserve">
    <value>条件設定</value>
  </data>
  <data name="FilterCondition1" xml:space="preserve">
    <value>条件設定</value>
  </data>
  <data name="GroupMemberAdd" xml:space="preserve">
    <value>メンバー選択</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>グループ名</value>
  </data>
  <data name="HolidayType" xml:space="preserve">
    <value>休日種別</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>ラベル付き</value>
  </data>
  <data name="LeaveDay" xml:space="preserve">
    <value>日時</value>
  </data>
  <data name="LeaveType" xml:space="preserve">
    <value>申請種</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoGroupNameError" xml:space="preserve">
    <value>グループ名を入力してください。！</value>
  </data>
  <data name="NoMemberError" xml:space="preserve">
    <value>メンバーを指定してください</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>営業所</value>
  </data>
  <data name="Refuse" xml:space="preserve">
    <value>却下</value>
  </data>
  <data name="SaleOfficeNullText" xml:space="preserve">
    <value>会社コード : 会社名　営業所コード : 営業所名</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="ScheduleDetail" xml:space="preserve">
    <value>申請の詳細</value>
  </data>
  <data name="ScheduleDetailPopup" xml:space="preserve">
    <value>申請詳細</value>
  </data>
  <data name="ScheduleType" xml:space="preserve">
    <value>申請種別</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>社員</value>
  </data>
  <data name="StaffId" xml:space="preserve">
    <value>社員コード</value>
  </data>
  <data name="StaffName" xml:space="preserve">
    <value>社員名</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>開始日時</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>承認区分</value>
  </data>
  <data name="Sure" xml:space="preserve">
    <value>絶対</value>
  </data>
  <data name="TimeRange" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>申請一覧</value>
  </data>
  <data name="TitleDetail" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="Titlegrid" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="To" xml:space="preserve">
    <value> ~ </value>
  </data>
  <data name="UnSure" xml:space="preserve">
    <value>希望</value>
  </data>
  <data name="UpdateStaffId" xml:space="preserve">
    <value>承認社員コード</value>
  </data>
  <data name="UpdateStaffName" xml:space="preserve">
    <value>承認社員名</value>
  </data>
  <data name="UpdateTime" xml:space="preserve">
    <value>承認日時</value>
  </data>
  <data name="UpdDay" xml:space="preserve">
    <value>更新日時</value>
  </data>
  <data name="WidthChange" xml:space="preserve">
    <value>幅切替</value>
  </data>
  <data name="WidthLarge" xml:space="preserve">
    <value>大</value>
  </data>
  <data name="WidthMedium" xml:space="preserve">
    <value>中</value>
  </data>
  <data name="WidthSmall" xml:space="preserve">
    <value>小</value>
  </data>
</root>