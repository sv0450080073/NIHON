<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationAmount" xml:space="preserve">
    <value>Clearing amount</value>
  </data>
  <data name="BillAdress" xml:space="preserve">
    <value>Billing address:</value>
  </data>
  <data name="BillAmount" xml:space="preserve">
    <value>Billing amount:</value>
  </data>
  <data name="BillDate" xml:space="preserve">
    <value>Promissory note deadline:</value>
  </data>
  <data name="BillNo" xml:space="preserve">
    <value>Promissory note No:</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>The corresponding data does not exist!</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>Please enter deposit amount!</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>Please enter card authorization number!</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>Please enter card slip number!</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>Please enter promissory note №!</value>
  </data>
  <data name="BI_T006" xml:space="preserve">
    <value>Please enter coupon №!</value>
  </data>
  <data name="BI_T007" xml:space="preserve">
    <value>Please enter face value!</value>
  </data>
  <data name="BI_T008" xml:space="preserve">
    <value>Please enter clearing amount!</value>
  </data>
  <data name="BI_T009" xml:space="preserve">
    <value>Cumulative clearing amount by coupon exceeds billing amount!</value>
  </data>
  <data name="BI_T010" xml:space="preserve">
    <value>You can not modify it because the customer master's deposit clearing classification has changed!</value>
  </data>
  <data name="BI_T011" xml:space="preserve">
    <value>Data has been updated on other terminals!</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CardApprovalNumber" xml:space="preserve">
    <value>Card authorization number:</value>
  </data>
  <data name="CardSlipNumber" xml:space="preserve">
    <value>Card slip number:</value>
  </data>
  <data name="ChangeDeleteCouponFaceValue" xml:space="preserve">
    <value>Coupon face value has been changed or deleted</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CouponBalance" xml:space="preserve">
    <value>The difference is used as the coupon balance without changing the coupon face value.</value>
  </data>
  <data name="CouponNo" xml:space="preserve">
    <value>Coupon №</value>
  </data>
  <data name="CumulativeCouponsApplied" xml:space="preserve">
    <value>Cumulative clearing amount by coupon:</value>
  </data>
  <data name="CumulativeDeposit" xml:space="preserve">
    <value>Cumulative deposit:</value>
  </data>
  <data name="Current" xml:space="preserve">
    <value>Current account</value>
  </data>
  <data name="CurrentApplied" xml:space="preserve">
    <value>Clearing amount of this time:</value>
  </data>
  <data name="CurrentDeposit" xml:space="preserve">
    <value>Deposit of this time:</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer:</value>
  </data>
  <data name="DateOfIssue" xml:space="preserve">
    <value>Issued date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DepositAmount" xml:space="preserve">
    <value>Deposit amount:</value>
  </data>
  <data name="DepositDate" xml:space="preserve">
    <value>Deposit date:</value>
  </data>
  <data name="DepositMethod" xml:space="preserve">
    <value>Deposit method:</value>
  </data>
  <data name="DepositOffice" xml:space="preserve">
    <value>Deposit sales office:</value>
  </data>
  <data name="DepositOfficeNullText" xml:space="preserve">
    <value>Deposit sales office code : Abbreviated name</value>
  </data>
  <data name="DepositType" xml:space="preserve">
    <value>Deposit type:</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination name:</value>
  </data>
  <data name="DetailedNameOfDepositMeans11" xml:space="preserve">
    <value>Other deposit method detail name 11:</value>
  </data>
  <data name="DetailedNameOfDepositMeans12" xml:space="preserve">
    <value>Other deposit method detail name 12:</value>
  </data>
  <data name="DetailedNameOfDepositMeans21" xml:space="preserve">
    <value>Other deposit method detail name 21:</value>
  </data>
  <data name="DetailedNameOfDepositMeans22" xml:space="preserve">
    <value>Other deposit method detail name 22:</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="FaceValue" xml:space="preserve">
    <value>Face value</value>
  </data>
  <data name="GrandTotal" xml:space="preserve">
    <value>SUM</value>
  </data>
  <data name="GridAdjustment" xml:space="preserve">
    <value>Adjustment money</value>
  </data>
  <data name="GridBank" xml:space="preserve">
    <value>Bank transfer</value>
  </data>
  <data name="GridCard" xml:space="preserve">
    <value>Card</value>
  </data>
  <data name="GridCardRecognition" xml:space="preserve">
    <value>Card acceptance</value>
  </data>
  <data name="GridCardSlipNo" xml:space="preserve">
    <value>Card slip number</value>
  </data>
  <data name="GridCash" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="GridCommercialPaper" xml:space="preserve">
    <value>Promissory note</value>
  </data>
  <data name="GridCommercialPaperNo" xml:space="preserve">
    <value>Promissory note No.</value>
  </data>
  <data name="GridCouponAppliedAmount" xml:space="preserve">
    <value>Clearing amount by coupon</value>
  </data>
  <data name="GridCouponNo" xml:space="preserve">
    <value>Coupon No.</value>
  </data>
  <data name="GridDepositDate" xml:space="preserve">
    <value>Deposit date</value>
  </data>
  <data name="GridDepositOffice" xml:space="preserve">
    <value>Deposit sales office</value>
  </data>
  <data name="GridDepositType" xml:space="preserve">
    <value>Deposit type</value>
  </data>
  <data name="GridNo" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="GridOffset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="GridOther1" xml:space="preserve">
    <value>Other deposit method 1</value>
  </data>
  <data name="GridOther2" xml:space="preserve">
    <value>Other deposit method 2</value>
  </data>
  <data name="GridPar" xml:space="preserve">
    <value>Face value of coupon</value>
  </data>
  <data name="GridTotalDeposit" xml:space="preserve">
    <value>Deposit amount</value>
  </data>
  <data name="GridTransfer" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="GridTransferFee" xml:space="preserve">
    <value>Transfer fee</value>
  </data>
  <data name="GridTransferSupport" xml:space="preserve">
    <value>Sponsorship/Cooperation money</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>Total deposit amount:</value>
  </data>
  <data name="NumberOfCoupons" xml:space="preserve">
    <value>Number of coupons:</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OperateDate" xml:space="preserve">
    <value>Travel date:</value>
  </data>
  <data name="Ordinary" xml:space="preserve">
    <value>Ordinary bank account</value>
  </data>
  <data name="PageCount" xml:space="preserve">
    <value>Page Sum</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Batch input of deposit</value>
  </data>
  <data name="ProcessingCoupon" xml:space="preserve">
    <value>Please select the processing for the coupon.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SponsorshipFund" xml:space="preserve">
    <value>Sponsorship/Cooperation money:</value>
  </data>
  <data name="SumCouponsApplied" xml:space="preserve">
    <value>Sum of clearing amount:</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalAll" xml:space="preserve">
    <value>SUM</value>
  </data>
  <data name="TotalAllAdjustment" xml:space="preserve">
    <value>Adjustment money</value>
  </data>
  <data name="TotalAllCard" xml:space="preserve">
    <value>Card</value>
  </data>
  <data name="TotalAllCash" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="TotalAllCommercialPaper" xml:space="preserve">
    <value>Promissory note</value>
  </data>
  <data name="TotalAllCouponAppliedAmount" xml:space="preserve">
    <value>Clearing amount by coupon</value>
  </data>
  <data name="TotalAllOffset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="TotalAllOther1" xml:space="preserve">
    <value>Other deposit method 1</value>
  </data>
  <data name="TotalAllOther2" xml:space="preserve">
    <value>Other deposit method 2</value>
  </data>
  <data name="TotalAllTotalDeposit" xml:space="preserve">
    <value>Deposit amount</value>
  </data>
  <data name="TotalAllTransfer" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="TotalAllTransferFee" xml:space="preserve">
    <value>Transfer fee</value>
  </data>
  <data name="TotalAllTransferSupport" xml:space="preserve">
    <value>Sponsorship/Cooperation money</value>
  </data>
  <data name="TotalPage" xml:space="preserve">
    <value>Page Sum</value>
  </data>
  <data name="TotalPageAdjustment" xml:space="preserve">
    <value>Adjustment money</value>
  </data>
  <data name="TotalPageCard" xml:space="preserve">
    <value>Card</value>
  </data>
  <data name="TotalPageCash" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="TotalPageCommercialPaper" xml:space="preserve">
    <value>Promissory note</value>
  </data>
  <data name="TotalPageCouponAppliedAmount" xml:space="preserve">
    <value>Clearing amount by coupon</value>
  </data>
  <data name="TotalPageOffset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="TotalPageOther1" xml:space="preserve">
    <value>Other deposit method 1</value>
  </data>
  <data name="TotalPageOther2" xml:space="preserve">
    <value>Other deposit method 2</value>
  </data>
  <data name="TotalPageTotalDeposit" xml:space="preserve">
    <value>Deposit amount</value>
  </data>
  <data name="TotalPageTransfer" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="TotalPageTransferFee" xml:space="preserve">
    <value>Transfer fee</value>
  </data>
  <data name="TotalPageTransferSupport" xml:space="preserve">
    <value>Sponsorship/Cooperation money</value>
  </data>
  <data name="TransferBank" xml:space="preserve">
    <value>Bank transfer:</value>
  </data>
  <data name="TransferBankNullText" xml:space="preserve">
    <value>Bank code : Bank name Branch code : Branch name</value>
  </data>
  <data name="TransferFee" xml:space="preserve">
    <value>Transfer fee:</value>
  </data>
  <data name="UnpaidAmount" xml:space="preserve">
    <value>Uncollected amount:</value>
  </data>
</root>