<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccrualDate" xml:space="preserve">
    <value>Using date</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Address Display" xml:space="preserve">
    <value>Display address</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ArrangementInput" xml:space="preserve">
    <value>Arrangement setting</value>
  </data>
  <data name="Arrival" xml:space="preserve">
    <value>Drop off location</value>
  </data>
  <data name="ArrivalTime" xml:space="preserve">
    <value>Drop off time</value>
  </data>
  <data name="AskForUpdate" xml:space="preserve">
    <value>Would you like to update?</value>
  </data>
  <data name="BI_TokiskNull" xml:space="preserve">
    <value>Please select a supplier.</value>
  </data>
  <data name="BI_TokiStNull" xml:space="preserve">
    <value>Please select a branch.</value>
  </data>
  <data name="BookingFixed" xml:space="preserve">
    <value>Order has been approved</value>
  </data>
  <data name="BookingUnFixed" xml:space="preserve">
    <value>Order has been unapproved</value>
  </data>
  <data name="ButtonConfirmed" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="ButtonNotConfirm" xml:space="preserve">
    <value>Un-approved</value>
  </data>
  <data name="Calculation category / name" xml:space="preserve">
    <value>Billing Type・Name</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel setting</value>
  </data>
  <data name="CarNo" xml:space="preserve">
    <value>Vehicle name</value>
  </data>
  <data name="Checklist" xml:space="preserve">
    <value>Confirm item</value>
  </data>
  <data name="ClearingCategory" xml:space="preserve">
    <value>Settlement Type</value>
  </data>
  <data name="CM_T002" xml:space="preserve">
    <value>Data has been updated on other terminals!</value>
  </data>
  <data name="CommonError" xml:space="preserve">
    <value>System error</value>
  </data>
  <data name="conditionupload" xml:space="preserve">
    <value>添付ファイルのサイズは10.0 MB以内、最大50件までしか登録できません。</value>
  </data>
  <data name="ConfigurationButton" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Confirmation date" xml:space="preserve">
    <value>Confirmed date</value>
  </data>
  <data name="Confirmation partner" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="Confirmed number" xml:space="preserve">
    <value>Number of confirmer</value>
  </data>
  <data name="ConsumptionTaxRate" xml:space="preserve">
    <value>Tax rate</value>
  </data>
  <data name="Culture" xml:space="preserve">
    <value>en-us</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Customize items</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer type</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DefaultTokiskNullText" xml:space="preserve">
    <value>Supplier code: Supplier name</value>
  </data>
  <data name="DefaultTokiStNullText" xml:space="preserve">
    <value>Branch code: Branch name</value>
  </data>
  <data name="Delivery DateTime" xml:space="preserve">
    <value>Leave date time</value>
  </data>
  <data name="Departs" xml:space="preserve">
    <value>Perform</value>
  </data>
  <data name="Departure DateTime" xml:space="preserve">
    <value>Departure date time</value>
  </data>
  <data name="DepartureTime" xml:space="preserve">
    <value>Departure time</value>
  </data>
  <data name="Depot" xml:space="preserve">
    <value>Pickup location</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="DM" xml:space="preserve">
    <value>DM</value>
  </data>
  <data name="download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="downloadall" xml:space="preserve">
    <value>すべてダウンロード</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="Fares with tax" xml:space="preserve">
    <value>Fare with tax</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="Fee" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="Futai" xml:space="preserve">
    <value>Ancillary</value>
  </data>
  <data name="General purpose 1" xml:space="preserve">
    <value>General purpose 1</value>
  </data>
  <data name="General purpose 2" xml:space="preserve">
    <value>General purpose 2</value>
  </data>
  <data name="General purpose 3" xml:space="preserve">
    <value>General purpose 3</value>
  </data>
  <data name="General purpose 4" xml:space="preserve">
    <value>General purpose 4</value>
  </data>
  <data name="General purpose 5" xml:space="preserve">
    <value>General purpose 5</value>
  </data>
  <data name="Guide" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="IncidentalBtn" xml:space="preserve">
    <value>Ancillary Setting</value>
  </data>
  <data name="IncidentalName" xml:space="preserve">
    <value>Ancillary name</value>
  </data>
  <data name="Liquidation" xml:space="preserve">
    <value>Settlement method</value>
  </data>
  <data name="LiquidationName" xml:space="preserve">
    <value>Settlement</value>
  </data>
  <data name="LoadedProductName" xml:space="preserve">
    <value>Included goods</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Goods add</value>
  </data>
  <data name="message_resurrection" xml:space="preserve">
    <value>※Cancel fee will be delete if the order is restored</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Client・Incharged staff</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="noteupload" xml:space="preserve">
    <value>ファイルをドラッグ＆ドロップするかクリップボードから画像を貼り付けしてください</value>
  </data>
  <data name="Number of units" xml:space="preserve">
    <value>Vehicle quantity</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="OperatingDay" xml:space="preserve">
    <value>Travel date</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation Type</value>
  </data>
  <data name="or" xml:space="preserve">
    <value>または</value>
  </data>
  <data name="Passenger" xml:space="preserve">
    <value>Number of passenger</value>
  </data>
  <data name="People" xml:space="preserve">
    <value>Pax</value>
  </data>
  <data name="Person in charge" xml:space="preserve">
    <value>In charged staff</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="PopupContentUpdateWhenConfimed" xml:space="preserve">
    <value>Order has been confirmed!</value>
  </data>
  <data name="PopupTitleError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="PopupTitleInfo" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="PopupTitleWarning" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Cancel reason</value>
  </data>
  <data name="reason_for_resurrection" xml:space="preserve">
    <value>Restoring reason</value>
  </data>
  <data name="Receipt DateTime" xml:space="preserve">
    <value>Return datetime</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="responsible_person" xml:space="preserve">
    <value>Restorer</value>
  </data>
  <data name="resurrection_date" xml:space="preserve">
    <value>Rerstored date</value>
  </data>
  <data name="reused" xml:space="preserve">
    <value>Restoration setting</value>
  </data>
  <data name="Sale Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="SalesAmount" xml:space="preserve">
    <value>Sales amount</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Travel date</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>ファイル選択....</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Cash out</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Jouney</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Rain prevention</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Operation Type</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Reception conditions</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="Tab1" xml:space="preserve">
    <value>Order 1</value>
  </data>
  <data name="Tab2" xml:space="preserve">
    <value>Order 2</value>
  </data>
  <data name="Tab3" xml:space="preserve">
    <value>Order remark</value>
  </data>
  <data name="Tab4" xml:space="preserve">
    <value>Aggregate</value>
  </data>
  <data name="Tab5" xml:space="preserve">
    <value>Jouney</value>
  </data>
  <data name="Tab6" xml:space="preserve">
    <value>Ancillary</value>
  </data>
  <data name="Tab7" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Tab8" xml:space="preserve">
    <value>Cancel・Restore</value>
  </data>
  <data name="Tab9" xml:space="preserve">
    <value>Arrangement</value>
  </data>
  <data name="TabUpload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="TaxIncluded" xml:space="preserve">
    <value>Tax included amount</value>
  </data>
  <data name="TehaiName" xml:space="preserve">
    <value>Arrangement name</value>
  </data>
  <data name="TitlePopupFutai" xml:space="preserve">
    <value>Included goods</value>
  </data>
  <data name="Tollbooth" xml:space="preserve">
    <value>Cash in</value>
  </data>
  <data name="Tsumi" xml:space="preserve">
    <value>Included goods</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="UpdateButton" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CancellationFee" xml:space="preserve">
    <value>Cancellation fee</value>
  </data>    
</root>