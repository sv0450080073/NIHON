<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="ArrangementFeeBilTyp" xml:space="preserve">
    <value>Arrangement Fee</value>
  </data>
  <data name="BatchPrint" xml:space="preserve">
    <value>Batch Print</value>
  </data>
  <data name="BillingAddress" xml:space="preserve">
    <value>Billing address:</value>
  </data>
  <data name="BillingAddressLabel" xml:space="preserve">
    <value>Billing address place</value>
  </data>
  <data name="BillingOffice" xml:space="preserve">
    <value>Billing sales office:</value>
  </data>
  <data name="BillingOfficeNullText" xml:space="preserve">
    <value>Reservation category name</value>
  </data>
  <data name="BillingType" xml:space="preserve">
    <value>Billing ancillary type:</value>
  </data>
  <data name="BillNumber" xml:space="preserve">
    <value>Bill number:</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>Please enter billing number!</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>Please enter the billing date!</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>There is an error in specifying the range of the order number!</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>There is an error in specifying the range of the reservation classification!</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>There is an error in specifying the range of the bill address code!</value>
  </data>
  <data name="BI_T006" xml:space="preserve">
    <value>Please enter bill sales office!</value>
  </data>
  <data name="BI_T007" xml:space="preserve">
    <value>Please enter issued date!</value>
  </data>
  <data name="BI_T008" xml:space="preserve">
    <value>The corresponding data does not exist!</value>
  </data>
  <data name="CancelFeeBilTyp" xml:space="preserve">
    <value>Cancel Fee</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Delete all</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ClosingDate" xml:space="preserve">
    <value>Closing date:</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>The following invoice was output.</value>
  </data>
  <data name="CustomerBrchNm" xml:space="preserve">
    <value>Branch name:</value>
  </data>
  <data name="CustomerNm" xml:space="preserve">
    <value>Customer name:</value>
  </data>
  <data name="DesignPrint" xml:space="preserve">
    <value>PrintAndSpecifyBillNumber</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="EndBillAdd" xml:space="preserve">
    <value>End bill address:</value>
  </data>
  <data name="EndRcpNum" xml:space="preserve">
    <value>End reservation number:</value>
  </data>
  <data name="EndRsrCat" xml:space="preserve">
    <value>End booking classification:</value>
  </data>
  <data name="FareBilTyp" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="FutaiBilTyp" xml:space="preserve">
    <value>Ancillary</value>
  </data>
  <data name="GuideFeeBilTyp" xml:space="preserve">
    <value>Guide fee</value>
  </data>
  <data name="HandlingCharPrt" xml:space="preserve">
    <value>Print commission fee:</value>
  </data>
  <data name="InvoiceOutNum" xml:space="preserve">
    <value>Bill output number</value>
  </data>
  <data name="InvoiceSerNum" xml:space="preserve">
    <value>Bill series number</value>
  </data>
  <data name="InvoiceYm" xml:space="preserve">
    <value>Bill year and month:</value>
  </data>
  <data name="IssueYmd" xml:space="preserve">
    <value>Issued date:</value>
  </data>
  <data name="LoadedItemBilTyp" xml:space="preserve">
    <value>Included goods</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>No data</value>
  </data>
  <data name="NoInvoiceOutput" xml:space="preserve">
    <value>The invoice could not be output.</value>
  </data>
  <data name="OutputInst" xml:space="preserve">
    <value>Output instruction:</value>
  </data>
  <data name="OutputSetting" xml:space="preserve">
    <value>Output setting</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Invoice output</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Print2" xml:space="preserve">
    <value>Single printing</value>
  </data>
  <data name="Print3" xml:space="preserve">
    <value>Multiple printing</value>
  </data>
  <data name="Printed" xml:space="preserve">
    <value>The output is done.</value>
  </data>
  <data name="PrintNum" xml:space="preserve">
    <value>Number of copies to print:</value>
  </data>
  <data name="ReceiptNumber" xml:space="preserve">
    <value>Reservation number:</value>
  </data>
  <data name="ReservationClassification" xml:space="preserve">
    <value>Service Type:</value>
  </data>
  <data name="SettingCondition" xml:space="preserve">
    <value>Condition setting</value>
  </data>
  <data name="SpecifyBillingAddress" xml:space="preserve">
    <value>Specify billing address:</value>
  </data>
  <data name="StartBillAdd" xml:space="preserve">
    <value>Start bill address:</value>
  </data>
  <data name="StartRcpNum" xml:space="preserve">
    <value>Start reservation number:</value>
  </data>
  <data name="StartRsrCat" xml:space="preserve">
    <value>Start service type:</value>
  </data>
  <data name="TollFeeBilTyp" xml:space="preserve">
    <value>Toll fee</value>
  </data>
  <data name="URLCopy" xml:space="preserve">
    <value>Copy URL</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>Zip code:</value>
  </data>
</root>