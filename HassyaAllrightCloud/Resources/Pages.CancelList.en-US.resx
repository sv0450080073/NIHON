<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="arrival" xml:space="preserve">
    <value>Drop off</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>End day must be greater than or equal to start day</value>
  </data>
  <data name="BI_T0010" xml:space="preserve">
    <value>Data not found</value>
  </data>
  <data name="BI_T0011" xml:space="preserve">
    <value>Order status is not found</value>
  </data>
  <data name="BI_T0012" xml:space="preserve">
    <value>Start code of branch must be less than or equal to end code of branch</value>
  </data>
  <data name="BI_T0013" xml:space="preserve">
    <value>Start code of staff must be less than or equal to end code of staff</value>
  </data>
  <data name="BI_T0014" xml:space="preserve">
    <value>Company is not found</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>Start code of client must be less than or equal to end code of client</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>Start code of supplier must be less than or equal to end code</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>Start order No.  staff must be less than or equal to end order No.</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>Could not get infromation of service type</value>
  </data>
  <data name="BI_T006" xml:space="preserve">
    <value>Client/supplier is not found</value>
  </data>
  <data name="BI_T007" xml:space="preserve">
    <value>Sale branch is not found</value>
  </data>
  <data name="BI_T008" xml:space="preserve">
    <value>Incharged staff is not found</value>
  </data>
  <data name="BI_T009" xml:space="preserve">
    <value>Please input Individual character!</value>
  </data>
  <data name="boarding_personnel" xml:space="preserve">
    <value>Number of passenger</value>
  </data>
  <data name="BookingType" xml:space="preserve">
    <value>Service Type</value>
  </data>
  <data name="booking_name" xml:space="preserve">
    <value>Order name</value>
  </data>
  <data name="Branch" xml:space="preserve">
    <value>Sale branch</value>
  </data>
  <data name="BreakCustomer" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="BreakNormal" xml:space="preserve">
    <value>Unselected</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="BtnSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="CancelBookingType" xml:space="preserve">
    <value>Order status</value>
  </data>
  <data name="CancelCharge" xml:space="preserve">
    <value>Cancel Fee</value>
  </data>
  <data name="CancelDateType" xml:space="preserve">
    <value>Date setting</value>
  </data>
  <data name="cancellation_date" xml:space="preserve">
    <value>Cancel date</value>
  </data>
  <data name="CancelStaff" xml:space="preserve">
    <value>Canceller</value>
  </data>
  <data name="CancelStaffNullText" xml:space="preserve">
    <value>Staff code : Staff name</value>
  </data>
  <data name="Choices" xml:space="preserve">
    <value>Select items</value>
  </data>
  <data name="clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Sale company</value>
  </data>
  <data name="condition" xml:space="preserve">
    <value>Condition setting</value>
  </data>
  <data name="consumption_tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="csv" xml:space="preserve">
    <value>CSV</value>
  </data>
  <data name="CsvGroup" xml:space="preserve">
    <value>Data cover</value>
  </data>
  <data name="CsvGrQuotesMarks" xml:space="preserve">
    <value>Wrap in quote</value>
  </data>
  <data name="CsvGrWithoutQuotes" xml:space="preserve">
    <value>Not wrap in quote</value>
  </data>
  <data name="CsvHadHeader" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="CsvHeader" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="CsvMode" xml:space="preserve">
    <value>CSV</value>
  </data>
  <data name="CsvSeparator" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="CsvSeparatorNullText" xml:space="preserve">
    <value>※Other character</value>
  </data>
  <data name="CsvSetting" xml:space="preserve">
    <value>CSV setting</value>
  </data>
  <data name="CsvSpaceComma" xml:space="preserve">
    <value>Comma</value>
  </data>
  <data name="CsvSpaceFixedLength" xml:space="preserve">
    <value>Fixed lenght</value>
  </data>
  <data name="CsvSpaceOther" xml:space="preserve">
    <value>Other character</value>
  </data>
  <data name="CsvSpaceSemicolon" xml:space="preserve">
    <value>Semicolon</value>
  </data>
  <data name="CsvSpacing" xml:space="preserve">
    <value>Space</value>
  </data>
  <data name="CsvWithoutHeader" xml:space="preserve">
    <value>Not output</value>
  </data>
  <data name="csv_setting" xml:space="preserve">
    <value>CSV setting</value>
  </data>
  <data name="Cumulative" xml:space="preserve">
    <value>SUM</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="CustomerNullText" xml:space="preserve">
    <value>Client code:  Client name:  Branch code:  Branch name</value>
  </data>
  <data name="customer_contact" xml:space="preserve">
    <value>Client・In charged staff</value>
  </data>
  <data name="customer_name" xml:space="preserve">
    <value>Client name</value>
  </data>
  <data name="destination_name" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="display_order" xml:space="preserve">
    <value>Display order</value>
  </data>
  <data name="fare" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="fee" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="FeeCommissionTotal" xml:space="preserve">
    <value>Fare with tax</value>
  </data>
  <data name="FeeTaxTotal" xml:space="preserve">
    <value>Fare tax</value>
  </data>
  <data name="form_setting" xml:space="preserve">
    <value>Report setting</value>
  </data>
  <data name="grouping_output" xml:space="preserve">
    <value>Data cover</value>
  </data>
  <data name="GuideFeeCommissionTotal" xml:space="preserve">
    <value>Cancel fee (tax included)</value>
  </data>
  <data name="GuideFeeTaxTotal" xml:space="preserve">
    <value>Cancel tax</value>
  </data>
  <data name="guide_fee" xml:space="preserve">
    <value>Cancel Fee</value>
  </data>
  <data name="heading_ouput" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="initialize" xml:space="preserve">
    <value>初期化</value>
  </data>
  <data name="input_person" xml:space="preserve">
    <value>Input staff</value>
  </data>
  <data name="invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="issue_date" xml:space="preserve">
    <value>Issued date</value>
  </data>
  <data name="large" xml:space="preserve">
    <value>大</value>
  </data>
  <data name="medium" xml:space="preserve">
    <value>中</value>
  </data>
  <data name="nextday" xml:space="preserve">
    <value>Drop off date</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="number_of_cancellations" xml:space="preserve">
    <value>Cancel record</value>
  </data>
  <data name="number_of_units" xml:space="preserve">
    <value>Vehicle quantity</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="organization_name" xml:space="preserve">
    <value>Organization name</value>
  </data>
  <data name="pagebreak_specification" xml:space="preserve">
    <value>Break page</value>
  </data>
  <data name="PageTotal" xml:space="preserve">
    <value>Page Sum</value>
  </data>
  <data name="page_title" xml:space="preserve">
    <value>Cancelled list</value>
  </data>
  <data name="pdf" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="person_in_charge" xml:space="preserve">
    <value>In charged staff</value>
  </data>
  <data name="plus_people" xml:space="preserve">
    <value>Plus pax</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="print_mode" xml:space="preserve">
    <value>Export option</value>
  </data>
  <data name="processing_division" xml:space="preserve">
    <value>Cancel status</value>
  </data>
  <data name="reason_cancel" xml:space="preserve">
    <value>Cancel reason</value>
  </data>
  <data name="reception_committee_sales_office" xml:space="preserve">
    <value>Sale branch</value>
  </data>
  <data name="ReportTitle" xml:space="preserve">
    <value>Cancelled list</value>
  </data>
  <data name="sales" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="sales_office" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="secretary_name" xml:space="preserve">
    <value>Client・Incharged staff</value>
  </data>
  <data name="separator_output" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="size_of_paper" xml:space="preserve">
    <value>Paper size</value>
  </data>
  <data name="small" xml:space="preserve">
    <value>小</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>Sale staff</value>
  </data>
  <data name="StaffNullText" xml:space="preserve">
    <value>Staff code : Staff name</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="SupplierNullText" xml:space="preserve">
    <value>Supplier code:  Supplier name:  Branch code: Branch name</value>
  </data>
  <data name="supplier_name" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="switching_width" xml:space="preserve">
    <value>幅切替</value>
  </data>
  <data name="tab_1" xml:space="preserve">
    <value>条件設定</value>
  </data>
  <data name="tab_2" xml:space="preserve">
    <value>表示設定</value>
  </data>
  <data name="tab_3" xml:space="preserve">
    <value>帳票出力</value>
  </data>
  <data name="tab_4" xml:space="preserve">
    <value>レイアウト設定</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UkeCd" xml:space="preserve">
    <value>Order No.</value>
  </data>
  <data name="UkeYmd" xml:space="preserve">
    <value>Ordered date</value>
  </data>
  <data name="vehicle_delivery" xml:space="preserve">
    <value>Pickup year month day</value>
  </data>
  <data name="vehicle_dispatch" xml:space="preserve">
    <value>Bus allocation</value>
  </data>
  <data name="vehicle_type" xml:space="preserve">
    <value>Vehicle type (size)</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Have</value>
  </data>
</root>