<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Absence" xml:space="preserve">
    <value>Nghỉ làm</value>
  </data>
  <data name="AscendingTimeForOneWeek" xml:space="preserve">
    <value>Sắp xếp theo ít thời gian kẹt trong 1 tuần</value>
  </data>
  <data name="Assigned Work" xml:space="preserve">
    <value>Công việc được giao</value>
  </data>
  <data name="BO" xml:space="preserve">
    <value>Làm trong văn phòng</value>
  </data>
  <data name="Crew Sort Order" xml:space="preserve">
    <value>Sắp sếp theo nhân viên theo xe</value>
  </data>
  <data name="Date Next" xml:space="preserve">
    <value>Ngày sau</value>
  </data>
  <data name="Date Prev" xml:space="preserve">
    <value>Ngày trước</value>
  </data>
  <data name="Display" xml:space="preserve">
    <value>Hiển thị:</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Tài xế</value>
  </data>
  <data name="Earlier Order" xml:space="preserve">
    <value>Sắp sếp theo thời gian sớm nhất</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Nhiệm vụ nhân viên</value>
  </data>
  <data name="Employee code order" xml:space="preserve">
    <value>Sắp sếp theo mã nhân viên</value>
  </data>
  <data name="FourWeeksLessTime" xml:space="preserve">
    <value>Sắp xếp theo ít thời gian kẹt trong 4 tuần</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Chia nhóm:</value>
  </data>
  <data name="Group All" xml:space="preserve">
    <value>Không</value>
  </data>
  <data name="Group Branch" xml:space="preserve">
    <value>Chi nhánh</value>
  </data>
  <data name="Group Company" xml:space="preserve">
    <value>Công ty</value>
  </data>
  <data name="Guide" xml:space="preserve">
    <value>Hướng dẫn</value>
  </data>
  <data name="Holidays" xml:space="preserve">
    <value>hạng mục ngày nghỉ</value>
  </data>
  <data name="Job Order" xml:space="preserve">
    <value>sắp xếp theo </value>
  </data>
  <data name="Line" xml:space="preserve">
    <value>Đổi kích thước dòng:</value>
  </data>
  <data name="Line Large" xml:space="preserve">
    <value>Lớn</value>
  </data>
  <data name="Line Medium" xml:space="preserve">
    <value>Vừa</value>
  </data>
  <data name="Line Small" xml:space="preserve">
    <value>Nhỏ</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>15 phút</value>
  </data>
  <data name="One Hour" xml:space="preserve">
    <value>1 giờ</value>
  </data>
  <data name="Previous day end time" xml:space="preserve">
    <value>Sắp sếp theo thời gian kết thúc sớm nhất của ngày trước</value>
  </data>
  <data name="return_to_unallocated_work" xml:space="preserve">
    <value>Quay về công việc chưa phân công</value>
  </data>
  <data name="Rolling Order" xml:space="preserve">
    <value>Thứ tự điểm danh</value>
  </data>
  <data name="Service item" xml:space="preserve">
    <value>Trách nhiệm</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>thứ tự sắp sếp:</value>
  </data>
  <data name="Three Hours" xml:space="preserve">
    <value>3 giờ</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Khung giờ:</value>
  </data>
  <data name="Time later" xml:space="preserve">
    <value>Theo thời gian mới nhất</value>
  </data>
  <data name="Title Condition" xml:space="preserve">
    <value>Điều kiện hiển thị</value>
  </data>
  <data name="Title Page" xml:space="preserve">
    <value>Điều nhân viên</value>
  </data>
  <data name="Unallocated" xml:space="preserve">
    <value>Chưa phân công</value>
  </data>
  <data name="Vehicle" xml:space="preserve">
    <value>Xe</value>
  </data>
  <data name="Vehicle Sort Order" xml:space="preserve">
    <value>Sắp xếp theo thứ tự xe</value>
  </data>
  <data name="Work" xml:space="preserve">
    <value>công việc </value>
  </data>
  <data name="Work Order" xml:space="preserve">
    <value>Theo thứ tự công việc</value>
  </data>
  <data name="Work Sort Order" xml:space="preserve">
    <value>Sắp sếp theo thứ tự công việc:</value>
  </data>
</root>