<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActualKmCol" xml:space="preserve">
    <value>Actual km</value>
  </data>
  <data name="ActualTimeCol" xml:space="preserve">
    <value>Actual time</value>
  </data>
  <data name="AnnualContractLabel" xml:space="preserve">
    <value>Annual Contract</value>
  </data>
  <data name="AnnualContractNoneLabel" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="AnnualContractYesLabel" xml:space="preserve">
    <value>Have</value>
  </data>
  <data name="BusArrivalTimeLabel" xml:space="preserve">
    <value>Arrival Time</value>
  </data>
  <data name="BusStartTimeLabel" xml:space="preserve">
    <value>Pick up time</value>
  </data>
  <data name="BusTypeLabel" xml:space="preserve">
    <value>Vehicle type</value>
  </data>
  <data name="CalculatedGridKmTimeLabel" xml:space="preserve">
    <value>Rounded Total km・time</value>
  </data>
  <data name="ChangeDriverCol" xml:space="preserve">
    <value>Shift change</value>
  </data>
  <data name="ChangeDriverHourFeeLabel" xml:space="preserve">
    <value>Shift change by time</value>
  </data>
  <data name="ChangeDriverKmCol" xml:space="preserve">
    <value>Estimate Km</value>
  </data>
  <data name="ChangeDriverKmFeeLabel" xml:space="preserve">
    <value>Shift change by km</value>
  </data>
  <data name="ChangeDriverMidnightMorningCol" xml:space="preserve">
    <value>Midnight shift&lt;br /&gt;hour</value>
  </data>
  <data name="ChangeDriverTimeCol" xml:space="preserve">
    <value>Working time</value>
  </data>
  <data name="ClearCol" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ConfigurationButton" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="DateCol" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateOfSchedulerRow" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DetailsOfFee" xml:space="preserve">
    <value>Fee detail</value>
  </data>
  <data name="DetailsOfPriceLabel" xml:space="preserve">
    <value>Fare detail</value>
  </data>
  <data name="DiscountLabel" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="DiscountNoneLabel" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DiscountThirtyLabel" xml:space="preserve">
    <value>30% for disabled  person</value>
  </data>
  <data name="DiscountTwentyLabel" xml:space="preserve">
    <value>20% for educational organization</value>
  </data>
  <data name="EndTimeCol" xml:space="preserve">
    <value>Check end time</value>
  </data>
  <data name="EstimateKmCol" xml:space="preserve">
    <value>Estimate Km</value>
  </data>
  <data name="FareCol" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="FeeCol" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="GarageLeaveTimeLabel" xml:space="preserve">
    <value>Leave date time</value>
  </data>
  <data name="GarageReturnTimeLabel" xml:space="preserve">
    <value>Return datetime</value>
  </data>
  <data name="KmCol" xml:space="preserve">
    <value>Limited km</value>
  </data>
  <data name="KmPriceLabel" xml:space="preserve">
    <value>Limited fare</value>
  </data>
  <data name="LowerLimitFeeLabel" xml:space="preserve">
    <value>Lowest fee</value>
  </data>
  <data name="LowerLimitLabel" xml:space="preserve">
    <value>Lowest amount</value>
  </data>
  <data name="LowerLimitPriceLabel" xml:space="preserve">
    <value>Lowest fee</value>
  </data>
  <data name="MidnightMorningCol" xml:space="preserve">
    <value>Midnight shift&lt;br /&gt;hour</value>
  </data>
  <data name="MidnightMorningFeeLabel" xml:space="preserve">
    <value>Midnight charge/discount</value>
  </data>
  <data name="MX_T001.1" xml:space="preserve">
    <value>Please input fare between lowest and highest amount</value>
  </data>
  <data name="MX_T001.2" xml:space="preserve">
    <value>Please input fee between lowest and highest amount</value>
  </data>
  <data name="MX_T002" xml:space="preserve">
    <value>Check end  time must be later than check start time</value>
  </data>
  <data name="MX_T003" xml:space="preserve">
    <value>Actual km must be less than estimate km</value>
  </data>
  <data name="MX_T004" xml:space="preserve">
    <value>Actual time must be less than estimate time</value>
  </data>
  <data name="MX_T005" xml:space="preserve">
    <value>Please select Transport Bureau</value>
  </data>
  <data name="MX_T006" xml:space="preserve">
    <value>Estimate Km must be alpahbet number and less than 5 cahracters</value>
  </data>
  <data name="RestraintTimeCol" xml:space="preserve">
    <value>Working time</value>
  </data>
  <data name="SpecialVehicleFeeLabel" xml:space="preserve">
    <value>Charge/discount for special vehicle</value>
  </data>
  <data name="SpecialVehicleLabel" xml:space="preserve">
    <value>Charge/discount for special vehicle</value>
  </data>
  <data name="SpecialVehicleNoneLabel" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="SpecialVehicleYesLabel" xml:space="preserve">
    <value>Have</value>
  </data>
  <data name="StartTimeCol" xml:space="preserve">
    <value>Previous day・Check start</value>
  </data>
  <data name="TaxRateLabel" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="TimeCol" xml:space="preserve">
    <value>Limited time</value>
  </data>
  <data name="TimePriceLabel" xml:space="preserve">
    <value>Limited fare by time</value>
  </data>
  <data name="TotalFeeLabel" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalFeeRowLabel" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="TotalGridLabel" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalPriceFeeRowLabel" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="TotalPriceLabel" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalPriceRowLabel" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="TransportationOfficeLabel" xml:space="preserve">
    <value>Transport Bureau</value>
  </data>
  <data name="UpperLimitFeeLabel" xml:space="preserve">
    <value>Highest fee</value>
  </data>
  <data name="UpperLimitLabel" xml:space="preserve">
    <value>Highest fee (included Discount)</value>
  </data>
  <data name="UpperLimitPriceLabel" xml:space="preserve">
    <value>Highest fee</value>
  </data>
  <data name="YesNoCol" xml:space="preserve">
    <value>Yes/No</value>
  </data>
</root>