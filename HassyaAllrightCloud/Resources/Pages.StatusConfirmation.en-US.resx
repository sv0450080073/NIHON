<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ammount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>Start date must be less than or equal to end date</value>
  </data>
  <data name="BI_T0010" xml:space="preserve">
    <value>Client is not found</value>
  </data>
  <data name="BI_T0013" xml:space="preserve">
    <value>Please input Individual character!</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>End date must be greater than or equal to start date</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>Code of Sale branch (From) must be less than or equal to code of sale branch (To)</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>Code of client (From) must be less than or equal to code of client (To)</value>
  </data>
  <data name="BI_T007" xml:space="preserve">
    <value>Could not get information of company</value>
  </data>
  <data name="BI_T008" xml:space="preserve">
    <value>Sale branch is not found</value>
  </data>
  <data name="BI_T009" xml:space="preserve">
    <value>Data not found</value>
  </data>
  <data name="BookingNo" xml:space="preserve">
    <value>Order No.</value>
  </data>
  <data name="BookingType" xml:space="preserve">
    <value>Service Type</value>
  </data>
  <data name="BranchOptions" xml:space="preserve">
    <value>Sale branch</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="BtnOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="BtnSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="BusFee" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="BusName" xml:space="preserve">
    <value>Name of vehicle type</value>
  </data>
  <data name="BusType" xml:space="preserve">
    <value>Vehicle size</value>
  </data>
  <data name="BusTypeInfo" xml:space="preserve">
    <value>Vehicle type</value>
  </data>
  <data name="ClearAllOptions" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CompanyOptions" xml:space="preserve">
    <value>Sale company</value>
  </data>
  <data name="ConditionSearch" xml:space="preserve">
    <value>Condition setting</value>
  </data>
  <data name="Confirmed" xml:space="preserve">
    <value>Have</value>
  </data>
  <data name="ConfirmedBy" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="ConfirmedPerson" xml:space="preserve">
    <value>Number of confirmer</value>
  </data>
  <data name="ConfirmedStatus" xml:space="preserve">
    <value>Confirm status</value>
  </data>
  <data name="ConfirmedTime" xml:space="preserve">
    <value>Time of confirming</value>
  </data>
  <data name="ConfirmedYmd" xml:space="preserve">
    <value>Confirmed date</value>
  </data>
  <data name="ConsumptionTax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="CsvGroup" xml:space="preserve">
    <value>Data cover</value>
  </data>
  <data name="CsvGrQuotesMarks" xml:space="preserve">
    <value>Wrap in quote</value>
  </data>
  <data name="CsvGrWithoutQuotes" xml:space="preserve">
    <value>Not wrap in quote</value>
  </data>
  <data name="CsvHadHeader" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="CsvHeader" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="CsvMode" xml:space="preserve">
    <value>CSV</value>
  </data>
  <data name="CsvSeparator" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="CsvSeparatorNullText" xml:space="preserve">
    <value>※Other character</value>
  </data>
  <data name="CsvSetting" xml:space="preserve">
    <value>CSV setting</value>
  </data>
  <data name="CsvSpaceComma" xml:space="preserve">
    <value>Comma</value>
  </data>
  <data name="CsvSpaceFixedLength" xml:space="preserve">
    <value>Fixed lenght</value>
  </data>
  <data name="CsvSpaceOther" xml:space="preserve">
    <value>Other character</value>
  </data>
  <data name="CsvSpaceSemicolon" xml:space="preserve">
    <value>Semicolon</value>
  </data>
  <data name="CsvSpacing" xml:space="preserve">
    <value>Space</value>
  </data>
  <data name="CsvWithoutHeader" xml:space="preserve">
    <value>Not output</value>
  </data>
  <data name="CT_Eight" xml:space="preserve">
    <value>8 times</value>
  </data>
  <data name="CT_Five" xml:space="preserve">
    <value>5 times</value>
  </data>
  <data name="CT_Four" xml:space="preserve">
    <value>4 times</value>
  </data>
  <data name="CT_Nine" xml:space="preserve">
    <value>9 times</value>
  </data>
  <data name="CT_One" xml:space="preserve">
    <value>Once</value>
  </data>
  <data name="CT_Other" xml:space="preserve">
    <value>10 times and up</value>
  </data>
  <data name="CT_Seven" xml:space="preserve">
    <value>7 times</value>
  </data>
  <data name="CT_Six" xml:space="preserve">
    <value>6 times</value>
  </data>
  <data name="CT_Three" xml:space="preserve">
    <value>3 times</value>
  </data>
  <data name="CT_Two" xml:space="preserve">
    <value>Twice</value>
  </data>
  <data name="Cumulative" xml:space="preserve">
    <value>SUM</value>
  </data>
  <data name="CustomerOptions" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="CustomerOptionsNullText" xml:space="preserve">
    <value>Client code:  Client name:  Branch code:  Branch name</value>
  </data>
  <data name="Daisu" xml:space="preserve">
    <value>Vehicle quantity</value>
  </data>
  <data name="DanTaiName" xml:space="preserve">
    <value>Organization name</value>
  </data>
  <data name="DateOptions" xml:space="preserve">
    <value>Operation date</value>
  </data>
  <data name="DestinationName" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="FeeAmount" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="Fixed" xml:space="preserve">
    <value>Confirmed</value>
  </data>
  <data name="FixedStatus" xml:space="preserve">
    <value>Approval status</value>
  </data>
  <data name="FixedYmd" xml:space="preserve">
    <value>Approved date</value>
  </data>
  <data name="Futai" xml:space="preserve">
    <value>Ancillary</value>
  </data>
  <data name="Guide" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="GuideCharge" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="GuideFee" xml:space="preserve">
    <value>Guide fee</value>
  </data>
  <data name="GuideTax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="HaishaInfo" xml:space="preserve">
    <value>Vehicle allocation</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="InitGridLayout" xml:space="preserve">
    <value>Layout initialization</value>
  </data>
  <data name="InputBy" xml:space="preserve">
    <value>Input staff</value>
  </data>
  <data name="KanjiName" xml:space="preserve">
    <value>Client・Incharged staff</value>
  </data>
  <data name="Kotei" xml:space="preserve">
    <value>Jouney</value>
  </data>
  <data name="NoteContent" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OutputMode" xml:space="preserve">
    <value>Export option</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Confirm status</value>
  </data>
  <data name="PageTotal" xml:space="preserve">
    <value>Page Sum</value>
  </data>
  <data name="PaperSetting" xml:space="preserve">
    <value>Report setting</value>
  </data>
  <data name="PaperSize" xml:space="preserve">
    <value>Paper size</value>
  </data>
  <data name="PassengerInfo" xml:space="preserve">
    <value>Number of passenger</value>
  </data>
  <data name="PdfMode" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="PeopleUnit" xml:space="preserve">
    <value>Pax</value>
  </data>
  <data name="PreviewMode" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PrintMode" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="ReceivedBy" xml:space="preserve">
    <value>Sale staff</value>
  </data>
  <data name="ReceivedYmd" xml:space="preserve">
    <value>Ordered date</value>
  </data>
  <data name="ReportTitle" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Saikou" xml:space="preserve">
    <value>Perform</value>
  </data>
  <data name="SaveGridLayout" xml:space="preserve">
    <value>Save layout</value>
  </data>
  <data name="ScheduleDate" xml:space="preserve">
    <value>Travel date</value>
  </data>
  <data name="ShiireSaki" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="SumBusCharge" xml:space="preserve">
    <value>Fare charge</value>
  </data>
  <data name="SumBusFee" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="SumBusTax" xml:space="preserve">
    <value>Fare tax</value>
  </data>
  <data name="SumDai" xml:space="preserve">
    <value>Vehicle quantity</value>
  </data>
  <data name="SumGuideCharge" xml:space="preserve">
    <value>Guide commission</value>
  </data>
  <data name="SumGuideFee" xml:space="preserve">
    <value>Guide fee</value>
  </data>
  <data name="SumGuideTax" xml:space="preserve">
    <value>Guide tax</value>
  </data>
  <data name="tab_1" xml:space="preserve">
    <value>Basic search</value>
  </data>
  <data name="tab_2" xml:space="preserve">
    <value>Advance search</value>
  </data>
  <data name="tab_3" xml:space="preserve">
    <value>Export report</value>
  </data>
  <data name="Tehai" xml:space="preserve">
    <value>Arrangement</value>
  </data>
  <data name="TokuiSaki" xml:space="preserve">
    <value>Client name</value>
  </data>
  <data name="TokuiStaff" xml:space="preserve">
    <value>Client・In charged staff</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TouInfo" xml:space="preserve">
    <value>Drop off info</value>
  </data>
  <data name="TsuMi" xml:space="preserve">
    <value>Goods add</value>
  </data>
  <data name="UnConfirmed" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Unfixed" xml:space="preserve">
    <value>Unconfirmed</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unspecified</value>
  </data>
</root>