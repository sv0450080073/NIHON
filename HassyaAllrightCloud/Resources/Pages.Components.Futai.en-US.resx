<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accrual_date" xml:space="preserve">
    <value>Using date</value>
  </data>
  <data name="addnew" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="advanced_setting" xml:space="preserve">
    <value>Advance setting</value>
  </data>
  <data name="affiliation_office" xml:space="preserve">
    <value>Affiliated branch</value>
  </data>
  <data name="arrival_date" xml:space="preserve">
    <value>Arrival Time</value>
  </data>
  <data name="arrival_place_name" xml:space="preserve">
    <value>Drop off location</value>
  </data>
  <data name="billing_remarks" xml:space="preserve">
    <value>Billing remark</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>Can not update because the order has been paid</value>
  </data>
  <data name="BI_T0010" xml:space="preserve">
    <value>Are you sure to delete?</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>Please select supplier</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>The quantity does not match with total quantity</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>Please select ancillary code</value>
  </data>
  <data name="BI_T006" xml:space="preserve">
    <value>Please select code of included goods !</value>
  </data>
  <data name="BI_T007" xml:space="preserve">
    <value>Please select settlement code</value>
  </data>
  <data name="BI_T008" xml:space="preserve">
    <value>Update has successed</value>
  </data>
  <data name="BI_T009" xml:space="preserve">
    <value>Update has failed</value>
  </data>
  <data name="boarding_personnel" xml:space="preserve">
    <value>Number of passenger</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="car" xml:space="preserve">
    <value>Vehicle name</value>
  </data>
  <data name="car_number" xml:space="preserve">
    <value>Vehicle number</value>
  </data>
  <data name="clearing_category" xml:space="preserve">
    <value>Settlement Type</value>
  </data>
  <data name="clearing_code" xml:space="preserve">
    <value>Settlement code</value>
  </data>
  <data name="consumption_tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="consumption_tax_rate" xml:space="preserve">
    <value>Tax rate・Tax</value>
  </data>
  <data name="customer" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="customer_contact" xml:space="preserve">
    <value>Client・In charged staff</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="delivery_time" xml:space="preserve">
    <value>Pickup date time</value>
  </data>
  <data name="departure_time" xml:space="preserve">
    <value>Departure time</value>
  </data>
  <data name="depot_name" xml:space="preserve">
    <value>Pickup location</value>
  </data>
  <data name="destination_name" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="fax_number" xml:space="preserve">
    <value>FAX</value>
  </data>
  <data name="fee" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="futai" xml:space="preserve">
    <value>Ancillary</value>
  </data>
  <data name="incidental" xml:space="preserve">
    <value>Ancillary</value>
  </data>
  <data name="incidental_charges" xml:space="preserve">
    <value>Ancillary fee</value>
  </data>
  <data name="incidental_name" xml:space="preserve">
    <value>Ancillary name</value>
  </data>
  <data name="incidental_name_code" xml:space="preserve">
    <value>Ancillary code</value>
  </data>
  <data name="liquidation_name" xml:space="preserve">
    <value>Settlement</value>
  </data>
  <data name="loadedproductname" xml:space="preserve">
    <value>Included goods</value>
  </data>
  <data name="loading_code" xml:space="preserve">
    <value>Code of Included good</value>
  </data>
  <data name="mercenary" xml:space="preserve">
    <value>Partner</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="number_of_drivers" xml:space="preserve">
    <value>Number of driver</value>
  </data>
  <data name="number_of_guides" xml:space="preserve">
    <value>Number of guide</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="operating_schedule" xml:space="preserve">
    <value>Travel date</value>
  </data>
  <data name="organization_name" xml:space="preserve">
    <value>Organization name</value>
  </data>
  <data name="other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="phone_number" xml:space="preserve">
    <value>TEL</value>
  </data>
  <data name="PopupTitleError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="PopupTitleInfo" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="purchase" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="receipt_number" xml:space="preserve">
    <value>Order No.</value>
  </data>
  <data name="reception_date" xml:space="preserve">
    <value>ordered date</value>
  </data>
  <data name="reservation_classification" xml:space="preserve">
    <value>Service Type</value>
  </data>
  <data name="sales" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="sales_amount" xml:space="preserve">
    <value>Sales amount</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="schedule" xml:space="preserve">
    <value>Travel date</value>
  </data>
  <data name="tax_included" xml:space="preserve">
    <value>Tax included amount</value>
  </data>
  <data name="tollbooth" xml:space="preserve">
    <value>Cash in</value>
  </data>
  <data name="tollbooth2" xml:space="preserve">
    <value>Cash out</value>
  </data>
  <data name="tollboothroadcode" xml:space="preserve">
    <value>Road ocde of cash in</value>
  </data>
  <data name="tollboothroadcode2" xml:space="preserve">
    <value>Road code of cash out</value>
  </data>
  <data name="tsumi" xml:space="preserve">
    <value>Included goods</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="unit_price" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="vehicle_code" xml:space="preserve">
    <value>Vehicle code</value>
  </data>
  <data name="vehicle_delivery_date" xml:space="preserve">
    <value>Pickup year month day</value>
  </data>
  <data name="vehicle_information" xml:space="preserve">
    <value>Vehicle info</value>
  </data>
  <data name="VerificationDelete" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>