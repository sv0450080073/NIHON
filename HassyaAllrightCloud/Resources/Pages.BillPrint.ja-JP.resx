<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address1" xml:space="preserve">
    <value>住所1</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>住所2</value>
  </data>
  <data name="ArrangementFeeBilTyp" xml:space="preserve">
    <value>手配料</value>
  </data>
  <data name="BatchPrint" xml:space="preserve">
    <value>一括印字</value>
  </data>
  <data name="BillingAddress" xml:space="preserve">
    <value>請求先</value>
  </data>
  <data name="BillingAddressLabel" xml:space="preserve">
    <value>請求先住所</value>
  </data>
  <data name="BillingOffice" xml:space="preserve">
    <value>請求営業所</value>
  </data>
  <data name="BillingOfficeNullText" xml:space="preserve">
    <value>予約区分名</value>
  </data>
  <data name="BillingType" xml:space="preserve">
    <value>請求付帯種別</value>
  </data>
  <data name="BillNumber" xml:space="preserve">
    <value>請求書番号</value>
  </data>
  <data name="BI_T001" xml:space="preserve">
    <value>請求書番号を入力してください！</value>
  </data>
  <data name="BI_T002" xml:space="preserve">
    <value>請求年月を入力してください！</value>
  </data>
  <data name="BI_T003" xml:space="preserve">
    <value>受付番号の範囲指定に誤りがあります！</value>
  </data>
  <data name="BI_T004" xml:space="preserve">
    <value>予約区分の範囲指定に誤りがあります！</value>
  </data>
  <data name="BI_T005" xml:space="preserve">
    <value>請求先コードの範囲指定に誤りがあります！</value>
  </data>
  <data name="BI_T006" xml:space="preserve">
    <value>請求営業所を入力してください！</value>
  </data>
  <data name="BI_T007" xml:space="preserve">
    <value>発行年月日を入力してください！</value>
  </data>
  <data name="BI_T008" xml:space="preserve">
    <value>該当データが存在しません！</value>
  </data>
  <data name="CancelFeeBilTyp" xml:space="preserve">
    <value>キャンセル料</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="ClosingDate" xml:space="preserve">
    <value>締日</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>以下の請求書を出力しました。</value>
  </data>
  <data name="CustomerBrchNm" xml:space="preserve">
    <value>支店名</value>
  </data>
  <data name="CustomerNm" xml:space="preserve">
    <value>得意先名</value>
  </data>
  <data name="DesignPrint" xml:space="preserve">
    <value>請求書番号指定印字</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="EndBillAdd" xml:space="preserve">
    <value>終了請求先</value>
  </data>
  <data name="EndRcpNum" xml:space="preserve">
    <value>終了受付番号</value>
  </data>
  <data name="EndRsrCat" xml:space="preserve">
    <value>終了予約区分</value>
  </data>
  <data name="FareBilTyp" xml:space="preserve">
    <value>運賃</value>
  </data>
  <data name="FormOutput" xml:space="preserve">
    <value>帳票出力</value>
  </data>
  <data name="FutaiBilTyp" xml:space="preserve">
    <value>付帯</value>
  </data>
  <data name="GuideFeeBilTyp" xml:space="preserve">
    <value>ガイド料</value>
  </data>
  <data name="HandlingCharPrt" xml:space="preserve">
    <value>手数料印字</value>
  </data>
  <data name="InvoiceOutNum" xml:space="preserve">
    <value>請求書出力番号</value>
  </data>
  <data name="InvoiceSerNum" xml:space="preserve">
    <value>請求書連番</value>
  </data>
  <data name="InvoiceYm" xml:space="preserve">
    <value>請求書年月</value>
  </data>
  <data name="IssueYmd" xml:space="preserve">
    <value>発行年月日</value>
  </data>
  <data name="LoadedItemBilTyp" xml:space="preserve">
    <value>積込品</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>対象データがありません。</value>
  </data>
  <data name="NoInvoiceOutput" xml:space="preserve">
    <value>請求書を出力できませんでした。</value>
  </data>
  <data name="OutputInst" xml:space="preserve">
    <value>出力指示</value>
  </data>
  <data name="OutputSetting" xml:space="preserve">
    <value>出力設定</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>請求書出力</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value> 印刷</value>
  </data>
  <data name="Print2" xml:space="preserve">
    <value>単独印字</value>
  </data>
  <data name="Print3" xml:space="preserve">
    <value>複数印字</value>
  </data>
  <data name="Printed" xml:space="preserve">
    <value>出力完了しました。</value>
  </data>
  <data name="PrintNum" xml:space="preserve">
    <value>印字部数</value>
  </data>
  <data name="ReceiptNumber" xml:space="preserve">
    <value>受付番号</value>
  </data>
  <data name="ReservationClassification" xml:space="preserve">
    <value>予約区分</value>
  </data>
  <data name="SettingCondition" xml:space="preserve">
    <value>条件設定</value>
  </data>
  <data name="SpecifyBillingAddress" xml:space="preserve">
    <value>請求先指定</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="StartBillAdd" xml:space="preserve">
    <value>開始請求先</value>
  </data>
  <data name="StartRcpNum" xml:space="preserve">
    <value>開始受付番号</value>
  </data>
  <data name="StartRsrCat" xml:space="preserve">
    <value>開始予約区分</value>
  </data>
  <data name="TollFeeBilTyp" xml:space="preserve">
    <value>通行料</value>
  </data>
  <data name="URLCopy" xml:space="preserve">
    <value>URLコピー</value>
  </data>
  <data name="ZipCode" xml:space="preserve">
    <value>郵便番号</value>
  </data>
</root>