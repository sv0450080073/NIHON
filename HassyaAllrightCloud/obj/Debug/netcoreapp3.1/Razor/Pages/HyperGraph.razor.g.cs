#pragma checksum "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "77696c0b4e688ce07c6c6d1d842af8c9566c9ba9"
// <auto-generated/>
#pragma warning disable 1591
namespace HassyaAllrightCloud.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Infrastructure.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Domain.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Domain.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Constants;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using BlazorContextMenu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Application.Validation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Validation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Newtonsoft.Json.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.IService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using LexLibrary.Line.NotifyBot.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using LexLibrary.Line.NotifyBot;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using DevExpress.Blazor.Reporting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Pages.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using SharedLibraries.UI.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using SharedLibraries.UI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 38 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Pages.Components.CommonComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using HassyaAllrightCloud.IService.CommonComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using HassyaAllrightCloud.Domain.Dto.CommonComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using OfficeOpenXml;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using BlazorDownloadFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using OfficeOpenXml.Drawing.Chart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using OfficeOpenXml.Style;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using System.Drawing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
using System.Xml;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/hypergraph")]
    public partial class HyperGraph : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "excel-output-wrapper");
            __builder.AddMarkupContent(2, "\r\n    ");
            __builder.OpenElement(3, "button");
            __builder.AddAttribute(4, "class", "excel-output btn btn-primary");
            __builder.AddAttribute(5, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 33 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           ExcelExport

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(6, "title", 
#nullable restore
#line 33 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                               Lang["ExcelExport"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(7, "\r\n        <i class=\"fa fa-table\"></i>\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(8, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(9, "\r\n");
#nullable restore
#line 37 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
 foreach (int index in Enumerable.Range(0, GraphList.Count).ToList())
{
    switch (GraphList[index])
    {
        case GraphPattern.BarLineSaleQuan:

#line default
#line hidden
#nullable disable
            __builder.AddContent(10, "            ");
            __builder.OpenElement(11, "div");
            __builder.AddAttribute(12, "class", "title-section mb-2");
            __builder.AddAttribute(13, "id", "bar-sale-count-day-title");
            __builder.AddMarkupContent(14, "\r\n                <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i> ");
            __builder.AddContent(15, 
#nullable restore
#line 43 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   Lang["SalesCountComparison"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(16, 
#nullable restore
#line 43 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                 IsDisplayByDay ? Lang["PerDay"] : Lang["PerMonth"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(17, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(18, "\r\n            ");
            __builder.OpenElement(19, "div");
            __builder.AddAttribute(20, "class", "chart-area  mb-2");
            __builder.AddAttribute(21, "id", "bar-sale-count-day");
            __builder.AddMarkupContent(22, "\r\n                ");
            __builder.OpenElement(23, "div");
            __builder.AddAttribute(24, "id", "sale-chart-area");
            __builder.AddAttribute(25, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 46 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        MouseDownEvent

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(26, "\r\n                    <div id=\"frame-select\"></div>\r\n");
#nullable restore
#line 48 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                     if (SaleData.Count > 0)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(27, "                        ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_0(__builder, 28, 29, 
#nullable restore
#line 50 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                       SaleData.Concat(LastYearSaleData).ToList()

#line default
#line hidden
#nullable disable
            , 30, "chart-display", 31, (__builder2) => {
                __builder2.AddMarkupContent(32, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(33);
                __builder2.AddAttribute(34, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 51 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  Lang["SalesCountComparison"] + (IsDisplayByDay ? Lang["PerDay"] : Lang["PerMonth"])

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(35, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartValueAxis>(36);
                __builder2.AddAttribute(37, "Name", "Sale");
                __builder2.AddAttribute(38, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.HorizontalEdge>(
#nullable restore
#line 52 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                    HorizontalEdge.Left

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(39, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddMarkupContent(40, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisLabel>(41);
                    __builder3.AddAttribute(42, "Format", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.ChartAxisLabelFormat>(
#nullable restore
#line 53 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           ChartAxisLabelFormat.FixedPoint

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(43, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisTitle>(44);
                    __builder3.AddAttribute(45, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 54 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          Lang["SaleTitle"]

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(46, "\r\n                            ");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(47, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartValueAxis>(48);
                __builder2.AddAttribute(49, "Name", "Count");
                __builder2.AddAttribute(50, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.HorizontalEdge>(
#nullable restore
#line 56 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                     HorizontalEdge.Right

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(51, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddMarkupContent(52, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisTitle>(53);
                    __builder3.AddAttribute(54, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 57 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          Lang["CountTitle"]

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(55, "\r\n                            ");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(56, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_1(__builder2, 57, 58, 
#nullable restore
#line 59 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      SaleData[0].Time.Year.ToString()

#line default
#line hidden
#nullable disable
                , 59, 
#nullable restore
#line 60 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                               (SalePerTime i) => i.Time.ToString(FormatStringDayNoDay)

#line default
#line hidden
#nullable disable
                , 60, 
#nullable restore
#line 61 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerTime s) => s.Time >= SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 61, 
#nullable restore
#line 62 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (SalePerTime i) => i.Sale

#line default
#line hidden
#nullable disable
                , 62, 
#nullable restore
#line 63 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      System.Drawing.Color.FromArgb(59, 185, 153)

#line default
#line hidden
#nullable disable
                , 63, "Sale");
                __builder2.AddMarkupContent(64, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_2(__builder2, 65, 66, 
#nullable restore
#line 66 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                               GetVisibleChangeHandler

#line default
#line hidden
#nullable disable
                , 67, 
#nullable restore
#line 67 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                , 68, 
#nullable restore
#line 68 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerTime s) => s.Time < SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 69, 
#nullable restore
#line 69 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                               (SalePerTime s) => s.Time.ToString(FormatStringDayNoDay)

#line default
#line hidden
#nullable disable
                , 70, 
#nullable restore
#line 70 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (SalePerTime s) => s.Sale

#line default
#line hidden
#nullable disable
                , 71, 
#nullable restore
#line 71 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      System.Drawing.Color.FromArgb(255, 140, 0)

#line default
#line hidden
#nullable disable
                , 72, "Sale");
                __builder2.AddMarkupContent(73, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartLineSeries_3(__builder2, 74, 75, 
#nullable restore
#line 74 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       "Count " + SaleData[0].Time.Year.ToString()

#line default
#line hidden
#nullable disable
                , 76, 
#nullable restore
#line 75 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                         (SalePerTime s) => s.Time >= SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 77, 
#nullable restore
#line 76 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (SalePerTime s) => s.Time.ToString(FormatStringDayNoDay)

#line default
#line hidden
#nullable disable
                , 78, 
#nullable restore
#line 77 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                             (SalePerTime s) => s.Count

#line default
#line hidden
#nullable disable
                , 79, 
#nullable restore
#line 78 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       System.Drawing.Color.FromArgb(186, 237, 76)

#line default
#line hidden
#nullable disable
                , 80, "Count", 81, (__builder3) => {
                    __builder3.AddMarkupContent(82, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesLegendItem>(83);
                    __builder3.AddAttribute(84, "IconCssClass", "fa fa-line-chart");
                    __builder3.AddAttribute(85, "TextTemplate", (Microsoft.AspNetCore.Components.RenderFragment<System.String>)((context) => (__builder4) => {
                        __builder4.AddContent(86, 
#nullable restore
#line 81 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                   SaleData[0].Time.Year.ToString()

#line default
#line hidden
#nullable disable
                        );
                    }
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(87, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesPoint>(88);
                    __builder3.AddAttribute(89, "Size", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32>(
#nullable restore
#line 83 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          5

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(90, "\r\n                            ");
                }
                );
                __builder2.AddMarkupContent(91, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartLineSeries_4(__builder2, 92, 93, 
#nullable restore
#line 85 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                         LineSaleCountSeriesLY

#line default
#line hidden
#nullable disable
                , 94, 
#nullable restore
#line 86 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       "Count " + (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                , 95, 
#nullable restore
#line 87 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                         (SalePerTime s) => s.Time < SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 96, 
#nullable restore
#line 88 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (SalePerTime s) => s.Time.ToString(FormatStringDayNoDay)

#line default
#line hidden
#nullable disable
                , 97, 
#nullable restore
#line 89 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                             (SalePerTime s) => s.Count

#line default
#line hidden
#nullable disable
                , 98, 
#nullable restore
#line 90 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       System.Drawing.Color.FromArgb(79, 195, 247)

#line default
#line hidden
#nullable disable
                , 99, "Count", 100, (__builder3) => {
                    __builder3.AddMarkupContent(101, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesLegendItem>(102);
                    __builder3.AddAttribute(103, "IconCssClass", "fa fa-line-chart");
                    __builder3.AddAttribute(104, "TextTemplate", (Microsoft.AspNetCore.Components.RenderFragment<System.String>)((context) => (__builder4) => {
                        __builder4.AddContent(105, 
#nullable restore
#line 93 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                        );
                    }
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(106, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesPoint>(107);
                    __builder3.AddAttribute(108, "Size", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32>(
#nullable restore
#line 95 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          5

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(109, "\r\n                            ");
                }
                );
                __builder2.AddMarkupContent(110, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(111);
                __builder2.AddAttribute(112, "AllowToggleSeries", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 97 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                              true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(113, "VerticalAlignment", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.VerticalEdge>(
#nullable restore
#line 97 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                       VerticalEdge.Bottom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(114, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.RelativePosition>(
#nullable restore
#line 97 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                      RelativePosition.Outside

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(115, "\r\n                        ");
            }
            );
            __builder.AddMarkupContent(116, "\r\n");
#nullable restore
#line 100 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                    }

#line default
#line hidden
#nullable disable
            __builder.AddContent(117, "                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(118, "\r\n");
#nullable restore
#line 102 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                 if (SaleData.Count > 0)
                {

#line default
#line hidden
#nullable disable
            __builder.AddContent(119, "                    ");
            __builder.OpenElement(120, "div");
            __builder.AddAttribute(121, "class", "grid-area-wcount");
            __builder.AddAttribute(122, "id", "sale-grid-area-wcount");
            __builder.AddMarkupContent(123, "\r\n                        ");
            __builder.OpenElement(124, "table");
            __builder.AddAttribute(125, "class", "grid-display-wcount");
            __builder.AddMarkupContent(126, "\r\n                            ");
            __builder.OpenElement(127, "tr");
            __builder.AddMarkupContent(128, "\r\n                                ");
            __builder.AddMarkupContent(129, "<th>&nbsp;</th>\r\n                                ");
            __builder.AddMarkupContent(130, "<th>&nbsp;</th>\r\n                                ");
            __builder.OpenElement(131, "th");
            __builder.AddAttribute(132, "class", "bg-this-year");
            __builder.AddContent(133, 
#nullable restore
#line 109 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(134, "\r\n                                ");
            __builder.OpenElement(135, "th");
            __builder.AddAttribute(136, "class", "bg-last-year");
            __builder.AddContent(137, 
#nullable restore
#line 110 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year - 1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(138, "\r\n                                ");
            __builder.OpenElement(139, "th");
            __builder.AddAttribute(140, "class", "bg-percent");
            __builder.AddContent(141, 
#nullable restore
#line 111 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        Lang["CompareYear"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(142, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(143, "\r\n");
#nullable restore
#line 113 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                               int IndexDifferent = 0;
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 114 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                 for (int i = 0; i < SaleData.Count(); i++)
                                {
                                    int current = i;

#line default
#line hidden
#nullable disable
            __builder.AddContent(144, "                                    ");
            __builder.OpenElement(145, "tr");
            __builder.AddAttribute(146, "class", "row-count" + " " + (
#nullable restore
#line 117 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SelectedTime.Count() > 0 && SelectedTime[0].Time <= SaleData[i].Time && SelectedTime[SelectedTime.Count() - 1].Time >= SaleData[i].Time ? "selected-area-wcount" : ""

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(147, "\r\n                                        ");
            __builder.OpenElement(148, "td");
            __builder.AddAttribute(149, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 118 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(150, "rowspan", "2");
            __builder.AddAttribute(151, "class", "row-title-" + (
#nullable restore
#line 118 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                       int.Parse(type) == 1 || int.Parse(type) == 3|| int.Parse(type) ==7 || int.Parse(type) == 9  ? CheckWeeken(SaleData[i].Time).ToString() : "0" 

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(152, 
#nullable restore
#line 118 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                        SaleData[i].Time.ToString(FormatStringDay)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(153, "\r\n                                        ");
            __builder.OpenElement(154, "td");
            __builder.AddAttribute(155, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 119 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(156, "class", "row-title-" + (
#nullable restore
#line 119 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                           int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) ==7 || int.Parse(type) == 9 ? CheckWeeken(SaleData[i].Time).ToString() : "0" 

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(157, 
#nullable restore
#line 119 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                            Lang["CountTitle"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(158, "\r\n                                        ");
            __builder.OpenElement(159, "td");
            __builder.AddAttribute(160, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 120 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(161, "class", "row-value");
            __builder.AddContent(162, 
#nullable restore
#line 120 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                           SaleData[i].Count.ToString()

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(163, "\r\n");
#nullable restore
#line 121 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                         if (SaleData[i].Time.Month == 2 && SaleData[i].Time.Day == 29)
                                        {
                                            IndexDifferent = 1;

#line default
#line hidden
#nullable disable
            __builder.AddContent(164, "                                            ");
            __builder.OpenElement(165, "td");
            __builder.AddAttribute(166, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 124 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 2)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(167, "class", "row-value");
            __builder.AddContent(168, "_");
            __builder.CloseElement();
            __builder.AddMarkupContent(169, "\r\n                                            ");
            __builder.OpenElement(170, "td");
            __builder.AddAttribute(171, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 125 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(172, "class", "row-value");
            __builder.AddContent(173, "_");
            __builder.CloseElement();
            __builder.AddMarkupContent(174, "\r\n");
#nullable restore
#line 126 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(175, "                                            ");
            __builder.OpenElement(176, "td");
            __builder.AddAttribute(177, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 129 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(178, "class", "row-value");
            __builder.AddContent(179, 
#nullable restore
#line 129 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                               LastYearSaleData[i - IndexDifferent].Count.ToString()

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(180, "\r\n                                            ");
            __builder.OpenElement(181, "td");
            __builder.AddAttribute(182, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 130 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(183, "class", "row-value");
            __builder.AddContent(184, 
#nullable restore
#line 130 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                LastYearSaleData[i - IndexDifferent].Count == 0 ? "_" : string.Format("{0:#,##0.0}", Math.Round((100.0 * SaleData[i].Count / LastYearSaleData[i - IndexDifferent].Count), 1)) + "%"

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(185, "\r\n");
#nullable restore
#line 131 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(186, "                                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(187, "\r\n                                    ");
            __builder.OpenElement(188, "tr");
            __builder.AddAttribute(189, "class", "row-sale" + " " + (
#nullable restore
#line 133 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          SelectedTime.Count() > 0 && SelectedTime[0].Time <= SaleData[i].Time && SelectedTime[SelectedTime.Count() - 1].Time >= SaleData[i].Time ? "selected-area-wcount" : ""

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(190, "\r\n                                        ");
            __builder.OpenElement(191, "td");
            __builder.AddAttribute(192, "class", "row-title-" + (
#nullable restore
#line 134 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                               int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) ==7 || int.Parse(type) == 9 ? CheckWeeken(SaleData[i].Time).ToString() : "0" 

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(193, 
#nullable restore
#line 134 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                Lang["SaleTitle"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(194, "\r\n                                        ");
            __builder.OpenElement(195, "td");
            __builder.AddAttribute(196, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 135 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(197, "class", "row-value");
            __builder.AddContent(198, 
#nullable restore
#line 135 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                           string.Format("{0:C}", SaleData[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(199, "\r\n");
#nullable restore
#line 136 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                         if (SaleData[i].Time.Month == 2 && SaleData[i].Time.Day == 29)
                                        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(200, "                                            ");
            __builder.OpenElement(201, "td");
            __builder.AddAttribute(202, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 138 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 2)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(203, "class", "row-value");
            __builder.AddContent(204, "_");
            __builder.CloseElement();
            __builder.AddMarkupContent(205, "\r\n                                            ");
            __builder.OpenElement(206, "td");
            __builder.AddAttribute(207, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 139 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(208, "class", "row-value");
            __builder.AddContent(209, "_");
            __builder.CloseElement();
            __builder.AddMarkupContent(210, "\r\n");
#nullable restore
#line 140 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(211, "                                            ");
            __builder.OpenElement(212, "td");
            __builder.AddAttribute(213, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 143 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(214, "class", "row-value");
            __builder.AddContent(215, 
#nullable restore
#line 143 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                               string.Format("{0:C}", LastYearSaleData[i - IndexDifferent].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(216, "\r\n                                            ");
            __builder.OpenElement(217, "td");
            __builder.AddAttribute(218, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 144 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGridWCount(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(219, "class", "row-value");
            __builder.AddContent(220, 
#nullable restore
#line 144 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                LastYearSaleData[i - IndexDifferent].Sale == 0 ? "_" : string.Format("{0:#,##0.0}", Math.Round((100.0 * SaleData[i].Sale / LastYearSaleData[i - IndexDifferent].Sale), 1)) + "%"

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(221, "\r\n");
#nullable restore
#line 145 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(222, "                                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(223, "\r\n");
#nullable restore
#line 147 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(224, "                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(225, "\r\n                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(226, "\r\n");
#nullable restore
#line 151 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(227, "            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(228, "\r\n");
#nullable restore
#line 153 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
            break;
        case GraphPattern.LineSale:

#line default
#line hidden
#nullable disable
            __builder.AddContent(229, "            ");
            __builder.OpenElement(230, "div");
            __builder.AddAttribute(231, "class", 
#nullable restore
#line 155 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                          "title-section mb-2" + (int.Parse(type) == (int)GraphTypeDisplay.GraphOrganizationBar || int.Parse(type) == (int)GraphTypeDisplay.GraphOrganizationPie ? " hidden-graph" : "")

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(232, "id", "sale-per-day-title");
            __builder.AddMarkupContent(233, "\r\n                <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i> ");
            __builder.AddContent(234, 
#nullable restore
#line 156 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   Lang["SalesComparison"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(235, 
#nullable restore
#line 156 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                            IsDisplayByDay ? Lang["PerDay"] : Lang["PerMonth"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(236, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(237, "\r\n            ");
            __builder.OpenElement(238, "div");
            __builder.AddAttribute(239, "class", 
#nullable restore
#line 158 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                          "show-legend" + (int.Parse(type) == (int)GraphTypeDisplay.GraphOrganizationBar || int.Parse(type) == (int)GraphTypeDisplay.GraphOrganizationPie ? " hidden-graph" : "")

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(240, "\r\n                ");
            __builder.OpenElement(241, "div");
            __builder.AddAttribute(242, "id", "sale-chart-area");
            __builder.AddAttribute(243, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 159 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        MouseDownEvent

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(244, "\r\n                    <div id=\"frame-select\"></div>\r\n");
#nullable restore
#line 161 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                     if (SaleData.Count > 0)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(245, "                        ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_5(__builder, 246, 247, 
#nullable restore
#line 163 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                       SaleData.Concat(LastYearSaleData).ToList()

#line default
#line hidden
#nullable disable
            , 248, "chart-display", 249, (__builder2) => {
                __builder2.AddMarkupContent(250, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(251);
                __builder2.AddAttribute(252, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 164 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  Lang["SalesComparison"] + (IsDisplayByDay ? Lang["PerDay"] : Lang["PerMonth"])

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(253, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartValueAxis>(254);
                __builder2.AddAttribute(255, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddMarkupContent(256, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisLabel>(257);
                    __builder3.AddAttribute(258, "Format", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.ChartAxisLabelFormat>(
#nullable restore
#line 166 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           ChartAxisLabelFormat.FixedPoint

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(259, "\r\n                            ");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(260, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartLineSeries_6(__builder2, 261, 262, 
#nullable restore
#line 168 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       SaleData[0].Time.Year.ToString()

#line default
#line hidden
#nullable disable
                , 263, 
#nullable restore
#line 169 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                         (SalePerTime s) => s.Time >= SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 264, 
#nullable restore
#line 170 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (SalePerTime s) => s.Time.ToString(FormatStringDayNoDay)

#line default
#line hidden
#nullable disable
                , 265, 
#nullable restore
#line 171 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                             (SalePerTime s) => s.Sale

#line default
#line hidden
#nullable disable
                , 266, 
#nullable restore
#line 172 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       System.Drawing.Color.FromArgb(59, 185, 153)

#line default
#line hidden
#nullable disable
                , 267, (__builder3) => {
                    __builder3.AddMarkupContent(268, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesPoint>(269);
                    __builder3.AddAttribute(270, "Size", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32>(
#nullable restore
#line 173 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          5

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(271, "\r\n                            ");
                }
                );
                __builder2.AddMarkupContent(272, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartLineSeries_7(__builder2, 273, 274, 
#nullable restore
#line 175 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                GetVisibleChangeHandler

#line default
#line hidden
#nullable disable
                , 275, 
#nullable restore
#line 176 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                , 276, 
#nullable restore
#line 177 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                         (SalePerTime s) => s.Time < SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 277, 
#nullable restore
#line 178 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (SalePerTime s) => s.Time.ToString(FormatStringDayNoDay)

#line default
#line hidden
#nullable disable
                , 278, 
#nullable restore
#line 179 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                             (SalePerTime s) => s.Sale

#line default
#line hidden
#nullable disable
                , 279, 
#nullable restore
#line 180 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       System.Drawing.Color.FromArgb(255, 140, 0)

#line default
#line hidden
#nullable disable
                , 280, (__builder3) => {
                    __builder3.AddMarkupContent(281, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesPoint>(282);
                    __builder3.AddAttribute(283, "Size", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32>(
#nullable restore
#line 181 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          5

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(284, "\r\n                            ");
                }
                );
                __builder2.AddMarkupContent(285, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(286);
                __builder2.AddAttribute(287, "AllowToggleSeries", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 183 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                              true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(288, "VerticalAlignment", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.VerticalEdge>(
#nullable restore
#line 183 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                       VerticalEdge.Bottom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(289, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.RelativePosition>(
#nullable restore
#line 183 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                      RelativePosition.Outside

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(290, "\r\n                        ");
            }
            );
            __builder.AddMarkupContent(291, "\r\n");
#nullable restore
#line 186 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                    }

#line default
#line hidden
#nullable disable
            __builder.AddContent(292, "                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(293, "\r\n");
#nullable restore
#line 188 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                 if (SaleData.Count > 0)
                {

#line default
#line hidden
#nullable disable
            __builder.AddContent(294, "                    ");
            __builder.OpenElement(295, "div");
            __builder.AddAttribute(296, "class", "grid-area");
            __builder.AddAttribute(297, "id", "sale-grid-area");
            __builder.AddMarkupContent(298, "\r\n                        ");
            __builder.OpenElement(299, "table");
            __builder.AddAttribute(300, "class", "grid-display");
            __builder.AddMarkupContent(301, "\r\n                            ");
            __builder.OpenElement(302, "tr");
            __builder.AddMarkupContent(303, "\r\n                                ");
            __builder.AddMarkupContent(304, "<th>&nbsp;</th>\r\n                                ");
            __builder.OpenElement(305, "th");
            __builder.AddAttribute(306, "class", "bg-this-year");
            __builder.AddContent(307, 
#nullable restore
#line 194 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(308, "\r\n                                ");
            __builder.OpenElement(309, "th");
            __builder.AddAttribute(310, "class", "bg-last-year");
            __builder.AddContent(311, 
#nullable restore
#line 195 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year - 1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(312, "\r\n                                ");
            __builder.OpenElement(313, "th");
            __builder.AddAttribute(314, "class", "bg-percent");
            __builder.AddContent(315, 
#nullable restore
#line 196 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        Lang["CompareYear"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(316, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(317, "\r\n");
#nullable restore
#line 198 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                               int IndexDifferent = 0;
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 199 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                 for (int i = 0; i < SaleData.Count(); i++)
                                {
                                    int current = i;

#line default
#line hidden
#nullable disable
            __builder.AddContent(318, "                                    ");
            __builder.OpenElement(319, "tr");
            __builder.AddAttribute(320, "class", 
#nullable restore
#line 202 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                 SelectedTime.Count() > 0 && SelectedTime[0].Time <= SaleData[i].Time && SelectedTime[SelectedTime.Count() - 1].Time >= SaleData[i].Time ? "selected-area" : ""

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(321, "\r\n                                        ");
            __builder.OpenElement(322, "td");
            __builder.AddAttribute(323, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 203 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (e) => MouseDownGrid(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(324, "class", "row-title-" + (
#nullable restore
#line 203 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                     int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) ==7 || int.Parse(type) == 9 ? CheckWeeken(SaleData[i].Time).ToString() : "0" 

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(325, 
#nullable restore
#line 203 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                      SaleData[i].Time.ToString(FormatStringDay)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(326, "\r\n                                        ");
            __builder.OpenElement(327, "td");
            __builder.AddAttribute(328, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 204 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (e) => MouseDownGrid(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(329, 
#nullable restore
#line 204 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                   string.Format("{0:C}", SaleData[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(330, "\r\n");
#nullable restore
#line 205 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                         if (SaleData[i].Time.Month == 2 && SaleData[i].Time.Day == 29)
                                        {
                                            IndexDifferent = 1;

#line default
#line hidden
#nullable disable
            __builder.AddContent(331, "                                            ");
            __builder.OpenElement(332, "td");
            __builder.AddAttribute(333, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 208 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGrid(e, current, 2)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(334, "_");
            __builder.CloseElement();
            __builder.AddMarkupContent(335, "\r\n                                            ");
            __builder.OpenElement(336, "td");
            __builder.AddAttribute(337, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 209 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGrid(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(338, "_");
            __builder.CloseElement();
            __builder.AddMarkupContent(339, "\r\n");
#nullable restore
#line 210 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(340, "                                            ");
            __builder.OpenElement(341, "td");
            __builder.AddAttribute(342, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 213 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGrid(e, current, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(343, 
#nullable restore
#line 213 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                       string.Format("{0:C}", LastYearSaleData[i - IndexDifferent].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(344, "\r\n                                            ");
            __builder.OpenElement(345, "td");
            __builder.AddAttribute(346, "onmousedown", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 214 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (e) => MouseDownGrid(e, current, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(347, 
#nullable restore
#line 214 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                        LastYearSaleData[i - IndexDifferent].Sale == 0 ? "_" : string.Format("{0:#,##0.0}", Math.Round((100.0 * SaleData[i].Sale / LastYearSaleData[i - IndexDifferent].Sale), 1)) + "%"

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(348, "\r\n");
#nullable restore
#line 215 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(349, "                                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(350, "\r\n");
#nullable restore
#line 217 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(351, "                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(352, "\r\n                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(353, "\r\n");
#nullable restore
#line 221 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(354, "            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(355, "\r\n");
#nullable restore
#line 223 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
            break;
        case GraphPattern.BarSalePerStaff:

#line default
#line hidden
#nullable disable
            __builder.AddContent(356, "            ");
            __builder.OpenElement(357, "div");
            __builder.AddAttribute(358, "class", "title-section mb-2");
            __builder.AddMarkupContent(359, "\r\n                <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i> ");
            __builder.AddContent(360, 
#nullable restore
#line 226 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   Lang["SalesStaffPer"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(361, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(362, "\r\n            ");
            __builder.OpenElement(363, "div");
            __builder.AddAttribute(364, "class", "chart-area");
            __builder.AddAttribute(365, "id", "bar-staff-day");
            __builder.AddMarkupContent(366, "\r\n");
#nullable restore
#line 229 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                 if (IsShowStaff)
                {

#line default
#line hidden
#nullable disable
            __builder.AddContent(367, "                    ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_8(__builder, 368, 369, 
#nullable restore
#line 231 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                    SalePerStaffDayData.Concat(SalePerStaffDayDataLastYear).ToList()

#line default
#line hidden
#nullable disable
            , 370, "chart-display", 371, 
#nullable restore
#line 231 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                      PreparePointColorForStaff

#line default
#line hidden
#nullable disable
            , 372, (__builder2) => {
                __builder2.AddMarkupContent(373, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(374);
                __builder2.AddAttribute(375, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 232 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                false

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(376, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(377);
                __builder2.AddAttribute(378, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 234 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             Lang["SalesStaffPer"]

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(379, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartValueAxis>(380);
                __builder2.AddAttribute(381, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddMarkupContent(382, "\r\n                            ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisLabel>(383);
                    __builder3.AddAttribute(384, "Format", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.ChartAxisLabelFormat>(
#nullable restore
#line 236 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       ChartAxisLabelFormat.FixedPoint

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(385, "\r\n                        ");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(386, "\r\n                        ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_9(__builder2, 387, 388, 
#nullable restore
#line 238 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  SaleData[0].Time.Year.ToString()

#line default
#line hidden
#nullable disable
                , 389, 
#nullable restore
#line 239 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SalePerStaff s) => s.Time >= SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 390, 
#nullable restore
#line 240 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           (SalePerStaff s) => s.StaffName

#line default
#line hidden
#nullable disable
                , 391, 
#nullable restore
#line 241 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  System.Drawing.Color.FromArgb(59, 185, 153)

#line default
#line hidden
#nullable disable
                , 392, 
#nullable restore
#line 242 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerStaff s) => s.Sale

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(393, "\r\n                        ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_10(__builder2, 394, 395, 
#nullable restore
#line 243 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    BarStaffSeriesLY

#line default
#line hidden
#nullable disable
                , 396, 
#nullable restore
#line 244 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                , 397, 
#nullable restore
#line 245 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SalePerStaff s) => s.Time < SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 398, 
#nullable restore
#line 246 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           (SalePerStaff s) => s.StaffName

#line default
#line hidden
#nullable disable
                , 399, 
#nullable restore
#line 247 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  System.Drawing.Color.FromArgb(255, 140, 0)

#line default
#line hidden
#nullable disable
                , 400, 
#nullable restore
#line 248 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerStaff s) => s.Sale

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(401, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(402);
                __builder2.AddAttribute(403, "AllowToggleSeries", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 249 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                          true

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(404, "\r\n                    ");
            }
            );
            __builder.AddMarkupContent(405, "\r\n                    ");
            __builder.OpenElement(406, "div");
            __builder.AddAttribute(407, "class", "grid-area");
            __builder.AddMarkupContent(408, "\r\n                        ");
            __builder.OpenElement(409, "table");
            __builder.AddAttribute(410, "class", "grid-display");
            __builder.AddMarkupContent(411, "\r\n                            ");
            __builder.OpenElement(412, "tr");
            __builder.AddMarkupContent(413, "\r\n                                ");
            __builder.AddMarkupContent(414, "<th>&nbsp;</th>\r\n                                ");
            __builder.OpenElement(415, "th");
            __builder.AddAttribute(416, "class", "bg-this-year");
            __builder.AddContent(417, 
#nullable restore
#line 256 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(418, "\r\n                                ");
            __builder.OpenElement(419, "th");
            __builder.AddAttribute(420, "class", "bg-last-year");
            __builder.AddContent(421, 
#nullable restore
#line 257 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year - 1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(422, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(423, "\r\n");
#nullable restore
#line 259 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                               int indexCurrent = 0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 260 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                             for (int i = 0; i < SalePerStaffDayData.Count(); i++)
                            {
                                int current = indexCurrent;

#line default
#line hidden
#nullable disable
            __builder.AddContent(424, "                                ");
            __builder.OpenElement(425, "tr");
            __builder.AddAttribute(426, "class", 
#nullable restore
#line 263 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             SalePerStaffDayData[i].StaffSeq == SelectedStaffSeq ? "selected-area" : ""

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(427, "\r\n                                    ");
            __builder.OpenElement(428, "td");
            __builder.AddAttribute(429, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 264 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerStaff, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(430, "style", "background-color:" + " " + (
#nullable restore
#line 264 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                             !BarStaffSeriesLY ? $"#{HyperDataService.GetColorByIndex(i).R:X2}{HyperDataService.GetColorByIndex(i).G:X2}{HyperDataService.GetColorByIndex(i).B:X2}" : default

#line default
#line hidden
#nullable disable
            ) + " !important");
            __builder.AddContent(431, 
#nullable restore
#line 264 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                                                             SalePerStaffDayData[i].StaffName

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(432, "\r\n                                    ");
            __builder.OpenElement(433, "td");
            __builder.AddAttribute(434, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 265 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerStaff, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(435, 
#nullable restore
#line 265 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                   string.Format("{0:C}", SalePerStaffDayData[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(436, "\r\n                                    ");
            __builder.OpenElement(437, "td");
            __builder.AddAttribute(438, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 266 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerStaff, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(439, 
#nullable restore
#line 266 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                   string.Format("{0:C}", SalePerStaffDayDataLastYear[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(440, "\r\n                                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(441, "\r\n");
#nullable restore
#line 268 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                indexCurrent++;
                            }

#line default
#line hidden
#nullable disable
            __builder.AddContent(442, "                            ");
            __builder.OpenElement(443, "tr");
            __builder.AddMarkupContent(444, "\r\n                                ");
            __builder.OpenElement(445, "td");
            __builder.AddContent(446, 
#nullable restore
#line 271 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     Lang["Total"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(447, "\r\n                                ");
            __builder.OpenElement(448, "td");
            __builder.AddContent(449, 
#nullable restore
#line 272 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByStaff)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(450, "\r\n                                ");
            __builder.OpenElement(451, "td");
            __builder.AddContent(452, 
#nullable restore
#line 273 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByStaffLastYear)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(453, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(454, "\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(455, "\r\n                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(456, "\r\n");
#nullable restore
#line 277 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(457, "            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(458, "\r\n");
#nullable restore
#line 279 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
            break;
        case GraphPattern.BarSalePerCustomer:

#line default
#line hidden
#nullable disable
            __builder.AddContent(459, "            ");
            __builder.OpenElement(460, "div");
            __builder.AddAttribute(461, "class", "title-section mb-2");
            __builder.AddMarkupContent(462, "\r\n                <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i> ");
            __builder.AddContent(463, 
#nullable restore
#line 282 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   Lang["CustomerPer"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(464, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(465, "\r\n            ");
            __builder.OpenElement(466, "div");
            __builder.AddAttribute(467, "class", "chart-area");
            __builder.AddAttribute(468, "id", "bar-customer-day");
            __builder.AddMarkupContent(469, "\r\n");
#nullable restore
#line 285 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                 if (IsShowCustomer)
                {

#line default
#line hidden
#nullable disable
            __builder.AddContent(470, "                    ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_11(__builder, 471, 472, 
#nullable restore
#line 287 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                    SalePerCustomerDayData.Concat(SalePerCustomerDayDataLastYear).ToList()

#line default
#line hidden
#nullable disable
            , 473, "chart-display", 474, 
#nullable restore
#line 287 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                            PreparePointColorForCustomer

#line default
#line hidden
#nullable disable
            , 475, (__builder2) => {
                __builder2.AddMarkupContent(476, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(477);
                __builder2.AddAttribute(478, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 288 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                false

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(479, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(480);
                __builder2.AddAttribute(481, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 290 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             Lang["CustomerPer"]

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(482, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartValueAxis>(483);
                __builder2.AddAttribute(484, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddMarkupContent(485, "\r\n                            ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisLabel>(486);
                    __builder3.AddAttribute(487, "Format", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.ChartAxisLabelFormat>(
#nullable restore
#line 292 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       ChartAxisLabelFormat.FixedPoint

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(488, "\r\n                        ");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(489, "\r\n\r\n                        ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_12(__builder2, 490, 491, 
#nullable restore
#line 295 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  (SaleData[0].Time.Year).ToString()

#line default
#line hidden
#nullable disable
                , 492, 
#nullable restore
#line 296 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SalePerCustomer s) => s.Time >= SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 493, 
#nullable restore
#line 297 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  System.Drawing.Color.FromArgb(59, 185, 153)

#line default
#line hidden
#nullable disable
                , 494, 
#nullable restore
#line 298 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           (SalePerCustomer s) => s.CustomerName + " " + s.BranchName

#line default
#line hidden
#nullable disable
                , 495, 
#nullable restore
#line 299 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerCustomer s) => s.Sale

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(496, "\r\n                        ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_13(__builder2, 497, 498, 
#nullable restore
#line 300 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    BarCustomerSeriesLY

#line default
#line hidden
#nullable disable
                , 499, 
#nullable restore
#line 301 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                , 500, 
#nullable restore
#line 302 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SalePerCustomer s) => s.Time < SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 501, 
#nullable restore
#line 303 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  System.Drawing.Color.FromArgb(255, 140, 0)

#line default
#line hidden
#nullable disable
                , 502, 
#nullable restore
#line 304 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           (SalePerCustomer s) => s.CustomerName + " " + s.BranchName

#line default
#line hidden
#nullable disable
                , 503, 
#nullable restore
#line 305 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerCustomer s) => s.Sale

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(504, "\r\n                    ");
            }
            );
            __builder.AddMarkupContent(505, "\r\n                    ");
            __builder.OpenElement(506, "div");
            __builder.AddAttribute(507, "class", "grid-area");
            __builder.AddMarkupContent(508, "\r\n                        ");
            __builder.OpenElement(509, "table");
            __builder.AddAttribute(510, "class", "grid-display");
            __builder.AddMarkupContent(511, "\r\n                            ");
            __builder.OpenElement(512, "tr");
            __builder.AddMarkupContent(513, "\r\n                                ");
            __builder.AddMarkupContent(514, "<th>&nbsp;</th>\r\n                                ");
            __builder.OpenElement(515, "th");
            __builder.AddAttribute(516, "class", "bg-this-year");
            __builder.AddContent(517, 
#nullable restore
#line 311 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(518, "\r\n                                ");
            __builder.OpenElement(519, "th");
            __builder.AddAttribute(520, "class", "bg-last-year");
            __builder.AddContent(521, 
#nullable restore
#line 312 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year - 1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(522, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(523, "\r\n");
#nullable restore
#line 314 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                               int indexCurrent = 0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 315 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                             for (int i = 0; i < SalePerCustomerDayData.Count(); i++)
                            {
                                int current = indexCurrent;

#line default
#line hidden
#nullable disable
            __builder.AddContent(524, "                                ");
            __builder.OpenElement(525, "tr");
            __builder.AddAttribute(526, "class", 
#nullable restore
#line 318 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             SalePerCustomerDayData[i].BranchSeq == SelectedCustomerSeq ? "selected-area" : ""

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(527, "\r\n                                    ");
            __builder.OpenElement(528, "td");
            __builder.AddAttribute(529, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 319 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerCustomer, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(530, "style", "background-color:" + " " + (
#nullable restore
#line 319 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                !BarCustomerSeriesLY ? $"#{HyperDataService.GetColorByIndex(i).R:X2}{HyperDataService.GetColorByIndex(i).G:X2}{HyperDataService.GetColorByIndex(i).B:X2}" : default

#line default
#line hidden
#nullable disable
            ) + " !important");
            __builder.AddContent(531, 
#nullable restore
#line 319 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                                                                   SalePerCustomerDayData[i].CustomerName + " " + SalePerCustomerDayData[i].BranchName

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(532, "\r\n                                    ");
            __builder.OpenElement(533, "td");
            __builder.AddAttribute(534, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 320 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerCustomer, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(535, 
#nullable restore
#line 320 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                      string.Format("{0:C}", SalePerCustomerDayData[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(536, "\r\n                                    ");
            __builder.OpenElement(537, "td");
            __builder.AddAttribute(538, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 321 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerCustomer, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(539, 
#nullable restore
#line 321 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                      string.Format("{0:C}", SalePerCustomerDayDataLastYear[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(540, "\r\n                                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(541, "\r\n");
#nullable restore
#line 323 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                indexCurrent++;
                            }

#line default
#line hidden
#nullable disable
            __builder.AddContent(542, "                            ");
            __builder.OpenElement(543, "tr");
            __builder.AddMarkupContent(544, "\r\n                                ");
            __builder.OpenElement(545, "td");
            __builder.AddContent(546, 
#nullable restore
#line 326 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     Lang["Total"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(547, "\r\n                                ");
            __builder.OpenElement(548, "td");
            __builder.AddContent(549, 
#nullable restore
#line 327 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByCustomer)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(550, "\r\n                                ");
            __builder.OpenElement(551, "td");
            __builder.AddContent(552, 
#nullable restore
#line 328 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByCustomerLastYear)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(553, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(554, "\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(555, "\r\n                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(556, "\r\n");
#nullable restore
#line 332 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(557, "            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(558, "\r\n");
#nullable restore
#line 334 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
            break;
        case GraphPattern.BarSalePerGroupClassification:

#line default
#line hidden
#nullable disable
            __builder.AddContent(559, "            ");
            __builder.OpenElement(560, "div");
            __builder.AddAttribute(561, "class", "title-section mb-2");
            __builder.AddMarkupContent(562, "\r\n                <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i> ");
            __builder.AddContent(563, 
#nullable restore
#line 337 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   Lang["GroupClassificationPer"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(564, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(565, "\r\n            ");
            __builder.OpenElement(566, "div");
            __builder.AddAttribute(567, "class", "chart-area");
            __builder.AddAttribute(568, "id", "bar-group-classification-day");
            __builder.AddMarkupContent(569, "\r\n");
#nullable restore
#line 340 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                 if (IsShowGroup)
                {

#line default
#line hidden
#nullable disable
            __builder.AddContent(570, "                    ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_14(__builder, 571, 572, 
#nullable restore
#line 342 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                    SalePerGroupClassificationDayData.Concat(SalePerGroupClassificationDayDataLastYear).ToList()

#line default
#line hidden
#nullable disable
            , 573, "chart-display", 574, 
#nullable restore
#line 342 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                  PreparePointColorForGroup

#line default
#line hidden
#nullable disable
            , 575, "pieChart", 576, (__builder2) => {
                __builder2.AddMarkupContent(577, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(578);
                __builder2.AddAttribute(579, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 343 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                false

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(580, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(581);
                __builder2.AddAttribute(582, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 345 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             Lang["GroupClassificationPer"]

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(583, "\r\n                        ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartValueAxis>(584);
                __builder2.AddAttribute(585, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddMarkupContent(586, "\r\n                            ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartAxisLabel>(587);
                    __builder3.AddAttribute(588, "Format", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.ChartAxisLabelFormat>(
#nullable restore
#line 347 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       ChartAxisLabelFormat.FixedPoint

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(589, "\r\n                        ");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(590, "\r\n                        ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_15(__builder2, 591, 592, 
#nullable restore
#line 349 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  (SaleData[0].Time.Year).ToString()

#line default
#line hidden
#nullable disable
                , 593, 
#nullable restore
#line 350 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SalePerGroupClassification s) => s.Time >= SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 594, 
#nullable restore
#line 351 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  System.Drawing.Color.FromArgb(59, 185, 153)

#line default
#line hidden
#nullable disable
                , 595, 
#nullable restore
#line 352 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           (SalePerGroupClassification s) => s.GroupClassificationName

#line default
#line hidden
#nullable disable
                , 596, 
#nullable restore
#line 353 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerGroupClassification s) => s.Sale

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(597, "\r\n                        ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartBarSeries_16(__builder2, 598, 599, 
#nullable restore
#line 355 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    BarGroupClassificationSeriesLY

#line default
#line hidden
#nullable disable
                , 600, 
#nullable restore
#line 356 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  (SaleData[0].Time.Year - 1).ToString()

#line default
#line hidden
#nullable disable
                , 601, 
#nullable restore
#line 357 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (SalePerGroupClassification s) => s.Time < SaleData[0].Time

#line default
#line hidden
#nullable disable
                , 602, 
#nullable restore
#line 358 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  System.Drawing.Color.FromArgb(255, 140, 0)

#line default
#line hidden
#nullable disable
                , 603, 
#nullable restore
#line 359 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           (SalePerGroupClassification s) => s.GroupClassificationName

#line default
#line hidden
#nullable disable
                , 604, 
#nullable restore
#line 360 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        (SalePerGroupClassification s) => s.Sale

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(605, "\r\n                    ");
            }
            );
            __builder.AddMarkupContent(606, "\r\n                    ");
            __builder.OpenElement(607, "div");
            __builder.AddAttribute(608, "class", "grid-area");
            __builder.AddMarkupContent(609, "\r\n                        ");
            __builder.OpenElement(610, "table");
            __builder.AddAttribute(611, "class", "grid-display");
            __builder.AddMarkupContent(612, "\r\n                            ");
            __builder.OpenElement(613, "tr");
            __builder.AddMarkupContent(614, "\r\n                                ");
            __builder.AddMarkupContent(615, "<th>&nbsp;</th>\r\n                                ");
            __builder.OpenElement(616, "th");
            __builder.AddAttribute(617, "class", "bg-this-year");
            __builder.AddContent(618, 
#nullable restore
#line 367 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(619, "\r\n                                ");
            __builder.OpenElement(620, "th");
            __builder.AddAttribute(621, "class", "bg-last-year");
            __builder.AddContent(622, 
#nullable restore
#line 368 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year - 1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(623, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(624, "\r\n");
#nullable restore
#line 370 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                               int indexCurrent = 0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 371 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                             for (int i = 0; i < SalePerGroupClassificationDayData.Count(); i++)
                            {
                                int current = indexCurrent;

#line default
#line hidden
#nullable disable
            __builder.AddContent(625, "                                ");
            __builder.OpenElement(626, "tr");
            __builder.AddAttribute(627, "class", 
#nullable restore
#line 374 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             SalePerGroupClassificationDayData[i].GroupClassificationCd == SelectedGroupClassificationKbn ? "selected-area" : ""

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(628, "\r\n                                    ");
            __builder.OpenElement(629, "td");
            __builder.AddAttribute(630, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 375 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerGroupClassification, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(631, "style", "background-color:" + " " + (
#nullable restore
#line 375 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                           !BarGroupClassificationSeriesLY ? $"#{HyperDataService.GetColorByIndex(i).R:X2}{HyperDataService.GetColorByIndex(i).G:X2}{HyperDataService.GetColorByIndex(i).B:X2}" : default

#line default
#line hidden
#nullable disable
            ) + " !important");
            __builder.AddContent(632, 
#nullable restore
#line 375 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                                                                                         SalePerGroupClassificationDayData[i].GroupClassificationName

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(633, "\r\n                                    ");
            __builder.OpenElement(634, "td");
            __builder.AddAttribute(635, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 376 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerGroupClassification, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(636, 
#nullable restore
#line 376 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                 string.Format("{0:C}", SalePerGroupClassificationDayData[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(637, "\r\n                                    ");
            __builder.OpenElement(638, "td");
            __builder.AddAttribute(639, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 377 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.BarSalePerGroupClassification, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(640, 
#nullable restore
#line 377 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                 string.Format("{0:C}", SalePerGroupClassificationDayDataLastYear[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(641, "\r\n                                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(642, "\r\n");
#nullable restore
#line 379 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                indexCurrent++;
                            }

#line default
#line hidden
#nullable disable
            __builder.AddContent(643, "                            ");
            __builder.OpenElement(644, "tr");
            __builder.AddMarkupContent(645, "\r\n                                ");
            __builder.OpenElement(646, "td");
            __builder.AddContent(647, 
#nullable restore
#line 382 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     Lang["Total"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(648, "\r\n                                ");
            __builder.OpenElement(649, "td");
            __builder.AddContent(650, 
#nullable restore
#line 383 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByGroupClassification)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(651, "\r\n                                ");
            __builder.OpenElement(652, "td");
            __builder.AddContent(653, 
#nullable restore
#line 384 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByGroupClassificationLastYear)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(654, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(655, "\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(656, "\r\n                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(657, "\r\n");
#nullable restore
#line 388 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(658, "            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(659, "\r\n");
#nullable restore
#line 390 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
            break;
        case GraphPattern.PieSalePerGroupClassification:

#line default
#line hidden
#nullable disable
            __builder.AddContent(660, "            ");
            __builder.OpenElement(661, "div");
            __builder.AddAttribute(662, "class", "title-section mb-2");
            __builder.AddMarkupContent(663, "\r\n                <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i> ");
            __builder.AddContent(664, 
#nullable restore
#line 393 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   Lang["GroupClassificationPer"]

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(665, "\r\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(666, "\r\n            ");
            __builder.OpenElement(667, "div");
            __builder.AddAttribute(668, "class", "chart-area" + " show-legend" + " " + (
#nullable restore
#line 395 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                 PieGroupClassificationSeriesLY ? "form-group flex-nowrap pie-2" : ""

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(669, "id", "pie-group-classification-day");
            __builder.AddMarkupContent(670, "\r\n");
#nullable restore
#line 396 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                 if (IsShowGroup)
                {
                    bool NoDataGraphThisYear = true;
                    bool NoDataGraphLastYear = true;
                    List<SalePerGroupClassification> lstNoDataTYear = new List<SalePerGroupClassification>();
                    List<SalePerGroupClassification> lstNoDataLYear = new List<SalePerGroupClassification>();
                    lstNoDataLYear.Add(new SalePerGroupClassification() { GroupClassificationCd = "NODATA", GroupClassificationName = Lang["NoData"], Sale = 0, Time = SaleData[0].Time.AddYears(-1) });
                    lstNoDataTYear.Add(new SalePerGroupClassification() { GroupClassificationCd = "NODATA", GroupClassificationName = Lang["NoData"], Sale = 0, Time = SaleData[0].Time.AddYears(1) });
                    for (int i = 0; i < SalePerGroupClassificationDayData.Count; i++)
                    {
                        if (SalePerGroupClassificationDayData[i].Sale != 0)
                        {
                            NoDataGraphThisYear = false;
                        }
                    }
                    for (int i = 0; i < SalePerGroupClassificationDayDataLastYear.Count; i++)
                    {
                        if (SalePerGroupClassificationDayDataLastYear[i].Sale != 0)
                        {
                            NoDataGraphLastYear = false;
                        }
                    }
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 418 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                     if (PieGroupClassificationSeriesLY)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(671, "                        ");
            __builder.OpenElement(672, "div");
            __builder.AddAttribute(673, "class", "chart-display form-group d-sm-flex flex-nowrap pie-2");
            __builder.AddMarkupContent(674, "\r\n                            ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_17(__builder, 675, 676, 
#nullable restore
#line 421 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             NoDataGraphThisYear ? lstNoDataTYear : SalePerGroupClassificationDayData

#line default
#line hidden
#nullable disable
            , 677, "chart-pie this-year-pie", 678, "pieChart", 679, (__builder2) => {
                __builder2.AddMarkupContent(680, "\r\n                                ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(681);
                __builder2.AddAttribute(682, "VerticalAlignment", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.VerticalEdge>(
#nullable restore
#line 422 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                  VerticalEdge.Bottom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(683, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.RelativePosition>(
#nullable restore
#line 422 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                 RelativePosition.Outside

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(684, "\r\n                                ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(685);
                __builder2.AddAttribute(686, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 423 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      Lang["GroupClassificationPer"] +"("+ SaleData[0].Time.Year.ToString() +")"

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(687, "\r\n\r\n                                ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartPieSeries_18(__builder2, 688, 689, 
#nullable restore
#line 425 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (SalePerGroupClassification s) => s.Sale

#line default
#line hidden
#nullable disable
                , 690, 
#nullable restore
#line 426 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           NoDataGraphThisYear ? System.Drawing.Color.FromArgb(126, 123, 126) : default

#line default
#line hidden
#nullable disable
                , 691, 
#nullable restore
#line 427 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   (SalePerGroupClassification s) => s.GroupClassificationName

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(692, "\r\n                            ");
            }
            );
            __builder.AddMarkupContent(693, "\r\n                            ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_19(__builder, 694, 695, 
#nullable restore
#line 430 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             NoDataGraphLastYear ? lstNoDataLYear :SalePerGroupClassificationDayDataLastYear

#line default
#line hidden
#nullable disable
            , 696, "chart-pie last-year-pie", 697, (__builder2) => {
                __builder2.AddMarkupContent(698, "\r\n                                ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(699);
                __builder2.AddAttribute(700, "VerticalAlignment", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.VerticalEdge>(
#nullable restore
#line 431 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                  VerticalEdge.Bottom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(701, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.RelativePosition>(
#nullable restore
#line 431 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                 RelativePosition.Outside

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(702, "\r\n                                ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(703);
                __builder2.AddAttribute(704, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 432 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      Lang["GroupClassificationPer"] +"("+ (SaleData[0].Time.Year - 1).ToString() +")"

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(705, "\r\n\r\n                                ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartPieSeries_20(__builder2, 706, 707, 
#nullable restore
#line 434 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                (SalePerGroupClassification s) => s.Sale

#line default
#line hidden
#nullable disable
                , 708, 
#nullable restore
#line 435 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           NoDataGraphLastYear ? System.Drawing.Color.Gray : default

#line default
#line hidden
#nullable disable
                , 709, 
#nullable restore
#line 436 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                   (SalePerGroupClassification s) => s.GroupClassificationName

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(710, "\r\n                            ");
            }
            );
            __builder.AddMarkupContent(711, "\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(712, "\r\n");
#nullable restore
#line 440 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(713, "                        ");
            __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChart_21(__builder, 714, 715, 
#nullable restore
#line 443 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                         NoDataGraphThisYear ? lstNoDataTYear : SalePerGroupClassificationDayData

#line default
#line hidden
#nullable disable
            , 716, "chart-display this-year-pie", 717, 
#nullable restore
#line 443 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                 PreparePointColorForGroup

#line default
#line hidden
#nullable disable
            , 718, (__builder2) => {
                __builder2.AddMarkupContent(719, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartLegend>(720);
                __builder2.AddAttribute(721, "VerticalAlignment", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.VerticalEdge>(
#nullable restore
#line 444 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                              VerticalEdge.Bottom

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(722, "Position", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<DevExpress.Blazor.RelativePosition>(
#nullable restore
#line 444 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                             RelativePosition.Outside

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(723, "\r\n                            ");
                __builder2.OpenComponent<DevExpress.Blazor.DxChartTitle>(724);
                __builder2.AddAttribute(725, "Text", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 445 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                  Lang["GroupClassificationPer"] +"("+ SaleData[0].Time.Year.ToString() +")"

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(726, "\r\n                            ");
                __Blazor.HassyaAllrightCloud.Pages.HyperGraph.TypeInference.CreateDxChartPieSeries_22(__builder2, 727, 728, 
#nullable restore
#line 446 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                            (SalePerGroupClassification s) => s.Sale

#line default
#line hidden
#nullable disable
                , 729, 
#nullable restore
#line 447 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                       NoDataGraphThisYear ? System.Drawing.Color.Gray : default

#line default
#line hidden
#nullable disable
                , 730, 
#nullable restore
#line 448 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                               (SalePerGroupClassification s) => s.GroupClassificationName

#line default
#line hidden
#nullable disable
                , 731, (__builder3) => {
                    __builder3.AddMarkupContent(732, "\r\n                                ");
                    __builder3.OpenComponent<DevExpress.Blazor.DxChartSeriesLabel>(733);
                    __builder3.AddAttribute(734, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 449 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                             true

#line default
#line hidden
#nullable disable
                    ));
                    __builder3.CloseComponent();
                    __builder3.AddMarkupContent(735, "\r\n                            ");
                }
                );
                __builder2.AddMarkupContent(736, "\r\n                        ");
            }
            );
            __builder.AddMarkupContent(737, "\r\n");
#nullable restore
#line 452 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                    }

#line default
#line hidden
#nullable disable
            __builder.AddContent(738, "                    ");
            __builder.OpenElement(739, "div");
            __builder.AddAttribute(740, "class", "grid-area");
            __builder.AddMarkupContent(741, "\r\n                        ");
            __builder.OpenElement(742, "table");
            __builder.AddAttribute(743, "class", "grid-display");
            __builder.AddMarkupContent(744, "\r\n                            ");
            __builder.OpenElement(745, "tr");
            __builder.AddMarkupContent(746, "\r\n                                ");
            __builder.AddMarkupContent(747, "<th>&nbsp;</th>\r\n                                ");
            __builder.OpenElement(748, "th");
            __builder.AddAttribute(749, "class", "bg-this-year");
            __builder.AddContent(750, 
#nullable restore
#line 457 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(751, "\r\n                                ");
            __builder.OpenElement(752, "th");
            __builder.AddAttribute(753, "class", "bg-last-year");
            __builder.AddContent(754, 
#nullable restore
#line 458 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                           SaleData[0].Time.Year - 1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(755, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(756, "\r\n");
#nullable restore
#line 460 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                               int indexCurrent = 0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 461 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                             for (int i = 0; i < SalePerGroupClassificationDayData.Count(); i++)
                            {
                                int current = indexCurrent;

#line default
#line hidden
#nullable disable
            __builder.AddContent(757, "                                ");
            __builder.OpenElement(758, "tr");
            __builder.AddAttribute(759, "class", 
#nullable restore
#line 464 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                             SalePerGroupClassificationDayData[i].GroupClassificationCd == SelectedGroupClassificationKbn ? "selected-area" : ""

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(760, "\r\n                                    ");
            __builder.OpenElement(761, "td");
            __builder.AddAttribute(762, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 465 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.PieSalePerGroupClassification, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(763, "style", "background-color:" + " " + (
#nullable restore
#line 465 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                           !PieGroupClassificationSeriesLY ? $"#{HyperDataService.GetColorByIndex(i).R:X2}{HyperDataService.GetColorByIndex(i).G:X2}{HyperDataService.GetColorByIndex(i).B:X2}" : default

#line default
#line hidden
#nullable disable
            ) + " !important");
            __builder.AddContent(764, 
#nullable restore
#line 465 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                                                                                         SalePerGroupClassificationDayData[i].GroupClassificationName

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(765, "\r\n                                    ");
            __builder.OpenElement(766, "td");
            __builder.AddAttribute(767, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 466 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.PieSalePerGroupClassification, 0)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(768, "class", "value-this-year");
            __builder.AddContent(769, 
#nullable restore
#line 466 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                         string.Format("{0:C}", SalePerGroupClassificationDayData[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(770, "\r\n                                    ");
            __builder.OpenElement(771, "td");
            __builder.AddAttribute(772, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 467 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                    (e) => MouseClickGridNext(e, current, (int)GraphPattern.PieSalePerGroupClassification, 1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(773, "class", "value-last-year");
            __builder.AddContent(774, 
#nullable restore
#line 467 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                         string.Format("{0:C}", SalePerGroupClassificationDayDataLastYear[i].Sale)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(775, "\r\n                                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(776, "\r\n");
#nullable restore
#line 469 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                indexCurrent++;
                            }

#line default
#line hidden
#nullable disable
            __builder.AddContent(777, "                            ");
            __builder.OpenElement(778, "tr");
            __builder.AddMarkupContent(779, "\r\n                                ");
            __builder.OpenElement(780, "td");
            __builder.AddContent(781, 
#nullable restore
#line 472 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     Lang["Total"]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(782, "\r\n                                ");
            __builder.OpenElement(783, "td");
            __builder.AddContent(784, 
#nullable restore
#line 473 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByGroupClassification)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(785, "\r\n                                ");
            __builder.OpenElement(786, "td");
            __builder.AddContent(787, 
#nullable restore
#line 474 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                     string.Format("{0:C}", TotalByGroupClassificationLastYear)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(788, "\r\n                            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(789, "\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(790, "\r\n                    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(791, "\r\n");
#nullable restore
#line 478 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                }

#line default
#line hidden
#nullable disable
            __builder.AddContent(792, "            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(793, "\r\n");
#nullable restore
#line 480 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
            break;
        default:
            break;
    }
}

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(794, "\r\n");
            __builder.OpenComponent<BlazorContextMenu.ContextMenu>(795);
            __builder.AddAttribute(796, "Id", "LineSaleSeriesMenu");
            __builder.AddAttribute(797, "CssClass", "contextmenu");
            __builder.AddAttribute(798, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<BlazorContextMenu.MenuRenderingContext>)((context) => (__builder2) => {
                __builder2.AddMarkupContent(799, "\r\n");
#nullable restore
#line 487 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
      
        int IndexOfBarSalePerStaff = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
        int IndexOfBarSalePerCustomer = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);
        int IndexOfBarSalePerGroupClassification = GraphList.IndexOf(GraphPattern.BarSalePerGroupClassification);
        int IndexOfPieSalePerGroupClassification = GraphList.IndexOf(GraphPattern.PieSalePerGroupClassification);

#line default
#line hidden
#nullable disable
                __builder2.AddContent(800, "        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(801);
                __builder2.AddAttribute(802, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 492 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                         isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(803, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 492 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                        () => OpenSuperMenuBySale(SuperMenyTypeDisplay.Reservation)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(804, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(805, 
#nullable restore
#line 492 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                       Lang["SupermenuRevervationEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(806, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(807);
                __builder2.AddAttribute(808, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 493 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(809, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 493 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuBySale(SuperMenyTypeDisplay.Vehicle)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(810, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(811, 
#nullable restore
#line 493 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                 Lang["SupermenuVehicleEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(812, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(813);
                __builder2.AddAttribute(814, "id", "line-sale-staff");
                __builder2.AddAttribute(815, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(816, 
#nullable restore
#line 494 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                    Lang["ShowGraphBarPerStaff"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(817, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(818);
                __builder2.AddAttribute(819, "id", "line-sale-customer");
                __builder2.AddAttribute(820, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(821, 
#nullable restore
#line 495 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                       Lang["ShowGraphBarPerCustomer"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(822, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(823);
                __builder2.AddAttribute(824, "id", "line-sale-group-bar");
                __builder2.AddAttribute(825, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(826, 
#nullable restore
#line 496 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        Lang["ShowGraphBarPerGroupClassification"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(827, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(828);
                __builder2.AddAttribute(829, "id", "line-sale-group-pie");
                __builder2.AddAttribute(830, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(831, 
#nullable restore
#line 497 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                        Lang["ShowGraphPiePerGroupClassification"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(832, "\r\n");
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(833, "\r\n\r\n");
            __builder.OpenComponent<BlazorContextMenu.ContextMenu>(834);
            __builder.AddAttribute(835, "Id", "BarStaffSeriesMenu");
            __builder.AddAttribute(836, "CssClass", "contextmenu");
            __builder.AddAttribute(837, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<BlazorContextMenu.MenuRenderingContext>)((context) => (__builder2) => {
                __builder2.AddMarkupContent(838, "\r\n");
#nullable restore
#line 502 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
      
        int Index = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
        int IndexOfBarSalePerCustomer = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);
        int IndexOfBarSalePerGroupClassification = GraphList.IndexOf(GraphPattern.BarSalePerGroupClassification);
        int IndexOfPieSalePerGroupClassification = GraphList.IndexOf(GraphPattern.PieSalePerGroupClassification);

#line default
#line hidden
#nullable disable
                __builder2.AddContent(839, "        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(840);
                __builder2.AddAttribute(841, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 507 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(842, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 507 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuByStaff(Index, SalePerStaffDayData[IndexOfMenuSeries].StaffSeq, SalePerStaffDayDataLastYear[IndexOfMenuSeries].StaffSeq, SuperMenyTypeDisplay.Reservation)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(843, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(844, 
#nullable restore
#line 507 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                       Lang["SupermenuRevervationEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(845, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(846);
                __builder2.AddAttribute(847, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 508 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(848, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 508 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuByStaff(Index, SalePerStaffDayData[IndexOfMenuSeries].StaffSeq, SalePerStaffDayDataLastYear[IndexOfMenuSeries].StaffSeq, SuperMenyTypeDisplay.Vehicle)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(849, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(850, 
#nullable restore
#line 508 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                   Lang["SupermenuVehicleEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(851, "\r\n");
#nullable restore
#line 509 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
         if (IndexOfBarSalePerCustomer < 0 || IndexOfBarSalePerCustomer > Index)
        {

#line default
#line hidden
#nullable disable
                __builder2.AddContent(852, "            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(853);
                __builder2.AddAttribute(854, "id", "bar-staff-customer");
                __builder2.AddAttribute(855, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(856, 
#nullable restore
#line 511 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                           Lang["ShowGraphBarPerCustomer"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(857, "\r\n");
#nullable restore
#line 512 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 514 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
         if ((IndexOfBarSalePerGroupClassification < 0 || IndexOfBarSalePerGroupClassification > Index) && (IndexOfPieSalePerGroupClassification < 0 || IndexOfPieSalePerGroupClassification > Index))
        {

#line default
#line hidden
#nullable disable
                __builder2.AddContent(858, "            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(859);
                __builder2.AddAttribute(860, "id", "bar-staff-group-bar");
                __builder2.AddAttribute(861, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(862, 
#nullable restore
#line 516 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                            Lang["ShowGraphBarPerGroupClassification"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(863, "\r\n            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(864);
                __builder2.AddAttribute(865, "id", "bar-staff-group-pie");
                __builder2.AddAttribute(866, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(867, 
#nullable restore
#line 517 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                            Lang["ShowGraphPiePerGroupClassification"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(868, "\r\n");
#nullable restore
#line 518 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
        }

#line default
#line hidden
#nullable disable
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(869, "\r\n\r\n");
            __builder.OpenComponent<BlazorContextMenu.ContextMenu>(870);
            __builder.AddAttribute(871, "Id", "BarCustomerSeriesMenu");
            __builder.AddAttribute(872, "CssClass", "contextmenu");
            __builder.AddAttribute(873, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<BlazorContextMenu.MenuRenderingContext>)((context) => (__builder2) => {
                __builder2.AddMarkupContent(874, "\r\n");
#nullable restore
#line 523 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
      
        int Index = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);
        int IndexOfBarSalePerStaff = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
        int IndexOfBarSalePerGroupClassification = GraphList.IndexOf(GraphPattern.BarSalePerGroupClassification);
        int IndexOfPieSalePerGroupClassification = GraphList.IndexOf(GraphPattern.PieSalePerGroupClassification);

#line default
#line hidden
#nullable disable
                __builder2.AddContent(875, "        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(876);
                __builder2.AddAttribute(877, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 528 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(878, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 528 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuByCustomer(Index, SalePerCustomerDayData[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayData[IndexOfMenuSeries].CustomerSeq, SalePerCustomerDayData[IndexOfMenuSeries].GyosyaCdSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].CustomerSeq, SuperMenyTypeDisplay.Reservation)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(879, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(880, 
#nullable restore
#line 528 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                                                                                                                                               Lang["SupermenuRevervationEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(881, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(882);
                __builder2.AddAttribute(883, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 529 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(884, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 529 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuByCustomer(Index, SalePerCustomerDayData[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayData[IndexOfMenuSeries].CustomerSeq, SalePerCustomerDayData[IndexOfMenuSeries].GyosyaCdSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].CustomerSeq, SuperMenyTypeDisplay.Vehicle)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(885, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(886, 
#nullable restore
#line 529 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                                                                                                                                           Lang["SupermenuVehicleEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(887, "\r\n");
#nullable restore
#line 530 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
         if (IndexOfBarSalePerStaff < 0 || IndexOfBarSalePerStaff > Index)
        {

#line default
#line hidden
#nullable disable
                __builder2.AddContent(888, "            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(889);
                __builder2.AddAttribute(890, "id", "bar-customer-staff");
                __builder2.AddAttribute(891, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(892, 
#nullable restore
#line 532 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                           Lang["ShowGraphBarPerStaff"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(893, "\r\n");
#nullable restore
#line 533 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 535 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
         if ((IndexOfBarSalePerGroupClassification < 0 || IndexOfBarSalePerGroupClassification > Index) && (IndexOfPieSalePerGroupClassification < 0 || IndexOfPieSalePerGroupClassification > Index))
        {

#line default
#line hidden
#nullable disable
                __builder2.AddContent(894, "            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(895);
                __builder2.AddAttribute(896, "id", "bar-customer-group-bar");
                __builder2.AddAttribute(897, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(898, 
#nullable restore
#line 537 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                               Lang["ShowGraphBarPerGroupClassification"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(899, "\r\n            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(900);
                __builder2.AddAttribute(901, "id", "bar-customer-group-pie");
                __builder2.AddAttribute(902, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(903, 
#nullable restore
#line 538 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                               Lang["ShowGraphPiePerGroupClassification"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(904, "\r\n");
#nullable restore
#line 539 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
        }

#line default
#line hidden
#nullable disable
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(905, "\r\n\r\n");
            __builder.OpenComponent<BlazorContextMenu.ContextMenu>(906);
            __builder.AddAttribute(907, "Id", "GroupClassificationSeriesMenu");
            __builder.AddAttribute(908, "CssClass", "contextmenu");
            __builder.AddAttribute(909, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<BlazorContextMenu.MenuRenderingContext>)((context) => (__builder2) => {
                __builder2.AddMarkupContent(910, "\r\n");
#nullable restore
#line 544 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
      
        int Index = GraphList.IndexOf(GraphPattern.BarSalePerGroupClassification);
        if (Index < 0)
        {
            Index = GraphList.IndexOf(GraphPattern.PieSalePerGroupClassification);
        }
        int IndexOfBarSalePerStaff = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
        int IndexOfBarSalePerCustomer = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);

#line default
#line hidden
#nullable disable
                __builder2.AddContent(911, "        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(912);
                __builder2.AddAttribute(913, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 552 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(914, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 552 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuByGroupClassification(Index, SalePerGroupClassificationDayData[IndexOfMenuSeries].GroupClassificationCd, SalePerGroupClassificationDayDataLastYear[IndexOfMenuSeries].GroupClassificationCd, SuperMenyTypeDisplay.Reservation)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(915, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(916, 
#nullable restore
#line 552 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                           Lang["SupermenuRevervationEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(917, "\r\n        ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(918);
                __builder2.AddAttribute(919, "Enabled", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 553 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                        isEnableSuperMenu

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(920, "OnClick", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<BlazorContextMenu.ItemClickEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<BlazorContextMenu.ItemClickEventArgs>(this, 
#nullable restore
#line 553 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                      () => OpenSuperMenuByGroupClassification(Index, SalePerGroupClassificationDayData[IndexOfMenuSeries].GroupClassificationCd, SalePerGroupClassificationDayDataLastYear[IndexOfMenuSeries].GroupClassificationCd, SuperMenyTypeDisplay.Vehicle)

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(921, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(922, 
#nullable restore
#line 553 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                                                                                                                                                                                                                                                                                       Lang["SupermenuVehicleEdit"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(923, "\r\n");
#nullable restore
#line 554 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
         if (IndexOfBarSalePerStaff < 0 || IndexOfBarSalePerStaff > Index)
        {

#line default
#line hidden
#nullable disable
                __builder2.AddContent(924, "            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(925);
                __builder2.AddAttribute(926, "id", "group-staff");
                __builder2.AddAttribute(927, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(928, 
#nullable restore
#line 556 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                    Lang["ShowGraphBarPerStaff"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(929, "\r\n");
#nullable restore
#line 557 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 559 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
         if (IndexOfBarSalePerCustomer < 0 || IndexOfBarSalePerCustomer > Index)
        {

#line default
#line hidden
#nullable disable
                __builder2.AddContent(930, "            ");
                __builder2.OpenComponent<BlazorContextMenu.Item>(931);
                __builder2.AddAttribute(932, "id", "group-customer");
                __builder2.AddAttribute(933, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(934, 
#nullable restore
#line 561 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
                                       Lang["ShowGraphBarPerCustomer"]

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(935, "\r\n");
#nullable restore
#line 562 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
        }

#line default
#line hidden
#nullable disable
            }
            ));
            __builder.CloseComponent();
        }
        #pragma warning restore 1998
#nullable restore
#line 566 "E:\Project\HassyaAllrightCloud\Pages\HyperGraph.razor"
       
    [Parameter] public string HaishaBiFrom { get; set; }
    [Parameter] public string HaishaBiTo { get; set; }
    [Parameter] public string TochakuBiFrom { get; set; }
    [Parameter] public string TochakuBiTo { get; set; }
    [Parameter] public string YoyakuBiFrom { get; set; }
    [Parameter] public string YoyakuBiTo { get; set; }
    [Parameter] public string UketsukeBangoFrom { get; set; }
    [Parameter] public string UketsukeBangoTo { get; set; }
    [Parameter] public string YoyakuFrom { get; set; }
    [Parameter] public string YoyakuTo { get; set; }
    [Parameter] public string EigyoTantoShaFrom { get; set; }
    [Parameter] public string EigyoTantoShaTo { get; set; }
    [Parameter] public string UketsukeEigyoJoFrom { get; set; }
    [Parameter] public string UketsukeEigyoJoTo { get; set; }
    [Parameter] public string NyuryokuTantoShaFrom { get; set; }
    [Parameter] public string NyuryokuTantoShaTo { get; set; }
    [Parameter] public string DantaiKbnFrom { get; set; }
    [Parameter] public string DantaiKbnTo { get; set; }
    [Parameter] public string KyakuDaneKbnFrom { get; set; }
    [Parameter] public string KyakuDaneKbnTo { get; set; }
    [Parameter] public string YukiSakiFrom { get; set; }
    [Parameter] public string YukiSakiTo { get; set; }
    [Parameter] public string HaishaChiFrom { get; set; }
    [Parameter] public string HaishaChiTo { get; set; }
    [Parameter] public string HasseiChiFrom { get; set; }
    [Parameter] public string HasseiChiTo { get; set; }
    [Parameter] public string AreaFrom { get; set; }
    [Parameter] public string AreaTo { get; set; }
    [Parameter] public string ShashuFrom { get; set; }
    [Parameter] public string ShashuTo { get; set; }
    [Parameter] public string ShashuTankaFrom { get; set; }
    [Parameter] public string ShashuTankaTo { get; set; }
    [Parameter] public string UketsukeJokenFrom { get; set; }
    [Parameter] public string UketsukeJokenTo { get; set; }
    [Parameter] public string DantaiNm { get; set; }
    [Parameter] public string MaxMinSetting { get; set; }
    [Parameter] public string ReservationStatus { get; set; }
    [Parameter] public string GyosyaTokuiSakiFrom { get; set; }
    [Parameter] public string GyosyaTokuiSakiTo { get; set; }
    [Parameter] public string TokiskTokuiSakiFrom { get; set; }
    [Parameter] public string TokiskTokuiSakiTo { get; set; }
    [Parameter] public string TokiStTokuiSakiFrom { get; set; }
    [Parameter] public string TokiStTokuiSakiTo { get; set; }
    [Parameter] public string GyosyaShiireSakiFrom { get; set; }
    [Parameter] public string GyosyaShiireSakiTo { get; set; }
    [Parameter] public string TokiskShiireSakiFrom { get; set; }
    [Parameter] public string TokiskShiireSakiTo { get; set; }
    [Parameter] public string TokiStShiireSakiFrom { get; set; }
    [Parameter] public string TokiStShiireSakiTo { get; set; }

    [Inject] public IBlazorDownloadFileService BlazorDownloadFileService { get; set; }
    int BufferSize = 32768;

    public HyperFormData hyperData = new HyperFormData();
    public List<HyperFormData> CurrentHyperForm = new List<HyperFormData>();
    public HyperFormData LastYearHyperData = new HyperFormData();
    public List<HyperGraphData> GraphData = new List<HyperGraphData>();
    public List<List<HyperGraphData>> CurrentHyperData = new List<List<HyperGraphData>>();
    public List<List<HyperGraphData>> CurrentHyperDataLastYear = new List<List<HyperGraphData>>();
    public List<HyperGraphData> LastYearGraphData = new List<HyperGraphData>();
    public List<SalePerTime> SaleData = new List<SalePerTime>();
    public List<SalePerTime> LastYearSaleData = new List<SalePerTime>();
    public List<SalePerStaff> SalePerStaffDayData = new List<SalePerStaff>();
    public List<SalePerStaff> SalePerStaffDayDataLastYear = new List<SalePerStaff>();
    public List<SalePerCustomer> SalePerCustomerDayData = new List<SalePerCustomer>();
    public List<SalePerCustomer> SalePerCustomerDayDataLastYear = new List<SalePerCustomer>();
    public List<SalePerGroupClassification> SalePerGroupClassificationDayData = new List<SalePerGroupClassification>();
    public List<SalePerGroupClassification> SalePerGroupClassificationDayDataLastYear = new List<SalePerGroupClassification>();
    public List<SalePerTime> SelectedTime = new List<SalePerTime>();
    public List<CustomerComponentGyosyaData> ListGyosya { get; set; } = new List<CustomerComponentGyosyaData>();
    public List<CustomerComponentTokiskData> ListTokisk { get; set; } = new List<CustomerComponentTokiskData>();
    public List<CustomerComponentTokiStData> ListTokiSt { get; set; } = new List<CustomerComponentTokiStData>();
    private List<CustomerComponentTokiskData> TokiskData { get; set; } = new List<CustomerComponentTokiskData>();
    private List<CustomerComponentTokiStData> TokiStData { get; set; } = new List<CustomerComponentTokiStData>();
    public List<ReservationClassComponentData> ListReservationClass { get; set; } = new List<ReservationClassComponentData>();
    public string TypeDate;
    public dynamic DateFromProperty;
    public dynamic DateToProperty;
    [Parameter] public string type { get; set; }
    public long TotalByStaff = 0;
    public long TotalByStaffLastYear = 0;
    public long TotalByCustomer = 0;
    public long TotalByCustomerLastYear = 0;
    public long TotalByGroupClassification = 0;
    public long TotalByGroupClassificationLastYear = 0;
    public DateTime? StartDate;
    public DateTime? EndDate;
    public int? SelectedStaffSeq;
    public int? SelectedCustomerSeq;
    public string? SelectedGroupClassificationKbn;
    public int IndexSelectBegin;
    public int IndexSelectEnd;
    public List<StaffsData> StaffList;
    List<CodeTypeData> CodeKbList;
    public List<GraphPattern> GraphList = new List<GraphPattern>();
    public int IndexOfMenuSeries { get; set; }
    bool IsReinitNewGraph = false;
    public string FormatStringDay = "MM月dd日(ddd)";
    public string FormatStringDayNoDay = "MM月dd日";
    private bool IsDisplayByDay = true;
    private GraphPattern NextGraph = GraphPattern.LineSale;
    private bool IsShowStaff = false;
    private bool IsShowCustomer = false;
    private bool IsShowGroup = false;
    private bool firstDisplay = true;
    private bool LineSaleCountSeriesLY = true;
    private bool BarStaffSeriesLY = true;
    private bool BarCustomerSeriesLY = true;
    private bool BarGroupClassificationSeriesLY = true;
    private bool PieGroupClassificationSeriesLY = true;
    byte isThisYear = 0; // 0:This Year; 1:Last Year; 2: disable supermenu
    bool isEnableSuperMenu { get; set; } = true;
    bool isMonth = false;
    string currentYear = "";
    bool isGrid = true;
    bool isDragComplete = true;

    /// <summary>
    /// Load javascript of page
    /// </summary>
    protected override void OnParametersSet()
    {
        try
        {
            JSRuntime.InvokeVoidAsync("loadPageScript", "hyperGraphPage");
            base.OnParametersSet();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // 受付営業所
            List<SaleBranchData> TempSaleBranchList = await EigyosService.Get(new HassyaAllrightCloud.Domain.Dto.ClaimModel().CompanyID);

            // 営業担当, 入力担当
            List<StaffsData> TempStaffList = await SyainService.Get(new HassyaAllrightCloud.Domain.Dto.ClaimModel().CompanyID);
            StaffList = TempStaffList;

            ListReservationClass = await _yoyakuservice.GetListReservationClass();

            // 得意先, 仕入先
            var taskTokisk = _service.GetListTokisk();
            var taskTokiSt = _service.GetListTokiSt();
            var taskGyosya = _service.GetListGyosya();

            await Task.WhenAll(taskGyosya, taskTokisk, taskTokiSt);

            ListGyosya = taskGyosya.Result;
            TokiskData = taskTokisk.Result;
            TokiStData = taskTokiSt.Result;

            // 団体区分
            List<CodeTypeData> TempCodeKbList = await CodeKbService.GetDantai(new ClaimModel().TenantID);
            CodeKbList = TempCodeKbList;

            // 客種区分
            List<CustomerClassification> TempCustomerClassificationList = await CustomerCLassificationService.Get(new ClaimModel().TenantID);

            // 行先
            List<LoadLocation> TempDestinationList = await LocationService.GetDestination(new ClaimModel().TenantID);

            // 配車地
            List<LoadDispatchArea> TempDispatchList = await DispatchService.Get(new ClaimModel().TenantID);

            // 発生地
            List<LoadLocation> TempOriginList = await LocationService.GetOrigin(new ClaimModel().TenantID);

            // エリア
            List<LoadLocation> TempAreaList = await LocationService.GetArea(new ClaimModel().TenantID);

            // 車種
            List<BusTypesData> TempBusTypeList = await BusTypeService.GetAll(new ClaimModel().TenantID);

            // 受付条件
            List<VpmCodeKb> TempConditionList = await CodeKbService.GetJoken(new ClaimModel().TenantID);

            // 上限下限設定
            List<ComboboxFixField> MaxMinSettingList = new List<ComboboxFixField> {
                null,
                new ComboboxFixField() { IdValue = 0, StringValue = Lang["AlreadySet"] },
                new ComboboxFixField() { IdValue = 1, StringValue = Lang["NotYetSet"] }
            };
            // 予約ステータス
            List<ComboboxFixField> ReservationStatusList = new List<ComboboxFixField> {
                null,
                new ComboboxFixField() { IdValue = 0, StringValue = Lang["Reservation"] },
                new ComboboxFixField() { IdValue = 1, StringValue = Lang["Estimates"] }
            };

            hyperData = HyperFormData.ToObject(HaishaBiFrom, HaishaBiTo, TochakuBiFrom, TochakuBiTo, YoyakuBiFrom, YoyakuBiTo, UketsukeBangoFrom, UketsukeBangoTo,
                YoyakuFrom, YoyakuTo, ListReservationClass, 
                EigyoTantoShaFrom, EigyoTantoShaTo, TempStaffList,
                UketsukeEigyoJoFrom, UketsukeEigyoJoTo, TempSaleBranchList,
                NyuryokuTantoShaFrom, NyuryokuTantoShaTo,
                GyosyaTokuiSakiFrom, GyosyaTokuiSakiTo, ListGyosya, 
                TokiskTokuiSakiFrom, TokiskTokuiSakiTo, TokiskData,
                TokiStTokuiSakiFrom, TokiStTokuiSakiTo, TokiStData,
                GyosyaShiireSakiFrom, GyosyaShiireSakiTo,
                TokiskShiireSakiFrom, TokiskShiireSakiTo,
                TokiStShiireSakiFrom, TokiStShiireSakiTo,
                DantaiKbnFrom, DantaiKbnTo, TempCodeKbList,
                KyakuDaneKbnFrom, KyakuDaneKbnTo, TempCustomerClassificationList,
                YukiSakiFrom, YukiSakiTo, TempDestinationList,
                HaishaChiFrom, HaishaChiTo, TempDispatchList,
                HasseiChiFrom, HasseiChiTo, TempOriginList,
                AreaFrom, AreaTo, TempAreaList,
                ShashuFrom, ShashuTo, TempBusTypeList,
                ShashuTankaFrom, ShashuTankaTo,
                UketsukeJokenFrom, UketsukeJokenTo, TempConditionList,
                DantaiNm,
                MaxMinSetting, MaxMinSettingList,
                ReservationStatus, ReservationStatusList);
            CurrentHyperForm.Add(new HyperFormData(hyperData));
            LastYearHyperData = new HyperFormData(hyperData);
            int TypeDateNumber = (int)DateType.Dispatch;
            if (hyperData.HaishaBiFrom != null || hyperData.HaishaBiTo != null)
            {
                TypeDate = nameof(HyperGraphData.HaiSYmd);
                StartDate = hyperData.HaishaBiFrom;
                EndDate = hyperData.HaishaBiTo;
                LastYearHyperData.HaishaBiFrom = GetDayFromOfLastYear(StartDate);
                LastYearHyperData.HaishaBiTo = EndDate == null ? EndDate : ((DateTime)EndDate).AddYears(-1);
                DateFromProperty = CurrentHyperForm[0].GetType().GetProperty(nameof(hyperData.HaishaBiFrom));
                DateToProperty = CurrentHyperForm[0].GetType().GetProperty(nameof(hyperData.HaishaBiTo));
                currentYear = StartDate.Value.Year.ToString();
            }
            else if (hyperData.TochakuBiFrom != null || hyperData.TochakuBiTo != null)
            {
                TypeDateNumber = (int)DateType.Arrival;
                TypeDate = nameof(HyperGraphData.TouYmd);
                StartDate = (DateTime)hyperData.TochakuBiFrom;
                EndDate = (DateTime)hyperData.TochakuBiTo;
                LastYearHyperData.TochakuBiFrom = GetDayFromOfLastYear(StartDate);
                LastYearHyperData.TochakuBiTo = EndDate == null ? EndDate : ((DateTime)EndDate).AddYears(-1);
                DateFromProperty = CurrentHyperForm[0].GetType().GetProperty(nameof(hyperData.TochakuBiFrom));
                DateToProperty = CurrentHyperForm[0].GetType().GetProperty(nameof(hyperData.TochakuBiTo));
                currentYear = StartDate.Value.Year.ToString();
            }
            else
            {
                TypeDateNumber = (int)DateType.Reservation;
                TypeDate = nameof(HyperGraphData.UkeYmd);
                StartDate = (DateTime)hyperData.YoyakuBiFrom;
                EndDate = (DateTime)hyperData.YoyakuBiTo;
                LastYearHyperData.YoyakuBiFrom = GetDayFromOfLastYear(StartDate);
                LastYearHyperData.YoyakuBiTo = EndDate == null ? EndDate : ((DateTime)EndDate).AddYears(-1);
                DateFromProperty = CurrentHyperForm[0].GetType().GetProperty(nameof(hyperData.YoyakuBiFrom));
                DateToProperty = CurrentHyperForm[0].GetType().GetProperty(nameof(hyperData.YoyakuBiTo));
                currentYear = StartDate.Value.Year.ToString();
            }

            if (!(int.TryParse(type, out _)) || !(Enum.IsDefined(typeof(GraphTypeDisplay), int.Parse(type))) ||
                !string.IsNullOrEmpty(HyperDataService.CheckValidationForGraph((GraphTypeDisplay)(int.Parse(type)), hyperData, TypeDateNumber)))
            {
                NavigationManager.NavigateTo("/hypermenu", true);
                return;
            }
            GraphData = await HyperDataService.GetHyperGraphData(hyperData, new HassyaAllrightCloud.Domain.Dto.ClaimModel().CompanyID, new ClaimModel().TenantID);
            CurrentHyperData.Add(GraphData);
            LastYearGraphData = await HyperDataService.GetHyperGraphData(LastYearHyperData, new HassyaAllrightCloud.Domain.Dto.ClaimModel().CompanyID, new ClaimModel().TenantID);
            CurrentHyperDataLastYear.Add(LastYearGraphData);

            switch (int.Parse(type))
            {
                case (int)GraphTypeDisplay.GraphSaleStaffDayBar:
                case (int)GraphTypeDisplay.GraphCustomerDayBar:
                case (int)GraphTypeDisplay.GraphSaleDayLine:
                case (int)GraphTypeDisplay.GraphOrganizationBar:
                case (int)GraphTypeDisplay.GraphOrganizationPie:
                case (int)GraphTypeDisplay.GraphSaleQuanDayBarLine:
                    isMonth = false;
                    if (StartDate != null && EndDate != null)
                    {
                        SaleData = await HyperDataService.GetSaleByDay(GraphData, TypeDate, (DateTime)StartDate, (DateTime)EndDate);
                        await GetLastYearData();
                    }
                    if (int.Parse(type) == (int)GraphTypeDisplay.GraphSaleQuanDayBarLine)
                    {
                        GraphList.Add(GraphPattern.BarLineSaleQuan);
                    }
                    else
                    {
                        GraphList.Add(GraphPattern.LineSale);
                    }
                    if (int.Parse(type) != (int)GraphTypeDisplay.GraphSaleDayLine)
                    {
                        IndexSelectBegin = 0;
                        IndexSelectEnd = SaleData.Count() - 1;
                        if (int.Parse(type) == (int)GraphTypeDisplay.GraphSaleStaffDayBar)
                        {
                            NextGraph = GraphPattern.BarSalePerStaff;
                        }
                        else if (int.Parse(type) == (int)GraphTypeDisplay.GraphCustomerDayBar)
                        {
                            NextGraph = GraphPattern.BarSalePerCustomer;
                        }
                        else if (int.Parse(type) == (int)GraphTypeDisplay.GraphOrganizationBar)
                        {
                            NextGraph = GraphPattern.BarSalePerGroupClassification;
                        }
                        else if (int.Parse(type) == (int)GraphTypeDisplay.GraphSaleQuanDayBarLine)
                        {

                        }
                        else
                        {
                            NextGraph = GraphPattern.PieSalePerGroupClassification;
                        }
                        await SelectTime();
                    }
                    break;
                case (int)GraphTypeDisplay.GraphSaleStaffMonthBar:
                case (int)GraphTypeDisplay.GraphCustomerMonthBar:
                case (int)GraphTypeDisplay.GraphSaleMonthLine:
                case (int)GraphTypeDisplay.GraphSaleQuanMonthBarLine:
                    isMonth = true;
                    FormatStringDay = "MM月";
                    FormatStringDayNoDay = "MM月";
                    IsDisplayByDay = false;
                    if (StartDate != null && EndDate != null)
                    {
                        SaleData = await HyperDataService.GetSaleByMonth(GraphData, TypeDate, (DateTime)StartDate, (DateTime)EndDate);
                        await GetLastYearData();
                    }
                    if (int.Parse(type) == (int)GraphTypeDisplay.GraphSaleQuanMonthBarLine)
                    {
                        GraphList.Add(GraphPattern.BarLineSaleQuan);
                    }
                    else
                    {
                        GraphList.Add(GraphPattern.LineSale);
                    }
                    if (int.Parse(type) != (int)GraphTypeDisplay.GraphSaleMonthLine)
                    {
                        IndexSelectBegin = 0;
                        IndexSelectEnd = SaleData.Count() - 1;
                        if (int.Parse(type) == (int)GraphTypeDisplay.GraphSaleStaffMonthBar)
                        {
                            NextGraph = GraphPattern.BarSalePerStaff;
                        }
                        else if (int.Parse(type) == (int)GraphTypeDisplay.GraphSaleQuanMonthBarLine)
                        {

                        }
                        else
                        {
                            NextGraph = GraphPattern.BarSalePerCustomer;
                        }
                        await SelectTime();
                    }
                    break;

                default:
                    break;
            }
            if ((int)GraphList[0] == (int)GraphPattern.BarLineSaleQuan)
            {
                SelectedTime = new List<SalePerTime>();
            }
            CultureInfo cultureInfo = System.Threading.Thread.CurrentThread.CurrentCulture;
            if (cultureInfo.Name != "ja-JP")
            {
                FormatStringDay = "MM/dd";
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private DateTime? GetDayFromOfLastYear(DateTime? DayFromOfThisYear)
    {
        if (DayFromOfThisYear == null)
        {
            return StartDate;
        }
        DateTime Result = ((DateTime)DayFromOfThisYear).AddYears(-1);
        if (DayFromOfThisYear.Value.Month == 2 && DayFromOfThisYear.Value.Day == 29)
        {
            Result = Result.AddDays(1);
        }
        return Result;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                JSRuntime.InvokeAsync<string>("ChangeChartType", DotNetObjectReference.Create(this));
            }
            if (IsReinitNewGraph)
            {
                IsReinitNewGraph = false;
                JSRuntime.InvokeVoidAsync("triggerToggle");
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async void MouseDownEvent(MouseEventArgs e)
    {
        try
        {
            if (!isDragComplete)
            {
                return;
            }
            isDragComplete = false;
            isThisYear = 0;
            await JSRuntime.InvokeAsync<string>("setMouseUpAndMove", e.ClientX, e.ClientY, SaleData.Count(), DotNetObjectReference.Create(this));
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task WhenDragComplete(int Begin, int End, double ClientX, double ClientY)
    {
        try
        {
            isEnableSuperMenu = true;
            IndexSelectBegin = Begin;
            IndexSelectEnd = End;
            if (IndexSelectBegin == IndexSelectEnd && isThisYear == 2)
            {
                isThisYear = 1;
                isEnableSuperMenu = false;
            }
            if (IndexSelectBegin != IndexSelectEnd && isThisYear == 2)
            {
                isThisYear = 1;
                isEnableSuperMenu = true;
            }
            if (isMonth && isThisYear == 1 && IndexSelectBegin == 0 && IndexSelectBegin == IndexSelectEnd)
            {
                if (CurrentHyperForm.Count > 0)
                {
                    if (CurrentHyperForm[0].HaishaBiFrom.HasValue && CurrentHyperForm[0].HaishaBiFrom.Value.Month == 2 && CurrentHyperForm[0].HaishaBiFrom.Value.Day == 29)
                    {
                        isEnableSuperMenu = false;
                    }
                    if (CurrentHyperForm[0].TochakuBiFrom.HasValue && CurrentHyperForm[0].TochakuBiFrom.Value.Month == 2 && CurrentHyperForm[0].TochakuBiFrom.Value.Day == 29)
                    {
                        isEnableSuperMenu = false;
                    }
                    if (CurrentHyperForm[0].YoyakuBiFrom.HasValue && CurrentHyperForm[0].YoyakuBiFrom.Value.Month == 2 && CurrentHyperForm[0].YoyakuBiFrom.Value.Day == 29)
                    {
                        isEnableSuperMenu = false;
                    }
                }
            }
            await SelectTime();
            await ShowMenu(ClientX, ClientY, 0, 0);
            StateHasChanged();
            isDragComplete = true;
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async Task SelectTime()
    {
        try
        {
            SelectedTime = SaleData.Skip(IndexSelectBegin).Take(IndexSelectEnd - IndexSelectBegin + 1).ToList();
            if (firstDisplay)
            {
                firstDisplay = false;
                switch (NextGraph)
                {
                    case GraphPattern.BarSalePerStaff:
                        await DisplayStaffBySale();
                        break;
                    case GraphPattern.BarSalePerCustomer:
                        await DisplayCustomerBySale();
                        break;
                    case GraphPattern.BarSalePerGroupClassification:
                        await DisplayGroupClassificationBarBySale();
                        break;
                    case GraphPattern.PieSalePerGroupClassification:
                        await DisplayGroupClassificationPieBySale();
                        break;
                    default:
                        break;
                }
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }


    }

    private bool CheckDataByDate(HyperGraphData data, DateTime DayFrom, DateTime DayTo, bool IsLastYear)
    {
        try
        {
            DateTime DateValue = (DateTime)data.GetType().GetProperty(TypeDate).GetValue(data, null);
            DateTime DateToCompare = IsDisplayByDay ? DayTo : new DateTime(DayTo.Year, DayTo.Month, DateTime.DaysInMonth(DayTo.Year, DayTo.Month));
            return DateValue >= DayFrom && DateValue <= DateToCompare && (!IsLastYear || DateValue.Month != 2 || DateValue.Day != 29);
        }
        catch (Exception ex)
        {
            return true;
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private bool CheckDataByStaff(HyperGraphData data, int StaffSeq)
    {
        try
        {
            return data.EigTanCdSeq == StaffSeq;
        }
        catch (Exception ex)
        {
            return data.EigTanCdSeq == StaffSeq;
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private bool CheckDataByCustomer(HyperGraphData data, int BranchSeq, int TokuiSeq)
    {
        try
        {
            if (data.SitenCdSeq == BranchSeq && data.TokuiSeq == TokuiSeq)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        catch (Exception ex)
        {
            return (data.SitenCdSeq == BranchSeq && data.TokuiSeq == TokuiSeq);
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private bool CheckDataByGroupClassification(HyperGraphData data, string GroupClassification)
    {
        try
        {
            return data.DantaiKbn == GroupClassification;
        }
        catch (Exception ex)
        {
            return data.DantaiKbn == GroupClassification;
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async Task GetLastYearData()
    {
        try
        {
            LastYearGraphData = await HyperDataService.GetHyperGraphData(LastYearHyperData, new HassyaAllrightCloud.Domain.Dto.ClaimModel().CompanyID, new ClaimModel().TenantID);
            if (IsDisplayByDay)
            {
                LastYearSaleData = await HyperDataService.GetSaleByDay(LastYearGraphData, TypeDate, GetDayFromOfLastYear(StartDate).Value, ((DateTime)EndDate).AddYears(-1));
            }
            else
            {
                LastYearSaleData = await HyperDataService.GetSaleByMonth(LastYearGraphData, TypeDate, ((DateTime)StartDate).AddYears(-1), ((DateTime)EndDate).AddYears(-1));
            }
            LastYearSaleData = LastYearSaleData.FindAll(data => data.Time.Month != 2 || data.Time.Day != 29);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void ClearSelected()
    {
        try
        {
            if (!GraphList.Contains(GraphPattern.BarSalePerStaff))
            {
                SelectedStaffSeq = null;
            }
            if (!GraphList.Contains(GraphPattern.BarSalePerCustomer))
            {
                SelectedCustomerSeq = null;
            }
            if (!GraphList.Contains(GraphPattern.BarSalePerGroupClassification) && !GraphList.Contains(GraphPattern.PieSalePerGroupClassification))
            {
                SelectedGroupClassificationKbn = null;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void ClearCurrent(int GraphIndex, bool IsResetData)
    {
        try
        {
            if (!IsResetData)
            {
                return;
            }
            if (GraphList.Count() > GraphIndex)
            {
                CurrentHyperForm.RemoveRange(GraphIndex, GraphList.Count() - GraphIndex);
                CurrentHyperData.RemoveRange(GraphIndex, GraphList.Count() - GraphIndex);
                CurrentHyperDataLastYear.RemoveRange(GraphIndex, GraphList.Count() - GraphIndex);

                GraphList.RemoveRange(GraphIndex, GraphList.Count() - GraphIndex);
                CurrentHyperForm.Add(new HyperFormData(CurrentHyperForm[GraphIndex - 1]));
                CurrentHyperData.Add(new List<HyperGraphData>(CurrentHyperData[GraphIndex - 1]));
                CurrentHyperDataLastYear.Add(new List<HyperGraphData>(CurrentHyperDataLastYear[GraphIndex - 1]));
            }
            else if (GraphList.Count() == GraphIndex)
            {
                CurrentHyperForm.Add(new HyperFormData(CurrentHyperForm[GraphIndex - 1]));
                CurrentHyperData.Add(new List<HyperGraphData>(CurrentHyperData[GraphIndex - 1]));
                CurrentHyperDataLastYear.Add(new List<HyperGraphData>(CurrentHyperDataLastYear[GraphIndex - 1]));
            }
            ClearSelected();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetSaleAtIndex(int GraphIndex, bool IsResetData)
    {
        try
        {
            if (NextGraph == GraphPattern.LineSale)
            {
                SelectTime().Wait();
            }
            ClearCurrent(GraphIndex, IsResetData);
            int IndexToBeChanged = IsResetData ? GraphIndex : GraphIndex - 1;
            DateFromProperty.SetValue(CurrentHyperForm[IndexToBeChanged], SelectedTime.Count > 0 && SelectedTime[0].Time >= StartDate ? SelectedTime[0].Time : StartDate, null);
            DateTime? EndSelectedTime = SelectedTime.Count > 0 ? SelectedTime[SelectedTime.Count() - 1].Time : EndDate;
            if (!IsDisplayByDay)
            {
                DateTime EndOfMonth = new DateTime(((DateTime)EndSelectedTime).Year, ((DateTime)EndSelectedTime).Month, DateTime.DaysInMonth(((DateTime)EndSelectedTime).Year, ((DateTime)EndSelectedTime).Month));
                EndSelectedTime = EndOfMonth <= (DateTime)EndDate ? EndOfMonth : (DateTime)EndDate;
            }
            DateToProperty.SetValue(CurrentHyperForm[IndexToBeChanged], EndSelectedTime, null);
            if (IsResetData && SelectedTime.Count > 0)
            {
                CurrentHyperData[IndexToBeChanged] = CurrentHyperData[IndexToBeChanged - 1].FindAll(e => CheckDataByDate(e, SelectedTime[0].Time, SelectedTime[SelectedTime.Count() - 1].Time, false));
                CurrentHyperDataLastYear[IndexToBeChanged] = CurrentHyperDataLastYear[IndexToBeChanged - 1].FindAll(e => CheckDataByDate(e, ((DateTime)SelectedTime[0].Time).AddYears(-1), ((DateTime)SelectedTime[SelectedTime.Count() - 1].Time).AddYears(-1), true));
                if (SelectedTime.Count == 1 && SelectedTime[0].Time.Day == 29 && SelectedTime[0].Time.Month == 2)
                {
                    CurrentHyperDataLastYear[IndexToBeChanged] = new List<HyperGraphData>();
                }
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async Task OpenSuperMenuBySale(SuperMenyTypeDisplay type)
    {
        try
        {
            int GraphIndex = 0;
            SetSaleAtIndex(GraphIndex + 1, false);
            if (isThisYear == 1)
            {
                HyperFormData result = new HyperFormData(HyperDataService.GetDataLastYear(CurrentHyperForm, GraphIndex, isThisYear, currentYear, isMonth));
                await OpenSupermenu(type, result);
            }
            else
            {
                await OpenSupermenu(type, CurrentHyperForm[GraphIndex]);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }
    [JSInvokable]
    public async Task DisplayStaffBySale()
    {
        try
        {
            int GraphIndex = 0;
            SetSaleAtIndex(GraphIndex + 1, true);
            IsShowStaff = false;
            GraphList.Add(GraphPattern.BarSalePerStaff);
            StateHasChanged();
            SalePerStaffDayData = await HyperDataService.GetSaleByStaff(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerStaffDayDataLastYear = await HyperDataService.GetSaleByStaff(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByStaff = SalePerStaffDayData.Sum(data => data.Sale);
            TotalByStaffLastYear = SalePerStaffDayDataLastYear.Sum(data => data.Sale);
            // Compare data staff 2 year.
            HyperDataService.JoinSaleByStaff(ref SalePerStaffDayData, ref SalePerStaffDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowStaff = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayCustomerBySale()
    {
        try
        {
            int GraphIndex = 0;
            SetSaleAtIndex(GraphIndex + 1, true);
            IsShowCustomer = false;
            GraphList.Add(GraphPattern.BarSalePerCustomer);
            StateHasChanged();
            SalePerCustomerDayData = await HyperDataService.GetSaleByCustomer(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerCustomerDayDataLastYear = await HyperDataService.GetSaleByCustomer(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByCustomer = SalePerCustomerDayData.Sum(data => data.Sale);
            TotalByCustomerLastYear = SalePerCustomerDayDataLastYear.Sum(data => data.Sale);
            // Compare data customer 2 year.
            HyperDataService.JoinSaleByCustomer(ref SalePerCustomerDayData, ref SalePerCustomerDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowCustomer = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayGroupClassificationBarBySale()
    {
        try
        {
            int GraphIndex = 0;
            SetSaleAtIndex(GraphIndex + 1, true);
            IsShowGroup = false;
            GraphList.Add(GraphPattern.BarSalePerGroupClassification);
            StateHasChanged();
            SalePerGroupClassificationDayData = await HyperDataService.GetSaleByGroupClassification(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerGroupClassificationDayDataLastYear = await HyperDataService.GetSaleByGroupClassification(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByGroupClassification = SalePerGroupClassificationDayData.Sum(data => data.Sale);
            TotalByGroupClassificationLastYear = SalePerGroupClassificationDayDataLastYear.Sum(data => data.Sale);
            // Compare data GroupClassification 2 year.
            HyperDataService.JoinSaleByGroupClassification(ref SalePerGroupClassificationDayData, ref SalePerGroupClassificationDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowGroup = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayGroupClassificationPieBySale()
    {
        try
        {
            int GraphIndex = 0;
            SetSaleAtIndex(GraphIndex + 1, true);
            IsShowGroup = false;
            GraphList.Add(GraphPattern.PieSalePerGroupClassification);
            StateHasChanged();
            SalePerGroupClassificationDayData = await HyperDataService.GetSaleByGroupClassification(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerGroupClassificationDayDataLastYear = await HyperDataService.GetSaleByGroupClassification(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByGroupClassification = SalePerGroupClassificationDayData.Sum(data => data.Sale);
            TotalByGroupClassificationLastYear = SalePerGroupClassificationDayDataLastYear.Sum(data => data.Sale);
            // Compare data GroupClassification 2 year.
            HyperDataService.JoinSaleByGroupClassification(ref SalePerGroupClassificationDayData, ref SalePerGroupClassificationDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowGroup = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    private void SetStaffAtIndex(int GraphIndex, int StaffSeq, int StaffSeqLastYear, bool IsResetData)
    {
        try
        {
            ClearCurrent(GraphIndex, IsResetData);
            int IndexToBeChanged = IsResetData ? GraphIndex : GraphIndex - 1;
            StaffsData SelectedStaff = StaffList.Find(x => x.SyainCdSeq == StaffSeq);
            CurrentHyperForm[IndexToBeChanged].EigyoTantoShaFrom = SelectedStaff;
            CurrentHyperForm[IndexToBeChanged].EigyoTantoShaTo = SelectedStaff;
            if (IsResetData)
            {
                SelectedStaffSeq = StaffSeq;
                CurrentHyperData[IndexToBeChanged] = CurrentHyperData[IndexToBeChanged - 1].FindAll(e => CheckDataByStaff(e, StaffSeq));
                CurrentHyperDataLastYear[IndexToBeChanged] = CurrentHyperDataLastYear[IndexToBeChanged - 1].FindAll(e => CheckDataByStaff(e, StaffSeqLastYear));
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async Task OpenSuperMenuByStaff(int GraphIndex, int StaffSeq, int StaffSeqLastYear, SuperMenyTypeDisplay type)
    {
        try
        {
            SetStaffAtIndex(GraphIndex + 1, StaffSeq, StaffSeqLastYear, false);
            if (isThisYear == 1)
            {
                HyperFormData result = new HyperFormData(HyperDataService.GetDataLastYear(CurrentHyperForm, GraphIndex, isThisYear, currentYear, isMonth));
                await OpenSupermenu(type, result);
            }
            else
            {
                await OpenSupermenu(type, CurrentHyperForm[GraphIndex]);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayCustomerByStaff()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
            IsShowCustomer = false;
            SetStaffAtIndex(GraphIndex + 1, SalePerStaffDayData[IndexOfMenuSeries].StaffSeq, SalePerStaffDayDataLastYear[IndexOfMenuSeries].StaffSeq, true);
            GraphList.Add(GraphPattern.BarSalePerCustomer);
            StateHasChanged();
            SalePerCustomerDayData = await HyperDataService.GetSaleByCustomer(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerCustomerDayDataLastYear = await HyperDataService.GetSaleByCustomer(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByCustomer = SalePerCustomerDayData.Sum(data => data.Sale);
            TotalByCustomerLastYear = SalePerCustomerDayDataLastYear.Sum(data => data.Sale);
            // Compare data customer 2 year.
            HyperDataService.JoinSaleByCustomer(ref SalePerCustomerDayData, ref SalePerCustomerDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowCustomer = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayGroupClassificationBarByStaff()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
            SetStaffAtIndex(GraphIndex + 1, SalePerStaffDayData[IndexOfMenuSeries].StaffSeq, SalePerStaffDayDataLastYear[IndexOfMenuSeries].StaffSeq, true);
            IsShowGroup = false;
            GraphList.Add(GraphPattern.BarSalePerGroupClassification);
            StateHasChanged();
            SalePerGroupClassificationDayData = await HyperDataService.GetSaleByGroupClassification(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerGroupClassificationDayDataLastYear = await HyperDataService.GetSaleByGroupClassification(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByGroupClassification = SalePerGroupClassificationDayData.Sum(data => data.Sale);
            TotalByGroupClassificationLastYear = SalePerGroupClassificationDayDataLastYear.Sum(data => data.Sale);
            // Compare data GroupClassification 2 year.
            HyperDataService.JoinSaleByGroupClassification(ref SalePerGroupClassificationDayData, ref SalePerGroupClassificationDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowGroup = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayGroupClassificationPieByStaff()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerStaff);
            SetStaffAtIndex(GraphIndex + 1, SalePerStaffDayData[IndexOfMenuSeries].StaffSeq, SalePerStaffDayDataLastYear[IndexOfMenuSeries].StaffSeq, true);
            IsShowGroup = false;
            GraphList.Add(GraphPattern.PieSalePerGroupClassification);
            StateHasChanged();
            SalePerGroupClassificationDayData = await HyperDataService.GetSaleByGroupClassification(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerGroupClassificationDayDataLastYear = await HyperDataService.GetSaleByGroupClassification(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByGroupClassification = SalePerGroupClassificationDayData.Sum(data => data.Sale);
            TotalByGroupClassificationLastYear = SalePerGroupClassificationDayDataLastYear.Sum(data => data.Sale);
            // Compare data GroupClassification 2 year.
            HyperDataService.JoinSaleByGroupClassification(ref SalePerGroupClassificationDayData, ref SalePerGroupClassificationDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowGroup = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetCusomterAtIndex(int GraphIndex, int BranchSeq, int TokuiSeq, int GyosyaCdSeq, int BranchSeqLastYear, int TokuiSeqLastYear, bool IsResetData)
    {
        try
        {
            ClearCurrent(GraphIndex, IsResetData);
            CustomerComponentGyosyaData SelectedGyosya = ListGyosya.FirstOrDefault(_ => _.GyosyaCdSeq == GyosyaCdSeq);
            ListTokisk = TokiskData.Where(_ => _.GyosyaCdSeq == (SelectedGyosya?.GyosyaCdSeq ?? -1)).ToList();
            CustomerComponentTokiskData SelectedTokisk = ListTokisk.FirstOrDefault(_ => _.TokuiSeq == TokuiSeq);
            ListTokiSt = TokiStData.Where(_ => _.TokuiSeq == (SelectedTokisk?.TokuiSeq ?? -1)).ToList();
            CustomerComponentTokiStData SelectedTokiSt = ListTokiSt.FirstOrDefault(_ => _.SitenCdSeq == BranchSeq);
            int IndexToBeChanged = IsResetData ? GraphIndex : GraphIndex - 1;
            CurrentHyperForm[IndexToBeChanged].GyosyaTokuiSakiFrom = SelectedGyosya;
            CurrentHyperForm[IndexToBeChanged].GyosyaTokuiSakiTo = SelectedGyosya;
            CurrentHyperForm[IndexToBeChanged].TokiskTokuiSakiFrom = SelectedTokisk;
            CurrentHyperForm[IndexToBeChanged].TokiskTokuiSakiTo = SelectedTokisk;
            CurrentHyperForm[IndexToBeChanged].TokiStTokuiSakiFrom = SelectedTokiSt;
            CurrentHyperForm[IndexToBeChanged].TokiStTokuiSakiTo = SelectedTokiSt;
            if (IsResetData)
            {
                SelectedCustomerSeq = BranchSeq;
                CurrentHyperData[IndexToBeChanged] = CurrentHyperData[IndexToBeChanged - 1].FindAll(e => CheckDataByCustomer(e, BranchSeq, TokuiSeq));
                CurrentHyperDataLastYear[IndexToBeChanged] = CurrentHyperDataLastYear[IndexToBeChanged - 1].FindAll(e => CheckDataByCustomer(e, BranchSeqLastYear, TokuiSeqLastYear));
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async Task OpenSuperMenuByCustomer(int GraphIndex, int BranchSeq, int TokuiSeq, int GyosyaCdSeq, int BranchSeqLastYear, int TokuiSeqLastYear, SuperMenyTypeDisplay type)
    {
        try
        {
            SetCusomterAtIndex(GraphIndex + 1, BranchSeq, TokuiSeq, GyosyaCdSeq, BranchSeqLastYear, TokuiSeqLastYear, false);
            if (isThisYear == 1)
            {
                HyperFormData result = new HyperFormData(HyperDataService.GetDataLastYear(CurrentHyperForm, GraphIndex, isThisYear, currentYear, isMonth));
                await OpenSupermenu(type, result);
            }
            else
            {
                await OpenSupermenu(type, CurrentHyperForm[GraphIndex]);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayStaffByCustomer()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);
            SetCusomterAtIndex(GraphIndex + 1, SalePerCustomerDayData[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayData[IndexOfMenuSeries].CustomerSeq, SalePerCustomerDayData[IndexOfMenuSeries].GyosyaCdSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].CustomerSeq, true);
            IsShowStaff = false;
            GraphList.Add(GraphPattern.BarSalePerStaff);
            StateHasChanged();
            SalePerStaffDayData = await HyperDataService.GetSaleByStaff(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerStaffDayDataLastYear = await HyperDataService.GetSaleByStaff(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByStaff = SalePerStaffDayData.Sum(data => data.Sale);
            TotalByStaffLastYear = SalePerStaffDayDataLastYear.Sum(data => data.Sale);
            // Compare data staff 2 year.
            HyperDataService.JoinSaleByStaff(ref SalePerStaffDayData, ref SalePerStaffDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowStaff = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayGroupClassificationBarByCustomer()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);
            SetCusomterAtIndex(GraphIndex + 1, SalePerCustomerDayData[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayData[IndexOfMenuSeries].CustomerSeq, SalePerCustomerDayData[IndexOfMenuSeries].GyosyaCdSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].CustomerSeq, true);
            IsShowGroup = false;
            GraphList.Add(GraphPattern.BarSalePerGroupClassification);
            StateHasChanged();
            SalePerGroupClassificationDayData = await HyperDataService.GetSaleByGroupClassification(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerGroupClassificationDayDataLastYear = await HyperDataService.GetSaleByGroupClassification(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByGroupClassification = SalePerGroupClassificationDayData.Sum(data => data.Sale);
            TotalByGroupClassificationLastYear = SalePerGroupClassificationDayDataLastYear.Sum(data => data.Sale);
            // Compare data GroupClassification 2 year.
            HyperDataService.JoinSaleByGroupClassification(ref SalePerGroupClassificationDayData, ref SalePerGroupClassificationDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowGroup = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayGroupClassificationPieByCustomer()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerCustomer);
            SetCusomterAtIndex(GraphIndex + 1, SalePerCustomerDayData[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayData[IndexOfMenuSeries].CustomerSeq, SalePerCustomerDayData[IndexOfMenuSeries].GyosyaCdSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].BranchSeq, SalePerCustomerDayDataLastYear[IndexOfMenuSeries].CustomerSeq, true);
            IsShowGroup = false;
            GraphList.Add(GraphPattern.PieSalePerGroupClassification);
            StateHasChanged();
            SalePerGroupClassificationDayData = await HyperDataService.GetSaleByGroupClassification(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerGroupClassificationDayDataLastYear = await HyperDataService.GetSaleByGroupClassification(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByGroupClassification = SalePerGroupClassificationDayData.Sum(data => data.Sale);
            TotalByGroupClassificationLastYear = SalePerGroupClassificationDayDataLastYear.Sum(data => data.Sale);
            // Compare data GroupClassification 2 year.
            HyperDataService.JoinSaleByGroupClassification(ref SalePerGroupClassificationDayData, ref SalePerGroupClassificationDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowGroup = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetGroupClassificationAtIndex(int GraphIndex, string GroupClassificationCd, string GroupClassificationCdLastYear, bool IsResetData)
    {
        try
        {
            ClearCurrent(GraphIndex, IsResetData);
            int IndexToBeChanged = IsResetData ? GraphIndex : GraphIndex - 1;
            CodeTypeData SelectedGroupClassification = CodeKbList.Find(x => x.CodeKbn == GroupClassificationCd);
            CurrentHyperForm[IndexToBeChanged].DantaiKbnFrom = SelectedGroupClassification;
            CurrentHyperForm[IndexToBeChanged].DantaiKbnTo = SelectedGroupClassification;
            if (IsResetData)
            {
                SelectedGroupClassificationKbn = GroupClassificationCd;
                CurrentHyperData[IndexToBeChanged] = CurrentHyperData[IndexToBeChanged - 1].FindAll(e => CheckDataByGroupClassification(e, GroupClassificationCd));
                CurrentHyperDataLastYear[IndexToBeChanged] = CurrentHyperDataLastYear[IndexToBeChanged - 1].FindAll(e => CheckDataByGroupClassification(e, GroupClassificationCdLastYear));
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async Task OpenSuperMenuByGroupClassification(int GraphIndex, string GroupClassificationCd, string GroupClassificationCdLastYear, SuperMenyTypeDisplay type)
    {
        try
        {
            SetGroupClassificationAtIndex(GraphIndex + 1, GroupClassificationCd, GroupClassificationCdLastYear, false);
            if (isThisYear == 1)
            {
                HyperFormData result = new HyperFormData(HyperDataService.GetDataLastYear(CurrentHyperForm, GraphIndex, isThisYear, currentYear, isMonth));
                await OpenSupermenu(type, result);
            }
            else
            {
                await OpenSupermenu(type, CurrentHyperForm[GraphIndex]);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayStaffByGroupClassification()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerGroupClassification);
            if (GraphIndex < 0)
            {
                GraphIndex = GraphList.IndexOf(GraphPattern.PieSalePerGroupClassification);
            }
            SetGroupClassificationAtIndex(GraphIndex + 1, SalePerGroupClassificationDayData[IndexOfMenuSeries].GroupClassificationCd, SalePerGroupClassificationDayDataLastYear[IndexOfMenuSeries].GroupClassificationCd, true);
            IsShowStaff = false;
            GraphList.Add(GraphPattern.BarSalePerStaff);
            StateHasChanged();
            SalePerStaffDayData = await HyperDataService.GetSaleByStaff(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerStaffDayDataLastYear = await HyperDataService.GetSaleByStaff(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByStaff = SalePerStaffDayData.Sum(data => data.Sale);
            TotalByStaffLastYear = SalePerStaffDayDataLastYear.Sum(data => data.Sale);
            // Compare data staff 2 year.
            HyperDataService.JoinSaleByStaff(ref SalePerStaffDayData, ref SalePerStaffDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowStaff = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task DisplayCustomerByGroupClassification()
    {
        try
        {
            int GraphIndex = GraphList.IndexOf(GraphPattern.BarSalePerGroupClassification);
            if (GraphIndex < 0)
            {
                GraphIndex = GraphList.IndexOf(GraphPattern.PieSalePerGroupClassification);
            }
            SetGroupClassificationAtIndex(GraphIndex + 1, SalePerGroupClassificationDayData[IndexOfMenuSeries].GroupClassificationCd, SalePerGroupClassificationDayDataLastYear[IndexOfMenuSeries].GroupClassificationCd, true);
            IsShowCustomer = false;
            GraphList.Add(GraphPattern.BarSalePerCustomer);
            StateHasChanged();
            SalePerCustomerDayData = await HyperDataService.GetSaleByCustomer(CurrentHyperData[GraphIndex + 1], TypeDate);
            SalePerCustomerDayDataLastYear = await HyperDataService.GetSaleByCustomer(CurrentHyperDataLastYear[GraphIndex + 1], TypeDate);
            TotalByCustomer = SalePerCustomerDayData.Sum(data => data.Sale);
            TotalByCustomerLastYear = SalePerCustomerDayDataLastYear.Sum(data => data.Sale);
            // Compare data customer 2 year.
            HyperDataService.JoinSaleByCustomer(ref SalePerCustomerDayData, ref SalePerCustomerDayDataLastYear);
            IsReinitNewGraph = true;
            IsShowCustomer = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task ShowMenu(double ClientX, double ClientY, int Index, int Type, bool IsFromGrid = false)
    {
        try
        {
            if (!IsFromGrid)
            {
                int checkYear = Type;
                Type = Type == 5 ? 4 : Type;
                switch ((GraphPattern)Type)
                {
                    case GraphPattern.LineSale:
                    case GraphPattern.BarLineSaleQuan:
                        break;
                    case GraphPattern.BarSalePerStaff:
                        if (BarStaffSeriesLY)
                        {
                            isThisYear = (byte)(Index % 2 == 0 ? 0 : 1);
                        }
                        else
                        {
                            isThisYear = 0;
                        }
                        isEnableSuperMenu = true;
                        break;
                    case GraphPattern.BarSalePerCustomer:
                        if (BarCustomerSeriesLY)
                        {
                            isThisYear = (byte)(Index % 2 == 0 ? 0 : 1);
                        }
                        else
                        {
                            isThisYear = 0;
                        }
                        isEnableSuperMenu = true;
                        break;
                    case GraphPattern.BarSalePerGroupClassification:
                        if (BarGroupClassificationSeriesLY)
                        {
                            isThisYear = (byte)(Index % 2 == 0 ? 0 : 1);
                        }
                        else
                        {
                            isThisYear = 0;
                        }
                        isEnableSuperMenu = true;
                        break;
                    case GraphPattern.PieSalePerGroupClassification:
                        isThisYear = (byte)(checkYear == 5 ? 1 : 0);
                        isEnableSuperMenu = true;
                        break;
                    default:
                        if (checkYear == 5)
                        {
                            isThisYear = 1;
                        }
                        else
                        {
                            isThisYear = 0;
                        }
                        isEnableSuperMenu = true;
                        break;
                }
            }
            if (IsFromGrid)
            {
                if (isThisYear == 1)
                {
                    isEnableSuperMenu = true;
                    if (CurrentHyperForm.Count > 0)
                    {
                        if (CurrentHyperForm[1].HaishaBiFrom.HasValue && CurrentHyperForm[1].HaishaBiTo.HasValue &&
                            CurrentHyperForm[1].HaishaBiFrom.Value == CurrentHyperForm[1].HaishaBiTo.Value &&
                            CurrentHyperForm[1].HaishaBiFrom.Value.Month == 2 && CurrentHyperForm[1].HaishaBiFrom.Value.Day == 29)
                        {
                            isEnableSuperMenu = false;
                        }
                        if (CurrentHyperForm[1].TochakuBiFrom.HasValue && CurrentHyperForm[1].TochakuBiTo.HasValue &&
                            CurrentHyperForm[1].TochakuBiFrom.Value == CurrentHyperForm[1].TochakuBiTo.Value &&
                            CurrentHyperForm[1].TochakuBiFrom.Value.Month == 2 && CurrentHyperForm[1].TochakuBiFrom.Value.Day == 29)
                        {
                            isEnableSuperMenu = false;
                        }
                        if (CurrentHyperForm[1].YoyakuBiFrom.HasValue && CurrentHyperForm[1].YoyakuBiTo.HasValue &&
                            CurrentHyperForm[1].YoyakuBiFrom.Value == CurrentHyperForm[1].YoyakuBiTo.Value &&
                            CurrentHyperForm[1].YoyakuBiFrom.Value.Month == 2 && CurrentHyperForm[1].YoyakuBiFrom.Value.Day == 29)
                        {
                            isEnableSuperMenu = false;
                        }
                    }
                }
                if (isThisYear == 0)
                {
                    isEnableSuperMenu = true;
                }
            }
            int x = Convert.ToInt32(ClientX);
            int y = Convert.ToInt32(ClientY);
            IndexOfMenuSeries = Index;
            if (BarStaffSeriesLY && !IsFromGrid && (GraphPattern)Type != GraphPattern.PieSalePerGroupClassification)
            {
                IndexOfMenuSeries = IndexOfMenuSeries / 2;
            }

            string MenuId = GetMenuId(Index, Type);
            if (!(string.IsNullOrEmpty(MenuId)))
            {
                await blazorContextMenuService.ShowMenu(MenuId, x, y);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    [JSInvokable]
    public async Task HideMenu(int Index, int Type)
    {
        try
        {
            string MenuId = GetMenuId(Index, Type);
            if (!(string.IsNullOrEmpty(MenuId)))
            {
                await blazorContextMenuService.HideMenu(MenuId);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private string GetMenuId(int Index, int Type)
    {
        try
        {
            string MenuId = "";
            switch ((GraphPattern)Type)
            {
                case GraphPattern.LineSale:
                    MenuId = "LineSaleSeriesMenu";
                    break;
                case GraphPattern.BarSalePerStaff:
                    MenuId = "BarStaffSeriesMenu";
                    break;
                case GraphPattern.BarSalePerCustomer:
                    MenuId = "BarCustomerSeriesMenu";
                    break;
                case GraphPattern.BarSalePerGroupClassification:
                    if (!(string.IsNullOrEmpty(SalePerGroupClassificationDayData[IndexOfMenuSeries].GroupClassificationCd)))
                    {
                        MenuId = "GroupClassificationSeriesMenu";
                    }
                    break;
                case GraphPattern.PieSalePerGroupClassification:
                    if (!(string.IsNullOrEmpty(SalePerGroupClassificationDayData[IndexOfMenuSeries].GroupClassificationCd)))
                    {
                        MenuId = "GroupClassificationSeriesMenu";
                    }
                    break;
                default:
                    break;
            }
            return MenuId;
        }
        catch (Exception ex)
        {
            return "";
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async void MouseDownGrid(MouseEventArgs e, int index, byte _isThisYear)
    {
        try
        {
            if (!isDragComplete)
            {
                return;
            }
            isDragComplete = false;
            isThisYear = _isThisYear;
            await JSRuntime.InvokeAsync<string>("SelectTimeByGrid", index, SaleData.Count(), DotNetObjectReference.Create(this));
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async void MouseDownGridWCount(MouseEventArgs e, int index, byte _isThisYear)
    {
        try
        {
            if (!isDragComplete)
            {
                return;
            }
            isDragComplete = false;
            isThisYear = _isThisYear;
            index = index * 2;
            await JSRuntime.InvokeAsync<string>("SelectTimeByGridWCount", index, SaleData.Count(), DotNetObjectReference.Create(this));
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private async void MouseClickGridNext(MouseEventArgs e, int index, int type, byte _isThisYear)
    {
        try
        {
            isThisYear = _isThisYear;
            await ShowMenu(e.ClientX, e.ClientY, index, type, true);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }
    }

    protected void PreparePointColorForStaff(ChartSeriesPointCustomizationSettings pointSettings)
    {
        try
        {
            if (!BarStaffSeriesLY)
            {
                SalePerStaff item = (SalePerStaff)pointSettings.Point.DataItems.ToList()[0];
                int index = SalePerStaffDayData.IndexOf(item);
                if (index > 0)
                {
                    pointSettings.PointAppearance.Color = HyperDataService.GetColorByIndex(index);
                }
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    protected void PreparePointColorForCustomer(ChartSeriesPointCustomizationSettings pointSettings)
    {
        try
        {
            if (!BarCustomerSeriesLY)
            {
                SalePerCustomer item = (SalePerCustomer)pointSettings.Point.DataItems.ToList()[0];
                int index = SalePerCustomerDayData.IndexOf(item);
                if (index > 0)
                {
                    pointSettings.PointAppearance.Color = HyperDataService.GetColorByIndex(index);
                }
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }
    }

    protected void PreparePointColorForGroup(ChartSeriesPointCustomizationSettings pointSettings)
    {
        try
        {
            if (!BarGroupClassificationSeriesLY)
            {
                SalePerGroupClassification item = (SalePerGroupClassification)pointSettings.Point.DataItems.ToList()[0];
                int index = SalePerGroupClassificationDayData.IndexOf(item);
                if (index > 0)
                {
                    pointSettings.PointAppearance.Color = HyperDataService.GetColorByIndex(index);
                }
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }


    }

    protected void GetVisibleChangeHandler(Boolean args)
    {
        try
        {
            LineSaleCountSeriesLY = args;
            BarStaffSeriesLY = args;
            BarCustomerSeriesLY = args;
            BarGroupClassificationSeriesLY = args;
            PieGroupClassificationSeriesLY = args;
            InvokeAsync(StateHasChanged);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    protected async Task OpenSupermenu(SuperMenyTypeDisplay type, HyperFormData hyperForm)
    {
        try
        {
            string baseUrl = AppSettingsService.GetBaseUrl();
            string QueryParam = hyperForm.ToQueryString();
            string url = "";
            url = baseUrl + string.Format("/supermenu?{0}&type={1}", QueryParam, (int)type);
            await JSRuntime.InvokeVoidAsync("open", url, "_blank");
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    public async Task ExcelExport()
    {
        try
        {
            ExcelPackage excelPackage = new ExcelPackage();
            for (int i = 0; i < GraphList.Count; i++)
            {
                GraphPattern Graph = GraphList[i];
                switch (Graph)
                {
                    // 売上件数
                    case GraphPattern.BarLineSaleQuan:
                        AddSaleQuantitySheet(excelPackage, i);
                        break;
                    case GraphPattern.LineSale:
                        if (int.Parse(type) != (int)GraphTypeDisplay.GraphOrganizationBar && int.Parse(type) != (int)GraphTypeDisplay.GraphOrganizationPie)
                        {
                            AddSaleSheet(excelPackage, i);
                        }
                        break;
                    case GraphPattern.BarSalePerStaff:
                        AddSalePerStaffSheet(excelPackage, i);
                        break;
                    case GraphPattern.BarSalePerCustomer:
                        AddSalePerCustomerSheet(excelPackage, i);
                        break;
                    case GraphPattern.BarSalePerGroupClassification:
                        AddSalePerGroupClassificationBarSheet(excelPackage, i);
                        break;
                    case GraphPattern.PieSalePerGroupClassification:
                        AddSalePerGroupClassificationPieSheet(excelPackage, i);
                        break;
                    default:
                        break;
                }
            }
            byte[] Base64Nyan = excelPackage.GetAsByteArray();
            await BlazorDownloadFileService.DownloadFile(Lang["HyperGraph"] + DateTime.Now.ToString(CommonConstants.FormatYMDHMSNoSeparated) + ".xlsx", Base64Nyan, BufferSize, "application/octet-stream");
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void AddSaleQuantitySheet(ExcelPackage excelPackage, int index)
    {
        try
        {
            string Title = Lang["SalesCountComparison"] + (IsDisplayByDay ? Lang["PerDay"] : Lang["PerMonth"]);
            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(Title);
            SetSheetTitle(worksheet, Title);
            SetFilterConditionForSheet(worksheet, index);
            SetTableDataForSaleQuantity(worksheet, 5);
            SetGraphForSaleQuantity(worksheet, Title, 5);
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void AddSaleSheet(ExcelPackage excelPackage, int index)
    {
        try
        {
            string Title = Lang["SalesComparison"] + (IsDisplayByDay ? Lang["PerDay"] : Lang["PerMonth"]);
            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(Title);
            SetSheetTitle(worksheet, Title);
            SetFilterConditionForSheet(worksheet, index);
            SetTableDataForSale(worksheet, 5);
            SetGraphForSale(worksheet, Title, 5);
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void AddSalePerStaffSheet(ExcelPackage excelPackage, int index)
    {
        try
        {
            string Title = Lang["SalesStaffPer"];
            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(Title);
            SetSheetTitle(worksheet, Title);
            SetFilterConditionForSheet(worksheet, index);
            SetTableDataForSalePerStaff(worksheet, 5);
            SetGraphForSalePerStaff(worksheet, Title, 5);
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void AddSalePerCustomerSheet(ExcelPackage excelPackage, int index)
    {
        try
        {
            string Title = Lang["CustomerPer"];
            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(Title);
            SetSheetTitle(worksheet, Title);
            SetFilterConditionForSheet(worksheet, index);
            SetTableDataForSalePerCustomer(worksheet, 5);
            SetGraphForSalePerCustomer(worksheet, Title, 5);
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void AddSalePerGroupClassificationBarSheet(ExcelPackage excelPackage, int index)
    {
        try
        {
            string Title = Lang["GroupClassificationPer"];
            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(Title);
            SetSheetTitle(worksheet, Title);
            SetFilterConditionForSheet(worksheet, index);
            SetTableDataForSalePerGroup(worksheet, 5);
            SetBarGraphForSalePerGroup(worksheet, Title, 5);
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void AddSalePerGroupClassificationPieSheet(ExcelPackage excelPackage, int index)
    {
        try
        {
            string Title = Lang["GroupClassificationPer"];
            ExcelWorksheet worksheet = excelPackage.Workbook.Worksheets.Add(Title);
            SetSheetTitle(worksheet, Title);
            SetFilterConditionForSheet(worksheet, index);
            SetTableDataForSalePerGroup(worksheet, 5);
            SetPieGraphForSalePerGroup(worksheet, Title, 5);
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetSheetTitle(ExcelWorksheet worksheet, string title)
    {
        try
        {
            worksheet.Cells.Style.Font.Name = "ＭＳ Ｐゴシック";
            worksheet.Cells.Style.Fill.PatternType = ExcelFillStyle.Solid;
            worksheet.Cells.Style.Fill.BackgroundColor.SetColor(Color.White);
            ExcelRange TitleArea = worksheet.Cells["I2:Q3"];
            // Merge cell
            TitleArea.Merge = true;
            // Border Setting
            TitleArea.Style.Border.BorderAround(ExcelBorderStyle.Thick);
            // Text Setting
            TitleArea.Style.Font.Bold = true;
            TitleArea.Style.Font.Size = 18;
            // Alignment Setting
            TitleArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            TitleArea.Style.VerticalAlignment = ExcelVerticalAlignment.Center;
            // Add Text
            TitleArea.Value = title;
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetFilterConditionForSheet(ExcelWorksheet worksheet, int index)
    {
        try
        {
            ExcelRange FilterTitleArea = worksheet.Cells["B5:G5"];
            // Merge cell
            FilterTitleArea.Merge = true;
            // Border Setting
            FilterTitleArea.Style.Border.Top.Style = ExcelBorderStyle.Medium;
            FilterTitleArea.Style.Border.Left.Style = ExcelBorderStyle.Medium;
            FilterTitleArea.Style.Border.Right.Style = ExcelBorderStyle.Medium;
            // Text Setting
            FilterTitleArea.Style.Font.Bold = true;
            FilterTitleArea.Style.Font.Size = 12;
            // Alignment Setting
            FilterTitleArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            // Add Text
            FilterTitleArea.Value = HyperMenuLang["SearchCondition"];
            HyperFormData hyperFormDate = CurrentHyperForm[index];

            int BeginRow = 6;
            int StartRow = BeginRow;
            string FromToSymbol = " ～ ";
            while (true)
            {
                // Item Name Title
                ExcelRange FilterItemNameArea = worksheet.Cells["B" + StartRow + ":C" + StartRow];
                FilterItemNameArea.Merge = true;
                FilterItemNameArea.Style.Border.Top.Style = ExcelBorderStyle.Thin;
                FilterItemNameArea.Style.Border.Left.Style = ExcelBorderStyle.Medium;
                FilterItemNameArea.Style.Border.Right.Style = ExcelBorderStyle.Thin;
                FilterItemNameArea.Style.Font.Bold = StartRow == BeginRow;
                FilterItemNameArea.Style.Font.Size = 11;
                FilterItemNameArea.Style.HorizontalAlignment = StartRow == BeginRow ? ExcelHorizontalAlignment.Center : ExcelHorizontalAlignment.Left;

                // Item Value Title
                ExcelRange FilterItemValueArea = worksheet.Cells["D" + StartRow + ":G" + StartRow];
                FilterItemValueArea.Merge = true;
                FilterItemValueArea.Style.Border.Top.Style = ExcelBorderStyle.Thin;
                FilterItemValueArea.Style.Border.Right.Style = ExcelBorderStyle.Medium;
                FilterItemValueArea.Style.Font.Bold = StartRow == BeginRow;
                FilterItemValueArea.Style.Font.Size = 11;
                FilterItemValueArea.Style.HorizontalAlignment = StartRow == BeginRow ? ExcelHorizontalAlignment.Center : ExcelHorizontalAlignment.Left;
                if (StartRow == BeginRow)
                {
                    FilterItemNameArea.Value = Lang["ItemName"];
                    FilterItemValueArea.Value = Lang["Value"];
                }

                // 配車日
                if (StartRow == BeginRow + 1)
                {
                    FilterItemNameArea.Value = HyperMenuLang["DispatchDate"];
                    string Value = string.Empty;
                    if (hyperFormDate.HaishaBiFrom != null)
                    {
                        Value += ((DateTime)hyperFormDate.HaishaBiFrom).ToString(CommonConstants.Format2YMDWithSlash) + FromToSymbol;
                    }
                    if (hyperFormDate.HaishaBiTo != null)
                    {
                        Value += (hyperFormDate.HaishaBiFrom == null ? FromToSymbol : string.Empty);
                        Value += ((DateTime)hyperFormDate.HaishaBiTo).ToString(CommonConstants.Format2YMDWithSlash);
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 到着日
                if (StartRow == BeginRow + 2)
                {
                    FilterItemNameArea.Value = HyperMenuLang["ArrivalDate"];
                    string Value = string.Empty;
                    if (hyperFormDate.TochakuBiFrom != null)
                    {
                        Value += ((DateTime)hyperFormDate.TochakuBiFrom).ToString(CommonConstants.Format2YMDWithSlash) + FromToSymbol;
                    }
                    if (hyperFormDate.TochakuBiTo != null)
                    {
                        Value += (hyperFormDate.TochakuBiFrom == null ? FromToSymbol : string.Empty);
                        Value += ((DateTime)hyperFormDate.TochakuBiTo).ToString(CommonConstants.Format2YMDWithSlash);
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 予約日
                if (StartRow == BeginRow + 3)
                {
                    FilterItemNameArea.Value = HyperMenuLang["ReserveDate"];
                    string Value = string.Empty;
                    if (hyperFormDate.YoyakuBiFrom != null)
                    {
                        Value += ((DateTime)hyperFormDate.YoyakuBiFrom).ToString(CommonConstants.Format2YMDWithSlash) + FromToSymbol;
                    }
                    if (hyperFormDate.YoyakuBiTo != null)
                    {
                        Value += (hyperFormDate.YoyakuBiFrom == null ? FromToSymbol : string.Empty);
                        Value += ((DateTime)hyperFormDate.YoyakuBiTo).ToString(CommonConstants.Format2YMDWithSlash);
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 受付番号
                if (StartRow == BeginRow + 4)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["ReceiptNumber"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.UketsukeBangoFrom != null)
                    {
                        Value += hyperFormDate.UketsukeBangoFrom.PadLeft(10, '0') + FromToSymbol;
                    }
                    if (hyperFormDate.UketsukeBangoTo != null)
                    {
                        Value += (hyperFormDate.UketsukeBangoFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.UketsukeBangoTo.PadLeft(10, '0');
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 団体名
                if (StartRow == BeginRow + 5)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["DantaiNm"]).Split('：', ':'));
                    FilterItemValueArea.Value = hyperFormDate.DantaiNm;
                }

                // 予約区分
                if (StartRow == BeginRow + 6)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["ReservationClassification"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.YoyakuFrom != null)
                    {
                        Value += hyperFormDate.YoyakuFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.YoyakuTo != null)
                    {
                        Value += (hyperFormDate.YoyakuFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.YoyakuTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 営業担当
                if (StartRow == BeginRow + 7)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["SalesStaff"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.EigyoTantoShaFrom != null)
                    {
                        Value += hyperFormDate.EigyoTantoShaFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.EigyoTantoShaTo != null)
                    {
                        Value += (hyperFormDate.EigyoTantoShaFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.EigyoTantoShaTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 受付営業所
                if (StartRow == BeginRow + 8)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["RegistrationOffice"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.UketsukeEigyoJoFrom != null)
                    {
                        Value += hyperFormDate.UketsukeEigyoJoFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.UketsukeEigyoJoTo != null)
                    {
                        Value += (hyperFormDate.UketsukeEigyoJoFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.UketsukeEigyoJoTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 入力担当
                if (StartRow == BeginRow + 9)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["InputStaff"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.NyuryokuTantoShaFrom != null)
                    {
                        Value += hyperFormDate.NyuryokuTantoShaFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.NyuryokuTantoShaTo != null)
                    {
                        Value += (hyperFormDate.NyuryokuTantoShaFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.NyuryokuTantoShaTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 得意先
                if (StartRow == BeginRow + 10)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["Customer"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.TokiskTokuiSakiFrom != null)
                    {
                        Value += hyperFormDate.TokiskTokuiSakiFrom.Text;
                    }
                    if (hyperFormDate.TokiStTokuiSakiFrom != null)
                    {
                        Value += " " + hyperFormDate.TokiStTokuiSakiFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.TokiskTokuiSakiTo != null)
                    {
                        Value += ((hyperFormDate.TokiskTokuiSakiFrom == null || hyperFormDate.TokiStTokuiSakiFrom == null) ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.TokiskTokuiSakiTo.Text;
                    }
                    if (hyperFormDate.TokiStTokuiSakiTo != null)
                    {
                        Value += " " + hyperFormDate.TokiStTokuiSakiTo.Text + FromToSymbol;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 仕入先
                if (StartRow == BeginRow + 11)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["Supplier"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.TokiskShiireSakiFrom != null)
                    {
                        Value += hyperFormDate.TokiskShiireSakiFrom.Text;
                    }
                    if (hyperFormDate.TokiStShiireSakiFrom != null)
                    {
                        Value += " " + hyperFormDate.TokiStShiireSakiFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.TokiskShiireSakiTo != null)
                    {
                        Value += ((hyperFormDate.TokiskShiireSakiFrom == null || hyperFormDate.TokiStShiireSakiFrom == null) ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.TokiskShiireSakiTo.Text;
                    }
                    if (hyperFormDate.TokiStShiireSakiTo != null)
                    {
                        Value += " " + hyperFormDate.TokiStShiireSakiTo.Text + FromToSymbol;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 団体区分
                if (StartRow == BeginRow + 12)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["GroupClassification"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.DantaiKbnFrom != null)
                    {
                        Value += hyperFormDate.DantaiKbnFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.DantaiKbnTo != null)
                    {
                        Value += (hyperFormDate.DantaiKbnFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.DantaiKbnTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 客種区分
                if (StartRow == BeginRow + 13)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["CustomerTypeClassification"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.KyakuDaneKbnFrom != null)
                    {
                        Value += hyperFormDate.KyakuDaneKbnFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.KyakuDaneKbnTo != null)
                    {
                        Value += (hyperFormDate.KyakuDaneKbnFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.KyakuDaneKbnTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 行先
                if (StartRow == BeginRow + 14)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["Destination"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.YukiSakiFrom != null)
                    {
                        Value += hyperFormDate.YukiSakiFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.YukiSakiTo != null)
                    {
                        Value += (hyperFormDate.YukiSakiFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.YukiSakiTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 配車地
                if (StartRow == BeginRow + 15)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["DispatchPlace"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.HaishaChiFrom != null)
                    {
                        Value += hyperFormDate.HaishaChiFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.HaishaChiTo != null)
                    {
                        Value += (hyperFormDate.HaishaChiFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.HaishaChiTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 発生地
                if (StartRow == BeginRow + 16)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["OccurrencePlace"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.HasseiChiFrom != null)
                    {
                        Value += hyperFormDate.HasseiChiFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.HasseiChiTo != null)
                    {
                        Value += (hyperFormDate.HasseiChiFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.HasseiChiTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // エリア
                if (StartRow == BeginRow + 17)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["Area"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.AreaFrom != null)
                    {
                        Value += hyperFormDate.AreaFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.AreaTo != null)
                    {
                        Value += (hyperFormDate.AreaFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.AreaTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 車種
                if (StartRow == BeginRow + 18)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["BusType"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.ShashuFrom != null)
                    {
                        Value += hyperFormDate.ShashuFrom.Text + FromToSymbol;
                    }
                    if (hyperFormDate.ShashuTo != null)
                    {
                        Value += (hyperFormDate.ShashuFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.ShashuTo.Text;
                    }
                    FilterItemValueArea.Value = Value;
                }


                // 車種単価
                if (StartRow == BeginRow + 19)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["BusTypePrice"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.ShashuTankaFrom != null)
                    {
                        Value += CommonUtil.CurencyFormat(hyperFormDate.ShashuTankaFrom) + FromToSymbol;
                    }
                    if (hyperFormDate.ShashuTankaTo != null)
                    {
                        Value += (hyperFormDate.ShashuTankaFrom == null ? FromToSymbol : string.Empty);
                        Value += CommonUtil.CurencyFormat(hyperFormDate.ShashuTankaTo);
                    }
                    FilterItemValueArea.Value = Value;
                }

                // 受付条件
                if (StartRow == BeginRow + 20)
                {
                    FilterItemNameArea.Value = String.Join("", ((string)HyperMenuLang["ReceiptCondition"]).Split('：', ':'));
                    string Value = string.Empty;
                    if (hyperFormDate.UketsukeJokenFrom != null)
                    {
                        Value += hyperFormDate.UketsukeJokenFrom.CodeKbnNm + FromToSymbol;
                    }
                    if (hyperFormDate.UketsukeJokenTo != null)
                    {
                        Value += (hyperFormDate.UketsukeJokenFrom == null ? FromToSymbol : string.Empty);
                        Value += hyperFormDate.UketsukeJokenTo.CodeKbnNm;
                    }
                    FilterItemValueArea.Value = Value;
                    // End Loop
                    FilterItemNameArea.Style.Border.Bottom.Style = ExcelBorderStyle.Medium;
                    FilterItemValueArea.Style.Border.Bottom.Style = ExcelBorderStyle.Medium;
                    break;
                }
                StartRow++;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }
    private void SetTableDataForSaleQuantity(ExcelWorksheet worksheet, int StartIndex)
    {
        try
        {
            // Empty
            ExcelRange EmptyArea = worksheet.Cells["S4:U4"];
            EmptyArea.Merge = true;
            // Header Label
            ExcelRange HeaderArea = worksheet.Cells["V4:X4"];
            worksheet.Cells["V4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["V4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(59, 185, 153));
            worksheet.Cells["W4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["W4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(255, 140, 0));
            worksheet.Cells["X4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["X4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 138, 151));
            HeaderArea.Style.Font.Color.SetColor(Color.White);
            HeaderArea.Style.Font.Bold = true;
            HeaderArea.Style.Font.Size = 12;
            HeaderArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            object[] Header = new object[] { SaleData[0].Time.Year.ToString(), (SaleData[0].Time.Year - 1).ToString(), Lang["CompareYear"] };
            HeaderArea.LoadFromArrays(new List<object[]> { Header.ToArray() });
            // Data
            int IndexDifferent = 0;
            for (int i = 0; i < SaleData.Count; i++)
            {
                // Date
                ExcelRange DateRange = worksheet.Cells["S" + (StartIndex + i * 2) + ":T" + (StartIndex + i * 2 + 1)];
                DateRange.Merge = true;
                DateRange.Style.Border.BorderAround(ExcelBorderStyle.Thin);
                DateRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                if ((int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) == 7 || int.Parse(type) == 9) && CheckWeeken(SaleData[i].Time) == 1)
                {
                    DateRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 205, 255));
                }
                else if ((int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) == 7 || int.Parse(type) == 9) && CheckWeeken(SaleData[i].Time) == 2)
                {
                    DateRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(243, 78, 78));
                }
                else
                {
                    DateRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 138, 151));
                }
                DateRange.Style.Font.Bold = true;
                DateRange.Style.Font.Size = 11;
                DateRange.Style.Font.Color.SetColor(Color.White);
                DateRange.Style.VerticalAlignment = ExcelVerticalAlignment.Center;
                DateRange.Value = SaleData[i].Time.ToString(FormatStringDay);

                // Count title
                ExcelRange CountTitleRange = worksheet.Cells["U" + (StartIndex + i * 2)];
                CountTitleRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                if ((int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) == 7 || int.Parse(type) == 9) && CheckWeeken(SaleData[i].Time) == 1)
                {
                    CountTitleRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 205, 255));
                }
                else if ((int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) == 7 || int.Parse(type) == 9) && CheckWeeken(SaleData[i].Time) == 2)
                {
                    CountTitleRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(243, 78, 78));
                }
                else
                {
                    CountTitleRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 138, 151));
                }
                CountTitleRange.Style.Font.Size = 11;
                CountTitleRange.Style.Font.Color.SetColor(Color.White);
                CountTitleRange.Value = Lang["CountTitle"];

                // Sale title
                ExcelRange SaleTitleRange = worksheet.Cells["U" + (StartIndex + i * 2 + 1)];
                SaleTitleRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleTitleRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 138, 151));
                SaleTitleRange.Style.Font.Size = 11;
                SaleTitleRange.Style.Font.Color.SetColor(Color.White);
                SaleTitleRange.Value = Lang["SaleTitle"];

                // Count Value of this year
                ExcelRange CountValueThisYearRange = worksheet.Cells["V" + (StartIndex + i * 2)];
                CountValueThisYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                CountValueThisYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                CountValueThisYearRange.Style.Font.Size = 11;
                CountValueThisYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                CountValueThisYearRange.Value = SaleData[i].Count;

                string CountValueLastYear = "";
                string PercentCountValue = "";
                string SaleValueLastYear = "";
                string PercentSaleValue = "";
                if (SaleData[i].Time.Month == 2 && SaleData[i].Time.Day == 29)
                {
                    IndexDifferent = 1;
                    CountValueLastYear = "_";
                    PercentCountValue = "_";
                    SaleValueLastYear = "_";
                    PercentSaleValue = "_";
                }
                else
                {
                    PercentCountValue = LastYearSaleData[i - IndexDifferent].Count == 0 ? "_" : string.Format("{0:#,##0.0}", Math.Round((100.0 * SaleData[i].Count / LastYearSaleData[i - IndexDifferent].Count), 1)) + "%";
                    PercentSaleValue = LastYearSaleData[i - IndexDifferent].Sale == 0 ? "_" : string.Format("{0:#,##0.0}", Math.Round((100.0 * SaleData[i].Sale / LastYearSaleData[i - IndexDifferent].Sale), 1)) + "%";
                }

                // Count Value of last year
                ExcelRange CountValueLastYearRange = worksheet.Cells["W" + (StartIndex + i * 2)];
                CountValueLastYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                CountValueLastYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                CountValueLastYearRange.Style.Font.Size = 11;
                CountValueLastYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                if (CountValueLastYear == string.Empty)
                {
                    CountValueLastYearRange.Value = LastYearSaleData[i - IndexDifferent].Count;
                }
                else
                {
                    CountValueLastYearRange.Value = CountValueLastYear;
                }


                // 前年比
                ExcelRange PercentCountRange = worksheet.Cells["X" + (StartIndex + i * 2)];
                PercentCountRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                PercentCountRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                PercentCountRange.Style.Font.Size = 11;
                PercentCountRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                PercentCountRange.Value = PercentCountValue;

                // Sale Value of this year
                string CurrrencySymbol = NumberFormatInfo.CurrentInfo.CurrencySymbol;
                ExcelRange SaleValueThisYearRange = worksheet.Cells["V" + (StartIndex + i * 2 + 1)];
                SaleValueThisYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueThisYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueThisYearRange.Style.Font.Size = 11;
                SaleValueThisYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueThisYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueThisYearRange.Value = SaleData[i].Sale;

                // Sale Value of last year
                ExcelRange SaleValueLastYearRange = worksheet.Cells["W" + (StartIndex + i * 2 + 1)];
                SaleValueLastYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueLastYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueLastYearRange.Style.Font.Size = 11;
                SaleValueLastYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueLastYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueLastYearRange.Value = SaleValueLastYear;
                if (SaleValueLastYear == string.Empty)
                {
                    SaleValueLastYearRange.Value = LastYearSaleData[i - IndexDifferent].Sale;
                }
                else
                {
                    SaleValueLastYearRange.Value = SaleValueLastYear;
                }

                // 前年比
                ExcelRange PercentSaleRange = worksheet.Cells["X" + (StartIndex + i * 2 + 1)];
                PercentSaleRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                PercentSaleRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                PercentSaleRange.Style.Font.Size = 11;
                PercentSaleRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                PercentSaleRange.Value = PercentSaleValue;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }
    private void SetGraphForSaleQuantity(ExcelWorksheet worksheet, string Title, int StartIndex)
    {
        try
        {
            string RangeForDate = "";
            string RangeForCountThisYear = "";
            string RangeForCountLastYear = "";
            string RangeForSaleThisYear = "";
            string RangeForSaleLastYear = "";
            for (int i = 0; i < SaleData.Count; i++)
            {
                RangeForDate += ("S" + (i * 2 + StartIndex));
                RangeForCountThisYear += ("V" + (i * 2 + StartIndex));
                RangeForCountLastYear += ("W" + (i * 2 + StartIndex));
                RangeForSaleThisYear += ("V" + (i * 2 + 1 + StartIndex));
                RangeForSaleLastYear += ("W" + (i * 2 + 1 + StartIndex));
                if (i != SaleData.Count - 1)
                {
                    RangeForDate += ",";
                    RangeForCountThisYear += ",";
                    RangeForCountLastYear += ",";
                    RangeForSaleThisYear += ",";
                    RangeForSaleLastYear += ",";
                }
            }

            ExcelBarChart barChart = worksheet.Drawings.AddChart("barChart", eChartType.ColumnClustered) as ExcelBarChart;
            barChart.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.Title.Text = Title;
            barChart.Series.Add(worksheet.Cells[RangeForSaleThisYear], worksheet.Cells[RangeForDate]);
            barChart.Series[0].Header = SaleData[0].Time.Year + " " + Lang["SaleTitle"];
            barChart.Series[0].Fill.Color = Color.FromArgb(59, 185, 153);
            if (LineSaleCountSeriesLY)
            {
                barChart.Series.Add(worksheet.Cells[RangeForSaleLastYear], worksheet.Cells[RangeForDate]);
                barChart.Series[1].Header = SaleData[0].Time.Year - 1 + " " + Lang["SaleTitle"];
                barChart.Series[1].Fill.Color = Color.FromArgb(255, 140, 0);
            }
            ExcelLineChart lineChart = barChart.PlotArea.ChartTypes.Add(eChartType.Line) as ExcelLineChart;
            ExcelLineChartSerie lineChartSeries = (ExcelLineChartSerie)lineChart.Series.Add(worksheet.Cells[RangeForCountThisYear], worksheet.Cells[RangeForDate]);
            lineChartSeries.Header = SaleData[0].Time.Year + " " + Lang["CountTitle"];
            lineChartSeries.LineColor = Color.FromArgb(186, 237, 176);
            if (LineSaleCountSeriesLY)
            {
                ExcelLineChartSerie xlineChartSeries = (ExcelLineChartSerie)lineChart.Series.Add(worksheet.Cells[RangeForCountLastYear], worksheet.Cells[RangeForDate]);
                xlineChartSeries.Header = SaleData[0].Time.Year - 1 + " " + Lang["CountTitle"];
                xlineChartSeries.LineColor = Color.FromArgb(79, 195, 247);
            }
            lineChart.UseSecondaryAxis = true;
            lineChart.Axis[1].Title.Text = Lang["SaleTitle"];
            lineChart.Axis[1].Title.Font.Size = 11;
            lineChart.Axis[3].Title.Text = Lang["CountTitle"];
            lineChart.Axis[3].Title.Font.Size = 11;
            lineChart.Axis[3].Title.Rotation = 90;
            barChart.Legend.Position = eLegendPosition.Bottom;
            barChart.SetSize(579, 400);
            barChart.SetPosition(5, 0, 8, 0);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetTableDataForSale(ExcelWorksheet worksheet, int StartIndex)
    {
        try
        {
            // Empty
            ExcelRange EmptyArea = worksheet.Cells["S4:T4"];
            EmptyArea.Merge = true;
            // Header Label
            ExcelRange HeaderArea = worksheet.Cells["U4:W4"];
            worksheet.Cells["U4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["U4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(59, 185, 153));
            worksheet.Cells["V4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["V4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(255, 140, 0));
            worksheet.Cells["W4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["W4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 138, 151));
            HeaderArea.Style.Font.Color.SetColor(Color.White);
            HeaderArea.Style.Font.Bold = true;
            HeaderArea.Style.Font.Size = 12;
            HeaderArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            object[] Header = new object[] { SaleData[0].Time.Year.ToString(), (SaleData[0].Time.Year - 1).ToString(), Lang["CompareYear"] };
            HeaderArea.LoadFromArrays(new List<object[]> { Header.ToArray() });
            // Data
            int IndexDifferent = 0;
            for (int i = 0; i < SaleData.Count; i++)
            {
                // Date
                ExcelRange DateRange = worksheet.Cells["S" + (StartIndex + i) + ":T" + (StartIndex + i)];
                DateRange.Merge = true;
                DateRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                if ((int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) == 7 || int.Parse(type) == 9) && CheckWeeken(SaleData[i].Time) == 1)
                {
                    DateRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 205, 255));
                }
                else if ((int.Parse(type) == 1 || int.Parse(type) == 3 || int.Parse(type) == 7 || int.Parse(type) == 9) && CheckWeeken(SaleData[i].Time) == 2)
                {
                    DateRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(243, 78, 78));
                }
                else
                {
                    DateRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(120, 138, 151));
                }
                DateRange.Style.Font.Bold = true;
                DateRange.Style.Font.Size = 11;
                DateRange.Style.Font.Color.SetColor(Color.White);
                DateRange.Value = SaleData[i].Time.ToString(FormatStringDay);

                string SaleValueLastYear = "";
                string PercentSaleValue = "";
                if (SaleData[i].Time.Month == 2 && SaleData[i].Time.Day == 29)
                {
                    IndexDifferent = 1;
                    SaleValueLastYear = "_";
                    PercentSaleValue = "_";
                }
                else
                {
                    PercentSaleValue = LastYearSaleData[i - IndexDifferent].Sale == 0 ? "_" : string.Format("{0:#,##0.0}", Math.Round((100.0 * SaleData[i].Sale / LastYearSaleData[i - IndexDifferent].Sale), 1)) + "%";
                }

                // Sale Value of this year
                string CurrrencySymbol = NumberFormatInfo.CurrentInfo.CurrencySymbol;
                ExcelRange SaleValueThisYearRange = worksheet.Cells["U" + (StartIndex + i)];
                SaleValueThisYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueThisYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueThisYearRange.Style.Font.Size = 11;
                SaleValueThisYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueThisYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueThisYearRange.Value = SaleData[i].Sale;

                // Sale Value of last year
                ExcelRange SaleValueLastYearRange = worksheet.Cells["V" + (StartIndex + i)];
                SaleValueLastYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueLastYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueLastYearRange.Style.Font.Size = 11;
                SaleValueLastYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueLastYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueLastYearRange.Value = SaleValueLastYear;
                if (SaleValueLastYear == string.Empty)
                {
                    SaleValueLastYearRange.Value = LastYearSaleData[i - IndexDifferent].Sale;
                }
                else
                {
                    SaleValueLastYearRange.Value = SaleValueLastYear;
                }

                // 前年比
                ExcelRange PercentSaleRange = worksheet.Cells["W" + (StartIndex + i)];
                PercentSaleRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                PercentSaleRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                PercentSaleRange.Style.Font.Size = 11;
                PercentSaleRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                PercentSaleRange.Value = PercentSaleValue;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetGraphForSale(ExcelWorksheet worksheet, string Title, int StartIndex)
    {
        try
        {
            string RangeForDate = "S" + StartIndex + ":S" + (StartIndex + SaleData.Count - 1);
            string RangeForSaleThisYear = "U" + StartIndex + ":U" + (StartIndex + SaleData.Count - 1);
            string RangeForSaleLastYear = "V" + StartIndex + ":V" + (StartIndex + SaleData.Count - 1);

            ExcelLineChart lineChart = worksheet.Drawings.AddChart("lineChart", eChartType.Line) as ExcelLineChart;
            lineChart.Fill.Color = Color.FromArgb(255, 248, 228);
            lineChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
            lineChart.Title.Text = Title;
            ExcelLineChartSerie lineChartSeries = (ExcelLineChartSerie)lineChart.Series.Add(worksheet.Cells[RangeForSaleThisYear], worksheet.Cells[RangeForDate]);
            lineChartSeries.Header = SaleData[0].Time.Year + " " + Lang["SaleTitle"];
            lineChartSeries.LineColor = Color.FromArgb(59, 185, 153);
            if (LineSaleCountSeriesLY)
            {
                ExcelLineChartSerie xlineChartSeries = (ExcelLineChartSerie)lineChart.Series.Add(worksheet.Cells[RangeForSaleLastYear], worksheet.Cells[RangeForDate]);
                xlineChartSeries.Header = SaleData[0].Time.Year - 1 + " " + Lang["SaleTitle"];
                xlineChartSeries.LineColor = Color.FromArgb(255, 140, 0);
            }
            lineChart.Legend.Position = eLegendPosition.Bottom;
            lineChart.SetSize(579, 400);
            lineChart.SetPosition(5, 0, 8, 0);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetTableDataForSalePerStaff(ExcelWorksheet worksheet, int StartIndex)
    {

        try
        {
            // Empty
            ExcelRange EmptyArea = worksheet.Cells["S4:T4"];
            EmptyArea.Merge = true;
            // Header Label
            ExcelRange HeaderArea = worksheet.Cells["U4:V4"];
            worksheet.Cells["U4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["U4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(59, 185, 153));
            worksheet.Cells["V4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["V4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(255, 140, 0));
            HeaderArea.Style.Font.Color.SetColor(Color.White);
            HeaderArea.Style.Font.Bold = true;
            HeaderArea.Style.Font.Size = 12;
            HeaderArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            object[] Header = new object[] { SaleData[0].Time.Year.ToString(), (SaleData[0].Time.Year - 1).ToString() };
            HeaderArea.LoadFromArrays(new List<object[]> { Header.ToArray() });
            // Data
            for (int i = 0; i <= SalePerStaffDayData.Count; i++)
            {
                // Name
                ExcelRange DateRange = worksheet.Cells["S" + (StartIndex + i) + ":T" + (StartIndex + i)];
                DateRange.Merge = true;
                DateRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                Color BorderColor = BarStaffSeriesLY || i == SalePerStaffDayData.Count ? Color.FromArgb(120, 138, 151) : HyperDataService.GetColorByIndex(i);
                DateRange.Style.Fill.BackgroundColor.SetColor(BorderColor);
                DateRange.Style.Font.Bold = true;
                DateRange.Style.Font.Size = 11;
                DateRange.Style.Font.Color.SetColor(Color.White);
                DateRange.Value = i < SalePerStaffDayData.Count ? SalePerStaffDayData[i].StaffName : Lang["Total"];

                // Sale Value of this year
                string CurrrencySymbol = NumberFormatInfo.CurrentInfo.CurrencySymbol;
                ExcelRange SaleValueThisYearRange = worksheet.Cells["U" + (StartIndex + i)];
                SaleValueThisYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueThisYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueThisYearRange.Style.Font.Size = 11;
                SaleValueThisYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueThisYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueThisYearRange.Value = i < SalePerStaffDayData.Count ? SalePerStaffDayData[i].Sale : TotalByStaff;

                // Sale Value of last year
                ExcelRange SaleValueLastYearRange = worksheet.Cells["V" + (StartIndex + i)];
                SaleValueLastYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueLastYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueLastYearRange.Style.Font.Size = 11;
                SaleValueLastYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueLastYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueLastYearRange.Value = i < SalePerStaffDayData.Count ? SalePerStaffDayDataLastYear[i].Sale : TotalByStaffLastYear;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetGraphForSalePerStaff(ExcelWorksheet worksheet, string Title, int StartIndex)
    {
        try
        {
            string RangeForDate = "S" + StartIndex + ":S" + (StartIndex + SalePerStaffDayData.Count - 1);
            string RangeForSaleThisYear = "U" + StartIndex + ":U" + (StartIndex + SalePerStaffDayData.Count - 1);
            string RangeForSaleLastYear = "V" + StartIndex + ":V" + (StartIndex + SalePerStaffDayData.Count - 1);

            ExcelBarChart barChart = worksheet.Drawings.AddChart("barChart", eChartType.ColumnClustered) as ExcelBarChart;
            barChart.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.Title.Text = Title;
            barChart.Series.Add(worksheet.Cells[RangeForSaleThisYear], worksheet.Cells[RangeForDate]);
            if (BarStaffSeriesLY)
            {
                barChart.Series.Add(worksheet.Cells[RangeForSaleLastYear], worksheet.Cells[RangeForDate]);
                barChart.Series[0].Fill.Color = Color.FromArgb(59, 185, 153);
                barChart.Series[1].Fill.Color = Color.FromArgb(255, 140, 0);
            }
            else
            {
                SetChartPointColors(barChart.ChartXml, worksheet, barChart.Series[0], barChart.Name, SalePerStaffDayData.Count);
            }
            barChart.Legend.Remove();
            barChart.SetSize(579, 400);
            barChart.SetPosition(5, 0, 8, 0);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetTableDataForSalePerCustomer(ExcelWorksheet worksheet, int StartIndex)
    {
        try
        {
            // Empty
            ExcelRange EmptyArea = worksheet.Cells["S4:T4"];
            EmptyArea.Merge = true;
            // Header Label
            ExcelRange HeaderArea = worksheet.Cells["U4:V4"];
            worksheet.Cells["U4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["U4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(59, 185, 153));
            worksheet.Cells["V4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["V4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(255, 140, 0));
            HeaderArea.Style.Font.Color.SetColor(Color.White);
            HeaderArea.Style.Font.Bold = true;
            HeaderArea.Style.Font.Size = 12;
            HeaderArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            object[] Header = new object[] { SaleData[0].Time.Year.ToString(), (SaleData[0].Time.Year - 1).ToString() };
            HeaderArea.LoadFromArrays(new List<object[]> { Header.ToArray() });
            // Data
            for (int i = 0; i <= SalePerCustomerDayData.Count; i++)
            {
                // Name
                ExcelRange DateRange = worksheet.Cells["S" + (StartIndex + i) + ":T" + (StartIndex + i)];
                DateRange.Merge = true;
                DateRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                Color BorderColor = BarStaffSeriesLY || i == SalePerCustomerDayData.Count ? Color.FromArgb(120, 138, 151) : HyperDataService.GetColorByIndex(i);
                DateRange.Style.Fill.BackgroundColor.SetColor(BorderColor);
                DateRange.Style.Font.Bold = true;
                DateRange.Style.Font.Size = 11;
                DateRange.Style.Font.Color.SetColor(Color.White);
                DateRange.Value = i < SalePerCustomerDayData.Count ? SalePerCustomerDayData[i].CustomerName + ' ' + SalePerCustomerDayData[i].BranchName : Lang["Total"];

                // Sale Value of this year
                string CurrrencySymbol = NumberFormatInfo.CurrentInfo.CurrencySymbol;
                ExcelRange SaleValueThisYearRange = worksheet.Cells["U" + (StartIndex + i)];
                SaleValueThisYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueThisYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueThisYearRange.Style.Font.Size = 11;
                SaleValueThisYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueThisYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueThisYearRange.Value = i < SalePerCustomerDayData.Count ? SalePerCustomerDayData[i].Sale : TotalByCustomer;

                // Sale Value of last year
                ExcelRange SaleValueLastYearRange = worksheet.Cells["V" + (StartIndex + i)];
                SaleValueLastYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueLastYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueLastYearRange.Style.Font.Size = 11;
                SaleValueLastYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueLastYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueLastYearRange.Value = i < SalePerCustomerDayData.Count ? SalePerCustomerDayDataLastYear[i].Sale : TotalByCustomerLastYear;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }


    private void SetGraphForSalePerCustomer(ExcelWorksheet worksheet, string Title, int StartIndex)
    {
        try
        {
            string RangeForDate = "S" + StartIndex + ":S" + (StartIndex + SalePerCustomerDayData.Count - 1);
            string RangeForSaleThisYear = "U" + StartIndex + ":U" + (StartIndex + SalePerCustomerDayData.Count - 1);
            string RangeForSaleLastYear = "V" + StartIndex + ":V" + (StartIndex + SalePerCustomerDayData.Count - 1);

            ExcelBarChart barChart = worksheet.Drawings.AddChart("barChart", eChartType.ColumnClustered) as ExcelBarChart;
            barChart.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.Title.Text = Title;
            barChart.Series.Add(worksheet.Cells[RangeForSaleThisYear], worksheet.Cells[RangeForDate]);
            if (BarCustomerSeriesLY)
            {
                barChart.Series.Add(worksheet.Cells[RangeForSaleLastYear], worksheet.Cells[RangeForDate]);
                barChart.Series[0].Fill.Color = Color.FromArgb(59, 185, 153);
                barChart.Series[1].Fill.Color = Color.FromArgb(255, 140, 0);
            }
            else
            {
                SetChartPointColors(barChart.ChartXml, worksheet, barChart.Series[0], barChart.Name, SalePerCustomerDayData.Count);
            }
            barChart.Legend.Remove();
            barChart.SetSize(579, 400);
            barChart.SetPosition(5, 0, 8, 0);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetTableDataForSalePerGroup(ExcelWorksheet worksheet, int StartIndex)
    {

        try
        {
            // Empty
            ExcelRange EmptyArea = worksheet.Cells["S4:T4"];
            EmptyArea.Merge = true;
            // Header Label
            ExcelRange HeaderArea = worksheet.Cells["U4:V4"];
            worksheet.Cells["U4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["U4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(59, 185, 153));
            worksheet.Cells["V4"].Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
            worksheet.Cells["V4"].Style.Fill.BackgroundColor.SetColor(Color.FromArgb(255, 140, 0));
            HeaderArea.Style.Font.Color.SetColor(Color.White);
            HeaderArea.Style.Font.Bold = true;
            HeaderArea.Style.Font.Size = 12;
            HeaderArea.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            object[] Header = new object[] { SaleData[0].Time.Year.ToString(), (SaleData[0].Time.Year - 1).ToString() };
            HeaderArea.LoadFromArrays(new List<object[]> { Header.ToArray() });
            // Data
            for (int i = 0; i <= SalePerGroupClassificationDayData.Count; i++)
            {

                // Name
                ExcelRange DateRange = worksheet.Cells["S" + (StartIndex + i) + ":T" + (StartIndex + i)];
                DateRange.Merge = true;
                DateRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                Color BorderColor = BarStaffSeriesLY || i == SalePerGroupClassificationDayData.Count ? Color.FromArgb(120, 138, 151) : HyperDataService.GetColorByIndex(i);
                DateRange.Style.Fill.BackgroundColor.SetColor(BorderColor);
                DateRange.Style.Font.Bold = true;
                DateRange.Style.Font.Size = 11;
                DateRange.Style.Font.Color.SetColor(Color.White);
                DateRange.Value = i < SalePerGroupClassificationDayData.Count ? SalePerGroupClassificationDayData[i].GroupClassificationName : Lang["Total"];

                // Sale Value of this year
                string CurrrencySymbol = NumberFormatInfo.CurrentInfo.CurrencySymbol;
                ExcelRange SaleValueThisYearRange = worksheet.Cells["U" + (StartIndex + i)];
                SaleValueThisYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueThisYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueThisYearRange.Style.Font.Size = 11;
                SaleValueThisYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueThisYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueThisYearRange.Value = i < SalePerGroupClassificationDayData.Count ? SalePerGroupClassificationDayData[i].Sale : TotalByGroupClassification;

                // Sale Value of last year
                ExcelRange SaleValueLastYearRange = worksheet.Cells["V" + (StartIndex + i)];
                SaleValueLastYearRange.Style.Border.BorderAround(ExcelBorderStyle.Thin, Color.White);
                SaleValueLastYearRange.Style.Fill.BackgroundColor.SetColor(Color.FromArgb(249, 248, 249));
                SaleValueLastYearRange.Style.Font.Size = 11;
                SaleValueLastYearRange.Style.HorizontalAlignment = ExcelHorizontalAlignment.Right;
                SaleValueLastYearRange.Style.Numberformat.Format = CurrrencySymbol + "#,##";
                SaleValueLastYearRange.Value = i < SalePerGroupClassificationDayData.Count ? SalePerGroupClassificationDayDataLastYear[i].Sale : TotalByGroupClassificationLastYear;
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }
    }

    private void SetBarGraphForSalePerGroup(ExcelWorksheet worksheet, string Title, int StartIndex)
    {
        try
        {
            string RangeForDate = "S" + StartIndex + ":S" + (StartIndex + SalePerGroupClassificationDayData.Count - 1);
            string RangeForSaleThisYear = "U" + StartIndex + ":U" + (StartIndex + SalePerGroupClassificationDayData.Count - 1);
            string RangeForSaleLastYear = "V" + StartIndex + ":V" + (StartIndex + SalePerGroupClassificationDayData.Count - 1);

            ExcelBarChart barChart = worksheet.Drawings.AddChart("barChart", eChartType.ColumnClustered) as ExcelBarChart;
            barChart.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
            barChart.Title.Text = Title;
            barChart.Series.Add(worksheet.Cells[RangeForSaleThisYear], worksheet.Cells[RangeForDate]);
            if (BarGroupClassificationSeriesLY)
            {
                barChart.Series.Add(worksheet.Cells[RangeForSaleLastYear], worksheet.Cells[RangeForDate]);
                barChart.Series[0].Fill.Color = Color.FromArgb(59, 185, 153);
                barChart.Series[1].Fill.Color = Color.FromArgb(255, 140, 0);
            }
            else
            {
                SetChartPointColors(barChart.ChartXml, worksheet, barChart.Series[0], barChart.Name, SalePerGroupClassificationDayData.Count);
            }
            barChart.Legend.Remove();
            barChart.SetSize(579, 400);
            barChart.SetPosition(5, 0, 8, 0);
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetPieGraphForSalePerGroup(ExcelWorksheet worksheet, string Title, int StartIndex)
    {
        try
        {
            string RangeForDate = "S" + StartIndex + ":S" + (StartIndex + SalePerGroupClassificationDayData.Count - 1);
            string RangeForSaleThisYear = "U" + StartIndex + ":U" + (StartIndex + SalePerGroupClassificationDayData.Count - 1);
            string RangeForSaleLastYear = "V" + StartIndex + ":V" + (StartIndex + SalePerGroupClassificationDayData.Count - 1);

            ExcelPieChart pieChart = worksheet.Drawings.AddChart("pieChart", eChartType.Pie) as ExcelPieChart;
            pieChart.Fill.Color = Color.FromArgb(255, 248, 228);
            pieChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
            pieChart.Title.Text = Title + "(" + (SalePerGroupClassificationDayData.Count > 0 ? SalePerGroupClassificationDayData[0].Time.Year.ToString() : string.Empty) + ")";
            pieChart.Series.Add(worksheet.Cells[RangeForSaleThisYear], worksheet.Cells[RangeForDate]);
            SetChartPointColors(pieChart.ChartXml, worksheet, pieChart.Series[0], pieChart.Name, SalePerGroupClassificationDayData.Count);
            pieChart.Legend.Position = eLegendPosition.Bottom;
            pieChart.SetSize(579, 400);
            pieChart.SetPosition(5, 0, 8, 0);
            if (PieGroupClassificationSeriesLY)
            {
                ExcelPieChart xPieChart = worksheet.Drawings.AddChart("pieChart2", eChartType.Pie) as ExcelPieChart;
                xPieChart.Fill.Color = Color.FromArgb(255, 248, 228);
                xPieChart.PlotArea.Fill.Color = Color.FromArgb(255, 248, 228);
                xPieChart.Title.Text = Title + "(" + (SalePerGroupClassificationDayDataLastYear.Count > 0 ? SalePerGroupClassificationDayDataLastYear[0].Time.Year.ToString() : string.Empty) + ")";
                xPieChart.Series.Add(worksheet.Cells[RangeForSaleLastYear], worksheet.Cells[RangeForDate]);
                SetChartPointColors(xPieChart.ChartXml, worksheet, xPieChart.Series[0], pieChart.Name, SalePerGroupClassificationDayData.Count);
                xPieChart.Legend.Position = eLegendPosition.Bottom;
                xPieChart.SetSize(579, 400);
                xPieChart.SetPosition(26, 0, 8, 0);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private void SetChartPointColors(XmlDocument chartXml, ExcelWorksheet worksheet, ExcelChartSerie serie, string name, int Length)
    {
        try
        {
            string nsa = worksheet.Drawings.NameSpaceManager.LookupNamespace("a");
            string nsuri = chartXml.DocumentElement.NamespaceURI;
            XmlNamespaceManager nsm = new XmlNamespaceManager(chartXml.NameTable);
            nsm.AddNamespace("a", nsa);
            nsm.AddNamespace("c", nsuri);
            XmlNode serieNode = chartXml.SelectSingleNode(@"c:chartSpace/c:chart/c:plotArea/c:" + name + "/c:ser[c:idx[@val='0']]", nsm);
            for (int i = 0; i < Length; i++)
            {
                XmlNode dPt = chartXml.CreateNode(XmlNodeType.Element, "dPt", nsuri);
                XmlNode idx = chartXml.CreateNode(XmlNodeType.Element, "idx", nsuri);
                XmlAttribute att = chartXml.CreateAttribute("val", nsuri);
                att.Value = i.ToString();
                idx.Attributes.Append(att);
                dPt.AppendChild(idx);

                XmlNode srgbClr = chartXml.CreateNode(XmlNodeType.Element, "srgbClr", nsa);
                att = chartXml.CreateAttribute("val");

                Color color = HyperDataService.GetColorByIndex(i);
                att.Value = $"{color.R:X2}{color.G:X2}{color.B:X2}";
                srgbClr.Attributes.Append(att);

                XmlNode solidFill = chartXml.CreateNode(XmlNodeType.Element, "solidFill", nsa);
                solidFill.AppendChild(srgbClr);

                XmlNode spPr = chartXml.CreateNode(XmlNodeType.Element, "spPr", nsuri);
                spPr.AppendChild(solidFill);

                dPt.AppendChild(spPr);
                serieNode.AppendChild(dPt);
            }
        }
        catch (Exception ex)
        {
            errorModalService.ShowErrorPopup(Lang["Error"], ex.GetOriginalException()?.Message);
        }

    }

    private int CheckWeeken(DateTime cDay) // 0: nomal day, 1: Saturday, 2: Sunday
    {
        switch (cDay.DayOfWeek)
        {
            case DayOfWeek.Monday:
            case DayOfWeek.Tuesday:
            case DayOfWeek.Wednesday:
            case DayOfWeek.Thursday:
            case DayOfWeek.Friday:
                return 0;
            case DayOfWeek.Saturday:
                return 1;
            case DayOfWeek.Sunday:
                return 2;
            default:
                return 0;
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IReservationClassComponentService _yoyakuservice { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerComponentService _service { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppSettingsService AppSettingsService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IErrorHandlerService errorModalService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IGenerateFilterValueDictionary GenerateFilterValueDictionaryService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFilterCondition FilterConditionService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<HyperMenu> HyperMenuLang { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<HyperGraph> Lang { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBlazorContextMenuService blazorContextMenuService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBusTypeListService BusTypeService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDispatchListService DispatchService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocationListService LocationService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerCLassificationListService CustomerCLassificationService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISaleBranchListService EigyosService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITPM_YoyKbnDataListService TPM_YoyKbnDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITPM_CodeKbListService CodeKbService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerListService CustomerService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStaffListService SyainService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHyperDataService HyperDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CustomNavigation NavigationManager { get; set; }
    }
}
namespace __Blazor.HassyaAllrightCloud.Pages.HyperGraph
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateDxChart_0<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::Microsoft.AspNetCore.Components.RenderFragment __arg2)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "ChildContent", __arg2);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_1<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg3, int __seq4, global::System.Drawing.Color __arg4, int __seq5, global::System.String __arg5)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Name", __arg0);
        __builder.AddAttribute(__seq1, "ArgumentField", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "ValueField", __arg3);
        __builder.AddAttribute(__seq4, "Color", __arg4);
        __builder.AddAttribute(__seq5, "Axis", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_2<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Action<global::System.Boolean> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg4, int __seq5, global::System.Drawing.Color __arg5, int __seq6, global::System.String __arg6)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "VisibleChanged", __arg0);
        __builder.AddAttribute(__seq1, "Name", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "ArgumentField", __arg3);
        __builder.AddAttribute(__seq4, "ValueField", __arg4);
        __builder.AddAttribute(__seq5, "Color", __arg5);
        __builder.AddAttribute(__seq6, "Axis", __arg6);
        __builder.CloseComponent();
        }
        public static void CreateDxChartLineSeries_3<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg3, int __seq4, global::System.Drawing.Color __arg4, int __seq5, global::System.String __arg5, int __seq6, global::Microsoft.AspNetCore.Components.RenderFragment __arg6)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartLineSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Name", __arg0);
        __builder.AddAttribute(__seq1, "Filter", __arg1);
        __builder.AddAttribute(__seq2, "ArgumentField", __arg2);
        __builder.AddAttribute(__seq3, "ValueField", __arg3);
        __builder.AddAttribute(__seq4, "Color", __arg4);
        __builder.AddAttribute(__seq5, "Axis", __arg5);
        __builder.AddAttribute(__seq6, "ChildContent", __arg6);
        __builder.CloseComponent();
        }
        public static void CreateDxChartLineSeries_4<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg4, int __seq5, global::System.Drawing.Color __arg5, int __seq6, global::System.String __arg6, int __seq7, global::Microsoft.AspNetCore.Components.RenderFragment __arg7)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartLineSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Visible", __arg0);
        __builder.AddAttribute(__seq1, "Name", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "ArgumentField", __arg3);
        __builder.AddAttribute(__seq4, "ValueField", __arg4);
        __builder.AddAttribute(__seq5, "Color", __arg5);
        __builder.AddAttribute(__seq6, "Axis", __arg6);
        __builder.AddAttribute(__seq7, "ChildContent", __arg7);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_5<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::Microsoft.AspNetCore.Components.RenderFragment __arg2)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "ChildContent", __arg2);
        __builder.CloseComponent();
        }
        public static void CreateDxChartLineSeries_6<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg3, int __seq4, global::System.Drawing.Color __arg4, int __seq5, global::Microsoft.AspNetCore.Components.RenderFragment __arg5)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartLineSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Name", __arg0);
        __builder.AddAttribute(__seq1, "Filter", __arg1);
        __builder.AddAttribute(__seq2, "ArgumentField", __arg2);
        __builder.AddAttribute(__seq3, "ValueField", __arg3);
        __builder.AddAttribute(__seq4, "Color", __arg4);
        __builder.AddAttribute(__seq5, "ChildContent", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateDxChartLineSeries_7<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Action<global::System.Boolean> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg4, int __seq5, global::System.Drawing.Color __arg5, int __seq6, global::Microsoft.AspNetCore.Components.RenderFragment __arg6)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartLineSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "VisibleChanged", __arg0);
        __builder.AddAttribute(__seq1, "Name", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "ArgumentField", __arg3);
        __builder.AddAttribute(__seq4, "ValueField", __arg4);
        __builder.AddAttribute(__seq5, "Color", __arg5);
        __builder.AddAttribute(__seq6, "ChildContent", __arg6);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_8<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Action<global::DevExpress.Blazor.ChartSeriesPointCustomizationSettings> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "CustomizeSeriesPoint", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_9<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg2, int __seq3, global::System.Drawing.Color __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg4)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Name", __arg0);
        __builder.AddAttribute(__seq1, "Filter", __arg1);
        __builder.AddAttribute(__seq2, "ArgumentField", __arg2);
        __builder.AddAttribute(__seq3, "Color", __arg3);
        __builder.AddAttribute(__seq4, "ValueField", __arg4);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_10<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg3, int __seq4, global::System.Drawing.Color __arg4, int __seq5, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg5)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Visible", __arg0);
        __builder.AddAttribute(__seq1, "Name", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "ArgumentField", __arg3);
        __builder.AddAttribute(__seq4, "Color", __arg4);
        __builder.AddAttribute(__seq5, "ValueField", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_11<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Action<global::DevExpress.Blazor.ChartSeriesPointCustomizationSettings> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "CustomizeSeriesPoint", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_12<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg1, int __seq2, global::System.Drawing.Color __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg4)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Name", __arg0);
        __builder.AddAttribute(__seq1, "Filter", __arg1);
        __builder.AddAttribute(__seq2, "Color", __arg2);
        __builder.AddAttribute(__seq3, "ArgumentField", __arg3);
        __builder.AddAttribute(__seq4, "ValueField", __arg4);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_13<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Drawing.Color __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg4, int __seq5, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg5)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Visible", __arg0);
        __builder.AddAttribute(__seq1, "Name", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "Color", __arg3);
        __builder.AddAttribute(__seq4, "ArgumentField", __arg4);
        __builder.AddAttribute(__seq5, "ValueField", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_14<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Action<global::DevExpress.Blazor.ChartSeriesPointCustomizationSettings> __arg2, int __seq3, global::System.String __arg3, int __seq4, global::Microsoft.AspNetCore.Components.RenderFragment __arg4)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "CustomizeSeriesPoint", __arg2);
        __builder.AddAttribute(__seq3, "Id", __arg3);
        __builder.AddAttribute(__seq4, "ChildContent", __arg4);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_15<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg1, int __seq2, global::System.Drawing.Color __arg2, int __seq3, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg4)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Name", __arg0);
        __builder.AddAttribute(__seq1, "Filter", __arg1);
        __builder.AddAttribute(__seq2, "Color", __arg2);
        __builder.AddAttribute(__seq3, "ArgumentField", __arg3);
        __builder.AddAttribute(__seq4, "ValueField", __arg4);
        __builder.CloseComponent();
        }
        public static void CreateDxChartBarSeries_16<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Boolean __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, global::System.Boolean>> __arg2, int __seq3, global::System.Drawing.Color __arg3, int __seq4, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg4, int __seq5, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg5)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartBarSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "Visible", __arg0);
        __builder.AddAttribute(__seq1, "Name", __arg1);
        __builder.AddAttribute(__seq2, "Filter", __arg2);
        __builder.AddAttribute(__seq3, "Color", __arg3);
        __builder.AddAttribute(__seq4, "ArgumentField", __arg4);
        __builder.AddAttribute(__seq5, "ValueField", __arg5);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_17<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "Id", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
        public static void CreateDxChartPieSeries_18<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg0, int __seq1, global::System.Drawing.Color __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg2)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartPieSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "ValueField", __arg0);
        __builder.AddAttribute(__seq1, "Color", __arg1);
        __builder.AddAttribute(__seq2, "ArgumentField", __arg2);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_19<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::Microsoft.AspNetCore.Components.RenderFragment __arg2)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "ChildContent", __arg2);
        __builder.CloseComponent();
        }
        public static void CreateDxChartPieSeries_20<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg0, int __seq1, global::System.Drawing.Color __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg2)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartPieSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "ValueField", __arg0);
        __builder.AddAttribute(__seq1, "Color", __arg1);
        __builder.AddAttribute(__seq2, "ArgumentField", __arg2);
        __builder.CloseComponent();
        }
        public static void CreateDxChart_21<T>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.Action<global::DevExpress.Blazor.ChartSeriesPointCustomizationSettings> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChart<T>>(seq);
        __builder.AddAttribute(__seq0, "Data", __arg0);
        __builder.AddAttribute(__seq1, "CssClass", __arg1);
        __builder.AddAttribute(__seq2, "CustomizeSeriesPoint", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
        public static void CreateDxChartPieSeries_22<T, TArgument, TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Linq.Expressions.Expression<global::System.Func<T, TValue>> __arg0, int __seq1, global::System.Drawing.Color __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<T, TArgument>> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::DevExpress.Blazor.DxChartPieSeries<T, TArgument, TValue>>(seq);
        __builder.AddAttribute(__seq0, "ValueField", __arg0);
        __builder.AddAttribute(__seq1, "Color", __arg1);
        __builder.AddAttribute(__seq2, "ArgumentField", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
