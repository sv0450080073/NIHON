#pragma checksum "E:\Project\HassyaAllrightCloud\Pages\TransportationContract.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d53c6a9af7e0b71b6121421978b968c305fedb1e"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace HassyaAllrightCloud.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Infrastructure.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Domain.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Domain.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Constants;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using BlazorContextMenu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Application.Validation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Newtonsoft.Json.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.IService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using LexLibrary.Line.NotifyBot.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using LexLibrary.Line.NotifyBot;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using DevExpress.Blazor.Reporting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "E:\Project\HassyaAllrightCloud\Pages\TransportationContract.razor"
using DevExpress.XtraPrinting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\HassyaAllrightCloud\Pages\TransportationContract.razor"
using Microsoft.AspNetCore.WebUtilities;

#line default
#line hidden
#nullable disable
    public partial class TransportationContract : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 213 "E:\Project\HassyaAllrightCloud\Pages\TransportationContract.razor"
       
    BookingTypeData allBookingType;
    IEnumerable<BookingTypeData> SelectedBookingTypeItems { get; set; }
    public bool checkAll { get; set; } = true;
    List<BookingTypeData> YoyakuKbnList = new List<BookingTypeData>();
    List<SaleBranchData> SaleBranchList;
    List<StaffsData> StaffList;
    List<LoadCustomerList> CustomerList;
    public TransportationContractFormData transportationContractFormData = new TransportationContractFormData();
    int ReturnRecordNumber;
    bool DataNotExistPopup { get; set; } = false;
    bool IsValid = true;

    /// <summary>
    /// Load javascript of page
    /// </summary>
    protected override void OnParametersSet()
    {
        JSRuntime.InvokeVoidAsync("loadPageScript", "transportationContractPage");
        base.OnParametersSet();
    }

    protected override async Task OnInitializedAsync()
    {
        InitializedStateOfFormData();
        YoyakuKbnList = await YoyKbnService.GetBySiyoKbn();
        allBookingType = new BookingTypeData() { YoyaKbnSeq = -1, YoyaKbnNm = Lang["All"] };
        YoyakuKbnList.Insert(0, allBookingType);
        SelectedBookingTypeItems = YoyakuKbnList;

        SaleBranchList = await TpmEigyosService.Get(Common.CompanyID);
        StaffList = await SyainService.Get(Common.CompanyID);
        CustomerList = await CustomerService.Get(Common.TenantID);
    }

    void InitializedStateOfFormData()
    {
        transportationContractFormData = new TransportationContractFormData();
        transportationContractFormData.PrintMode = (int)PrintMode.Preview;
        transportationContractFormData.OutputUnit = (int)OutputUnit.EachBooking;
        transportationContractFormData.DateTypeContract = (int)DateTypeContract.Dispatch;
        transportationContractFormData.OutputSelection = (int)OutputSelection.All;
        transportationContractFormData.YearlyContract = (int)YearlyContract.NotOutput;
        transportationContractFormData.DateFrom = DateTime.Today;
        transportationContractFormData.DateTo = DateTime.Today;
        InvokeAsync(StateHasChanged);
    }

    private IEnumerable<string> Store(IEnumerable<string> errorMessage)
    {
        if (errorMessage.Count() > 0)
        {
            IsValid = false;
        }
        else
        {
            IsValid = true;
        }
        return errorMessage;
    }


    void ChangePrintMode(MouseEventArgs e, int number)
    {
        transportationContractFormData.PrintMode = number;
    }

    void ChangeOutputUnit(MouseEventArgs e, int number)
    {
        transportationContractFormData.OutputUnit = number;
    }

    void ChangeDateTypeContract(MouseEventArgs e, int number)
    {
        transportationContractFormData.DateTypeContract = number;
    }

    void ChangeOutputSelection(MouseEventArgs e, int number)
    {
        transportationContractFormData.OutputSelection = number;
    }

    void ChangeYearlyContract(MouseEventArgs e, int number)
    {
        transportationContractFormData.YearlyContract = number;
    }

    void OnSelectedSaleBranchChanged(SaleBranchData e)
    {
        transportationContractFormData.UketsukeEigyoJo = e;
        InvokeAsync(StateHasChanged);
    }

    void OnSelectedStaffChanged(StaffsData e)
    {
        transportationContractFormData.EigyoTantoSha = e;
        InvokeAsync(StateHasChanged);
    }

    void OnSelectedInpStaffChanged(StaffsData e)
    {
        transportationContractFormData.InpSyainCd = e;
        InvokeAsync(StateHasChanged);
    }

    void OnCustomerComboboxChanged(LoadCustomerList e)
    {
        transportationContractFormData.TokuiSaki = e;
        InvokeAsync(StateHasChanged);
    }

    void OnUkeNumberChanged(string newValue)
    {
        transportationContractFormData.UkeNumber = newValue;
        InvokeAsync(StateHasChanged);
    }

    void SelectedBookingTypeItemsChanged(IEnumerable<BookingTypeData> selectedBookingTypeItems)
    {
        SelectedBookingTypeItems = selectedBookingTypeItems;
        if (checkAll == true && !SelectedBookingTypeItems.Contains(allBookingType))
        {
            SelectedBookingTypeItems = SelectedBookingTypeItems.Take(0);
            checkAll = false;
        }
        if (checkAll == false && SelectedBookingTypeItems.Contains(allBookingType))
        {
            SelectedBookingTypeItems = YoyakuKbnList;
            checkAll = true;
        }
        if (checkAll == true && SelectedBookingTypeItems.Contains(allBookingType) && SelectedBookingTypeItems.Count() < YoyakuKbnList.Count())
        {
            SelectedBookingTypeItems = SelectedBookingTypeItems.Where(t => t.YoyaKbnNm != allBookingType.YoyaKbnNm);
            checkAll = false;
        }
        if (checkAll == false && !SelectedBookingTypeItems.Contains(allBookingType) && SelectedBookingTypeItems.Count() == YoyakuKbnList.Count() - 1)
        {
            SelectedBookingTypeItems = YoyakuKbnList;
            checkAll = true;
        }
        transportationContractFormData.YoyakuKbnList = SelectedBookingTypeItems.ToList();
        InvokeAsync(StateHasChanged);
    }


    private async void OnStartDateChanged(DateTime? newValue)
    {
        transportationContractFormData.DateFrom = newValue;
        transportationContractFormData.DateTo = newValue;
        await InvokeAsync(StateHasChanged);
    }

    private async void OnEndDateChanged(DateTime? newValue)
    {
        transportationContractFormData.DateTo = newValue;
        await InvokeAsync(StateHasChanged);
    }


    async void HandleValidSubmit(MouseEventArgs args)
    {
         ReturnRecordNumber = await HikiukeshoReportService.GetHikiukeshoRowResult(transportationContractFormData);

        if(ReturnRecordNumber <= 0)
        {
            DataNotExistPopup = true;
        } else
        {
            TransportationContractFormData transportationContractFormDataClone = (TransportationContractFormData)transportationContractFormData.Clone();

            var tokuiSaki = transportationContractFormDataClone.TokuiSaki;
            var ukeEigyoJo = transportationContractFormDataClone.UketsukeEigyoJo;
            var eigyoTantouSha = transportationContractFormDataClone.EigyoTantoSha;
            var inpTantouSha = transportationContractFormDataClone.InpSyainCd;

            transportationContractFormDataClone.TokuiSaki = null;
            transportationContractFormDataClone.UketsukeEigyoJo = null;
            transportationContractFormDataClone.EigyoTantoSha = null;
            transportationContractFormDataClone.InpSyainCd = null;
            transportationContractFormDataClone.YoyakuKbnList = null;

            var json = JsonConvert.SerializeObject(transportationContractFormDataClone);
            var dictionary = JsonConvert.DeserializeObject<Dictionary<string, string>>(json);
            var query = dictionary.Where(pair => pair.Value != null)
                                  .ToDictionary(pair => pair.Key, pair => pair.Value);

            query.Add("TenantCdSeq", Common.TenantID.ToString());

            if (tokuiSaki != null)
            {
                query.Add("TokuiCd", tokuiSaki.TokuiCd.ToString());
                query.Add("SitenCd", tokuiSaki.SitenCd.ToString());
            }

            if (ukeEigyoJo != null)
            {
                query.Add("UkeEigCd", ukeEigyoJo.EigyoCd.ToString());
            }

            if (eigyoTantouSha != null)
            {
                query.Add("EigSyainCd", eigyoTantouSha.SyainCd.ToString());
            }

            if (inpTantouSha != null)
            {
                query.Add("InpSyainCd", inpTantouSha.SyainCd.ToString());
            }

            if (SelectedBookingTypeItems.Any())
            {
                query.Add("YoyaKbnList", String.Join(',', SelectedBookingTypeItems.Select(x => x.YoyaKbn)));
            }

            if (transportationContractFormDataClone.UkeNumber != null)
            {
                query.Add("UkeNumberFull", (Common.TenantID.ToString("D5") + CommonUtil.FormatCodeNumber(transportationContractFormDataClone.UkeNumber)).ToString());
            }

            if (transportationContractFormDataClone.DateFrom != null)
            {
                switch (transportationContractFormDataClone.DateTypeContract)
                {
                    case 1:
                        query.Add("StartDispatchDate", transportationContractFormDataClone.DateFrom?.ToString("yyyyMMdd"));
                        break;
                    case 2:
                        query.Add("StartArrivalDate", transportationContractFormDataClone.DateFrom?.ToString("yyyyMMdd"));
                        break;
                    case 3:
                        query.Add("StartReservationDate", transportationContractFormDataClone.DateFrom?.ToString("yyyyMMdd"));
                        break;
                }
            }

            if (transportationContractFormDataClone.DateTo != null)
            {
                switch (transportationContractFormDataClone.DateTypeContract)
                {
                    case 1:
                        query.Add("EndDispatchDate", transportationContractFormDataClone.DateTo?.ToString("yyyyMMdd"));
                        break;
                    case 2:
                        query.Add("EndArrivalDate", transportationContractFormDataClone.DateTo?.ToString("yyyyMMdd"));
                        break;
                    case 3:
                        query.Add("EndReservationDate", transportationContractFormDataClone.DateTo?.ToString("yyyyMMdd"));
                        break;
                }
            }

            if (transportationContractFormDataClone.PrintMode == ((int)PrintMode.Preview))
            {
                JSRuntime.InvokeAsync<object>("open", QueryHelpers.AddQueryString("/HikiukeshoReport", query), "_blank");
            }
            else
            {
                await ExportReportAsPdf(transportationContractFormDataClone.PrintMode, query);
            }
        }
    }

    async Task ExportReportAsPdf(int printMode, Dictionary<string, string> parameters)
    {
        var report = new HassyaAllrightCloud.Reports.ReportTemplate.Hikiukesho.HikiukeshoReport();

        report.Parameters["UkeNo"].Value = !parameters.ContainsKey("UkeNumberFull") ? null : parameters["UkeNumberFull"];
        report.Parameters["OutputUnit"].Value = parameters["OutputUnit"];
        report.Parameters["StartDispatchDate"].Value = !parameters.ContainsKey("StartDispatchDate") ? null : parameters["StartDispatchDate"];
        report.Parameters["EndDispatchDate"].Value = !parameters.ContainsKey("EndDispatchDate") ? null : parameters["EndDispatchDate"];
        report.Parameters["StartArrivalDate"].Value = !parameters.ContainsKey("StartArrivalDate") ? null : parameters["StartArrivalDate"];
        report.Parameters["EndArrivalDate"].Value = !parameters.ContainsKey("EndArrivalDate") ? null : parameters["EndArrivalDate"];
        report.Parameters["StartReservationDate"].Value = !parameters.ContainsKey("StartReservationDate") ? null : parameters["StartReservationDate"];
        report.Parameters["EndReservationDate"].Value = !parameters.ContainsKey("EndReservationDate") ? null : parameters["EndReservationDate"];
        report.Parameters["TokuiCd"].Value = !parameters.ContainsKey("TokuiCd") ? null : parameters["TokuiCd"];
        report.Parameters["SitenCd"].Value = !parameters.ContainsKey("SitenCd") ? null : parameters["SitenCd"];
        report.Parameters["YoyaKbnList"].Value = !parameters.ContainsKey("YoyaKbnList") ? null : parameters["YoyaKbnList"];
        report.Parameters["YearlyContract"].Value = parameters["YearlyContract"];
        report.Parameters["OutputSelection"].Value = parameters["OutputSelection"];
        report.Parameters["TenantCdSeq"].Value = parameters["TenantCdSeq"];

        await new System.Threading.Tasks.TaskFactory().StartNew(() =>
        {
            string fileType = "";
            report.CreateDocument();
            using (MemoryStream ms = new MemoryStream())
            {
                switch (printMode)
                {
                    case (int)PrintMode.SaveAsPDF:
                        fileType = "pdf";
                        report.ExportToPdf(ms);
                        break;
                    case (int)PrintMode.SaveAsExcel:
                        fileType = "xlsx";
                        report.ExportToXlsx(ms);
                        break;
                    case (int)PrintMode.Print:
                        PrintToolBase tool = new PrintToolBase(report.PrintingSystem);
                        tool.Print();
                        return;
                }

                byte[] exportedFileBytes = ms.ToArray();
                string myExportString = Convert.ToBase64String(exportedFileBytes);
                JSRuntime.InvokeVoidAsync("downloadFileClientSide", myExportString, fileType, "HikiukeshoReport");
            }
        });
    }

    void ClearAll(MouseEventArgs args)
    {
        transportationContractFormData = new TransportationContractFormData();
        InitializedStateOfFormData();
        SelectedBookingTypeItems = YoyakuKbnList;
    }

    CultureInfo ci = new CultureInfo("ja-JP");

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<TransportationContract> Lang { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHikiukeshoReportService HikiukeshoReportService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISaleBranchListService TpmEigyosService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerListService CustomerService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStaffListService SyainService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBusTypeListService BusTypeService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBookingTypeListService YoyKbnService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppSettingsService AppSettingsService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CustomHttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
