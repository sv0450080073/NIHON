#pragma checksum "E:\Project\HassyaAllrightCloud\Pages\HyperMenu.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "25b122dc5f4f375e082985d0b7640d79a5bddc04"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace HassyaAllrightCloud.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Infrastructure.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Domain.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Domain.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Commons.Constants;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using BlazorContextMenu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.Application.Validation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Newtonsoft.Json.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using HassyaAllrightCloud.IService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using LexLibrary.Line.NotifyBot.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using LexLibrary.Line.NotifyBot;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "E:\Project\HassyaAllrightCloud\_Imports.razor"
using DevExpress.Blazor.Reporting;

#line default
#line hidden
#nullable disable
    public partial class HyperMenu : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 622 "E:\Project\HassyaAllrightCloud\Pages\HyperMenu.razor"
       
    string dateFormat = "yy/MM/dd";
    public HyperFormData hyperData = new HyperFormData();
    List<BookingTypeData> BookingTypeList;
    List<SaleBranchData> SaleBranchList;
    List<StaffsData> StaffList;
    List<LoadCustomerList> CustomerList;
    List<CodeTypeData> CodeKbList;
    List<CustomerClassification> CustomerClassificationList;
    List<LoadLocation> DestinationList;
    List<LoadDispatchArea> DispatchList;
    List<LoadLocation> OriginList;
    List<LoadLocation> AreaList;
    List<BusTypesData> BusTypeList;
    List<VpmCodeKb> ConditionList;
    bool IsValid = true;
    bool IsInitForDate = false;
    bool IsClickNavigate = false;
    bool IsNoData = false;
    bool ShowErrorPopup = false;
    bool isLoading { get; set; } = false;
    string ErrorMessage = "";
    int dateType;

    /// <summary>
    /// Load javascript of page
    /// </summary>
    protected override void OnParametersSet()
    {
        JSRuntime.InvokeVoidAsync("loadPageScript", "hyperMenuPage");
        base.OnParametersSet();
    }

    protected override async Task OnInitializedAsync()
    {
        dateType = (int)DateType.Dispatch;
        // 予約区分
        BookingTypeList = await TpmYoyKbnService.GetBySiyoKbn();
        BookingTypeList.Insert(0, null);

        // 受付営業所
        SaleBranchList = await TpmEigyosService.Get(Common.CompanyID);
        SaleBranchList.Insert(0, null);

        // 営業担当, 入力担当
        StaffList = await SyainService.Get(Common.CompanyID);
        StaffList.Insert(0, null);

        // 得意先, 仕入先
        CustomerList = await CustomerService.Get(Common.TenantID);
        CustomerList.Insert(0, null);

        // 団体区分
        CodeKbList = await CodeKbService.GetDantai(Common.TenantID);
        CodeKbList.Insert(0, null);

        // 客種区分
        CustomerClassificationList = await CustomerCLassificationService.Get(Common.TenantID);
        CustomerClassificationList.Insert(0, null);

        // 行先
        DestinationList = await LocationService.GetDestination(Common.TenantID);
        DestinationList.Insert(0, null);

        // 配車地
        DispatchList = await DispatchService.Get(Common.TenantID);
        DispatchList.Insert(0, null);

        // 発生地
        OriginList = await LocationService.GetOrigin(Common.TenantID);
        OriginList.Insert(0, null);

        // エリア
        AreaList = await LocationService.GetArea(Common.TenantID);
        AreaList.Insert(0, null);

        // 車種
        BusTypeList = await BusTypeService.GetAll(Common.TenantID);
        BusTypeList.Insert(0, null);

        // 受付条件
        ConditionList = await CodeKbService.GetJoken(Common.TenantID);
        ConditionList.Insert(0, null);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeAsync<string>("focusEditor", "focus");
            JSRuntime.InvokeVoidAsync("setEventforCurrencyField", false);
            JSRuntime.InvokeVoidAsync("setEventforCodeNumberField");
            JSRuntime.InvokeAsync<string>("addMaxLength", "length", 7);
            JSRuntime.InvokeAsync<string>("addMaxLength", "length", 10);
            JSRuntime.InvokeVoidAsync("adjustHyperAreaWidth");
            StateHasChanged();
        }
        JSRuntime.InvokeVoidAsync("loadPageScript", "hyperMenuPage", "hyperMenuPageTabKey");
    }

    private async void RedirectToSuperMenu(SuperMenyTypeDisplay type)
    {
        IsClickNavigate = true;
        if (IsValid && IsInitForDate)
        {
            isLoading = true;
            await Task.Run(() =>
            {
                CheckRecordForSuperMenuGrid(type).Wait();
                isLoading = false;
            });
            if (!IsNoData)
            {
                string QueryParam = hyperData.ToQueryString();
                NavigationManager.NavigateTo(string.Format("/supermenu?{0}&type={1}", QueryParam, (int)type), true);
            }
            else
            {
                await InvokeAsync(StateHasChanged);
            }
        }
    }

    private async Task RedirectToGraph(GraphTypeDisplay type)
    {
        IsClickNavigate = true;
        if (IsValid && IsInitForDate)
        {
            string Message = HyperDataService.CheckValidationForGraph(type, hyperData, dateType);
            if (!string.IsNullOrEmpty(Message))
            {
                ShowErrorPopup = true;
                ErrorMessage = Lang[Message];
                return;
            }

            isLoading = true;
            await Task.Run(() =>
            {
                CheckRecordForGraphSaleStaffDay().Wait();
                isLoading = false;
            });
            if (!IsNoData)
            {
                string QueryParam = hyperData.ToQueryString();
                NavigationManager.NavigateTo(string.Format("/hypergraph?{0}&type={1}", QueryParam, (int)type), true);
            }
            else
            {
                await InvokeAsync(StateHasChanged);
            }
        }
    }

    private async Task CheckRecordForSuperMenuGrid(SuperMenyTypeDisplay type)
    {
        if (type == SuperMenyTypeDisplay.Reservation)
        {
            List<SuperMenuReservationData> data = await HyperDataService.GetSuperMenuReservationData(hyperData, Common.CompanyID, Common.TenantID, null);
            IsNoData = data.Count == 0;
        }
        else
        {
            List<SuperMenuVehicleData> data = await HyperDataService.GetSuperMenuVehicleData(hyperData, Common.CompanyID, Common.TenantID, null);
            IsNoData = data.Count == 0;
        }

    }

    private async Task CheckRecordForGraphSaleStaffDay()
    {
        List<HyperGraphData> data = await HyperDataService.GetHyperGraphData(hyperData, Common.CompanyID, Common.TenantID, true);
        if (data.Count() == 0)
        {
            IsNoData = true;
        }
        else
        {
            IsNoData = false;
        }
    }

    private void ChangeValueForm(string ValueName, dynamic value, EditContext formContext)
    {
        if (value is string && string.IsNullOrEmpty(value))
        {
            value = null;
        }
        var propertyInfo = hyperData.GetType().GetProperty(ValueName);
        propertyInfo.SetValue(hyperData, value, null);
        IsValid = formContext.Validate();
        CheckInitForDate();
        InvokeAsync(StateHasChanged);
    }

    private void CheckInitForDate()
    {
        if (hyperData.HaishaBiFrom == null &&
            hyperData.HaishaBiTo == null &&
            hyperData.TochakuBiFrom == null &&
            hyperData.TochakuBiTo == null &&
            hyperData.YoyakuBiFrom == null &&
            hyperData.YoyakuBiTo == null)
        {
            IsInitForDate = false;
        }
        else
        {
            IsInitForDate = true;
        }
    }

    private void ChangeDateType(DateType type)
    {
        DateTime? dateFrom = null;
        DateTime? dateTo = null;
        switch (dateType)
        {
            case (int)DateType.Dispatch:
                {
                    dateFrom = hyperData.HaishaBiFrom;
                    dateTo = hyperData.HaishaBiTo;
                    break;
                }
            case (int)DateType.Arrival:
                {
                    dateFrom = hyperData.TochakuBiFrom;
                    dateTo = hyperData.TochakuBiTo;
                    break;
                }
            case (int)DateType.Reservation:
                {
                    dateFrom = hyperData.YoyakuBiFrom;
                    dateTo = hyperData.YoyakuBiTo;
                    break;
                }
            default:
                break;
        }

        switch (type)
        {
            case DateType.Dispatch:
                {
                    hyperData.HaishaBiFrom = dateFrom;
                    hyperData.HaishaBiTo = dateTo;
                    hyperData.TochakuBiFrom = null;
                    hyperData.TochakuBiTo = null;
                    hyperData.YoyakuBiFrom = null;
                    hyperData.YoyakuBiTo = null;
                    break;
                }
            case DateType.Arrival:
                {
                    hyperData.HaishaBiFrom = null;
                    hyperData.HaishaBiTo = null;
                    hyperData.TochakuBiFrom = dateFrom;
                    hyperData.TochakuBiTo = dateTo;
                    hyperData.YoyakuBiFrom = null;
                    hyperData.YoyakuBiTo = null;
                    break;
                }
            case DateType.Reservation:
                {
                    hyperData.HaishaBiFrom = null;
                    hyperData.HaishaBiTo = null;
                    hyperData.TochakuBiFrom = null;
                    hyperData.TochakuBiTo = null;
                    hyperData.YoyakuBiFrom = dateFrom;
                    hyperData.YoyakuBiTo = dateTo;
                    break;
                }
            default: break;
        }
        dateType = (int)type;
        InvokeAsync(StateHasChanged);
    }

    private void ResetHyperForm()
    {
        hyperData = new HyperFormData();
        CheckInitForDate();
        InvokeAsync(StateHasChanged);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<HyperMenu> Lang { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHyperDataService HyperDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppSettingsService AppSettingsService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBusTypeListService BusTypeService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDispatchListService DispatchService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocationListService LocationService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerCLassificationListService CustomerCLassificationService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITPM_CodeKbListService CodeKbService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerListService CustomerService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStaffListService SyainService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISaleBranchListService TpmEigyosService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBookingTypeListService TpmYoyKbnService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CustomHttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
