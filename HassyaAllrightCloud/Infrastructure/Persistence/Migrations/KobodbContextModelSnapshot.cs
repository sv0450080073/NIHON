// <auto-generated />
using System;
using HassyaAllrightCloud.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HassyaAllrightCloud.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(KobodbContext))]
    partial class KobodbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.3.20181.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LineUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LineUser");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdBiko", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("BikTblKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("BikoRen")
                        .HasColumnType("smallint");

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Biko1");

                    b.ToTable("LKD_Biko");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdCoupon", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouGkin")
                        .HasColumnType("int");

                    b.Property<string>("CouNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("CouZan")
                        .HasColumnType("int");

                    b.Property<byte>("CouZanFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("HakoYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("NyuSihEigSeq")
                        .HasColumnType("int");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiSihCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SeiSihSitCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Coupon1");

                    b.ToTable("LKD_Coupon");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdEtcImport", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ログＳＥＱ")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("備考")
                        .HasMaxLength(50);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint")
                        .HasComment("分割連番");

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasColumnType("char(19)")
                        .IsFixedLength(true)
                        .HasComment("カード番号")
                        .HasMaxLength(19)
                        .IsUnicode(false);

                    b.Property<string>("DeRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasComment("出料金所コード")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("DeRyoChiCd")
                        .HasColumnType("tinyint")
                        .HasComment("出料金所地区コード");

                    b.Property<short>("EtcRen")
                        .HasColumnType("smallint")
                        .HasComment("ＥＴＣ明細連番");

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasComment("拡張項目")
                        .HasMaxLength(255);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("ファイル名")
                        .HasMaxLength(100);

                    b.Property<int>("FutTumCdSeq")
                        .HasColumnType("int")
                        .HasComment("付帯積込品コードＳＥＱ");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("付帯積込品名")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("変更前キー項目")
                        .HasMaxLength(4000);

                    b.Property<int>("ImportTanka")
                        .HasColumnType("int")
                        .HasComment("取込単価");

                    b.Property<string>("IriRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasComment("入料金所コード")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("IriRyoChiCd")
                        .HasColumnType("tinyint")
                        .HasComment("入料金所地区コード");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint")
                        .HasComment("ログ処理区分");

                    b.Property<int>("SeisanCdSeq")
                        .HasColumnType("int")
                        .HasComment("精算コードＳＥＱ");

                    b.Property<byte>("SeisanKbn")
                        .HasColumnType("tinyint")
                        .HasComment("精算区分");

                    b.Property<string>("SeisanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("精算名")
                        .HasMaxLength(50);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("使用区分");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint")
                        .HasComment("数量");

                    b.Property<int>("SyaRyoCd")
                        .HasColumnType("int")
                        .HasComment("車輌コード");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int")
                        .HasComment("手数料額");

                    b.Property<int>("TanKa")
                        .HasColumnType("int")
                        .HasComment("単価");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint")
                        .HasComment("悌団番号");

                    b.Property<byte>("TensoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("転送区分");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)")
                        .HasComment("手数料率");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasComment("受付番号")
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<string>("UnkTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("運行時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UnkYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("運行年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_EtcImport1");

                    b.ToTable("LKD_EtcImport");

                    b.HasComment("ETCデータ取込テーブル");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdFutTum", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DeRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("DeRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("DeRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(225)")
                        .HasMaxLength(225);

                    b.Property<int>("FutTumCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("IriRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("IriRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("IriRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NcouKbn")
                        .HasColumnName("NCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("NyuKinKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeisanCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeisanKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeisanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("TanKa")
                        .HasColumnType("int");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("LogSeq")
                        .HasName("LKD_FutTum1");

                    b.ToTable("LKD_FutTum");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdHaiin", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiInRen")
                        .HasColumnType("tinyint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("SyukinTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Syukinbasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaiknBasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaiknTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Haiin1");

                    b.ToTable("LKD_Haiin");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdHaisha", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("BunKsyuJyn")
                        .HasColumnName("BunKSyuJyn")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("DanTaNm2")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("DrvJin")
                        .HasColumnType("smallint");

                    b.Property<string>("GoSya")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("GoSyaJyn")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiSu")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiWnin")
                        .HasColumnName("GuiWNin")
                        .HasColumnType("smallint");

                    b.Property<string>("HaiCom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("HaiIkbn")
                        .HasColumnName("HaiIKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaiSbinCdSeq")
                        .HasColumnName("HaiSBinCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("HaiScdSeq")
                        .HasColumnName("HaiSCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSjyus1")
                        .IsRequired()
                        .HasColumnName("HaiSJyus1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("HaiSjyus2")
                        .IsRequired()
                        .HasColumnName("HaiSJyus2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("HaiSkbn")
                        .HasColumnName("HaiSKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("HaiSkigou")
                        .IsRequired()
                        .HasColumnName("HaiSKigou")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("HaiSkouKcdSeq")
                        .HasColumnName("HaiSKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSnm")
                        .IsRequired()
                        .HasColumnName("HaiSNm")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HaiSsetTime")
                        .IsRequired()
                        .HasColumnName("HaiSSetTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("HaiSsryCdSeq")
                        .HasColumnName("HaiSSryCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiStime")
                        .IsRequired()
                        .HasColumnName("HaiSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("HaiSymd")
                        .IsRequired()
                        .HasColumnName("HaiSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("IkMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("IkNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("JyoSyaJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("KhinKbn")
                        .HasColumnName("KHinKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KikEigSeq")
                        .HasColumnType("int");

                    b.Property<string>("KikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KikYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("Kskbn")
                        .HasColumnName("KSKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KssyaRseq")
                        .HasColumnName("KSSyaRSeq")
                        .HasColumnType("int");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NippoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("OthJin1")
                        .HasColumnType("smallint");

                    b.Property<short>("OthJin2")
                        .HasColumnType("smallint");

                    b.Property<byte>("OthJinKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OthJinKbn2")
                        .HasColumnType("tinyint");

                    b.Property<string>("PlatNo")
                        .IsRequired()
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<short>("PlusJin")
                        .HasColumnType("smallint");

                    b.Property<int>("RotCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SijJoKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<int>("SyuEigCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("SyuKoTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyuKoYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<int>("TouBinCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("TouCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouJyusyo1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TouJyusyo2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TouKigou")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("TouKouKcdSeq")
                        .HasColumnName("TouKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TouSetTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("UkeJyKbnCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKataKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("YoushaSyo")
                        .HasColumnType("int");

                    b.Property<int>("YoushaTes")
                        .HasColumnType("int");

                    b.Property<int>("YoushaUnc")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Haisha1");

                    b.ToTable("LKD_Haisha");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdHaishaExp", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("HaiSbinNm")
                        .IsRequired()
                        .HasColumnName("HaiSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaiSkouKnm")
                        .IsRequired()
                        .HasColumnName("HaiSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("TouSbinNm")
                        .IsRequired()
                        .HasColumnName("TouSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSkouKnm")
                        .IsRequired()
                        .HasColumnName("TouSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.HasKey("LogSeq")
                        .HasName("LKD_HaishaExp1");

                    b.ToTable("LKD_HaishaExp");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdHenko", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("HaitaHenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("HenTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("HenYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YykSiyoFlg")
                        .HasColumnType("tinyint");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Henko1");

                    b.ToTable("LKD_Henko");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdJitHou", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DayJisaKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("DayTotalKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("DayUnsoSyu")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<decimal>("DayYusoJin")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<int>("EigyoCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<decimal>("JitJisaKm")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal>("JitKisoKm")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal>("JitudoRitu")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<byte>("KataKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NenRyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("NobeJitCnt")
                        .HasColumnType("int");

                    b.Property<int>("NobeJyoCnt")
                        .HasColumnType("int");

                    b.Property<int>("NobeRinCnt")
                        .HasColumnType("int");

                    b.Property<int>("NobeSumCnt")
                        .HasColumnType("int");

                    b.Property<decimal>("RinjiRitu")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<string>("SyoriYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("UnkoCnt")
                        .HasColumnType("int");

                    b.Property<int>("UnkoKikak1Cnt")
                        .HasColumnType("int");

                    b.Property<int>("UnkoKikak2Cnt")
                        .HasColumnType("int");

                    b.Property<int>("UnkoOthCnt")
                        .HasColumnType("int");

                    b.Property<decimal>("UnsoSyu")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<decimal>("UnsoZaSyu")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<byte>("UnsouKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YusoJin")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_JisHou1");

                    b.ToTable("LKD_JitHou");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdJyosha", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("JyoChiNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("JyoRen")
                        .HasColumnType("smallint");

                    b.Property<int>("JyoScdSeq")
                        .HasColumnName("JyoSCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("PicUpJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Jyosha1");

                    b.ToTable("LKD_Jyosha");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdKaknin", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("DaiSuFlg")
                        .HasColumnType("tinyint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("KaknAit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<short>("KaknNin")
                        .HasColumnType("smallint");

                    b.Property<short>("KaknRen")
                        .HasColumnType("smallint");

                    b.Property<string>("KaknYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("KingFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NitteiFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SaikFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Kaknin1");

                    b.ToTable("LKD_Kaknin");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdKariei", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<short>("KariDai")
                        .HasColumnType("smallint");

                    b.Property<short>("KarieiRen")
                        .HasColumnType("smallint");

                    b.Property<int>("KseigSeq")
                        .HasColumnName("KSEigSeq")
                        .HasColumnType("int");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Kariei1");

                    b.ToTable("LKD_Kariei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdKikyuj", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("KinKyuCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("KinKyuEtime")
                        .IsRequired()
                        .HasColumnName("KinKyuETime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KinKyuEymd")
                        .IsRequired()
                        .HasColumnName("KinKyuEYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("KinKyuStime")
                        .IsRequired()
                        .HasColumnName("KinKyuSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KinKyuSymd")
                        .IsRequired()
                        .HasColumnName("KinKyuSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("KinKyuTblCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Kikyuj1");

                    b.ToTable("LKD_Kikyuj");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdKoban", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("FuriYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("JitdTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("KinKyuTblCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("KitYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("KouBnRen")
                        .HasColumnType("smallint");

                    b.Property<string>("KouStime")
                        .IsRequired()
                        .HasColumnName("KouSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("KouZokPtnKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("KyuKtime")
                        .IsRequired()
                        .HasColumnName("KyuKTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("RenEigCd")
                        .HasColumnType("int");

                    b.Property<int>("RotCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("RouTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SigyCd")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte>("SigyKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SigySyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SsinTime")
                        .IsRequired()
                        .HasColumnName("SSinTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SyugyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyukinTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Syukinbasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TaiknBasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaiknTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UnkYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UsinyTime")
                        .IsRequired()
                        .HasColumnName("USinyTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ZangTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Koban1");

                    b.ToTable("LKD_Koban");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdKotei", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("KouRen")
                        .HasColumnType("tinyint");

                    b.Property<string>("Koutei")
                        .IsRequired()
                        .HasColumnType("nvarchar(102)")
                        .HasMaxLength(102);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("TeiDanNittei")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("TeiDanTomKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Kotei1");

                    b.ToTable("LKD_Kotei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdKoteik", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ログＳＥＱ")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("備考")
                        .HasMaxLength(50);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint")
                        .HasComment("分割連番");

                    b.Property<string>("HaiStime")
                        .IsRequired()
                        .HasColumnName("HaiSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("配車時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("変更前キー項目")
                        .HasMaxLength(4000);

                    b.Property<decimal>("JisaIpkm")
                        .HasColumnName("JisaIPKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車一般キロ");

                    b.Property<decimal>("JisaKskm")
                        .HasColumnName("JisaKSKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車高速キロ");

                    b.Property<int>("KeiyuMapCdSeq")
                        .HasColumnType("int")
                        .HasComment("経由地マップコードＳＥＱ");

                    b.Property<string>("KeiyuNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("経由地名")
                        .HasMaxLength(50);

                    b.Property<int>("KikEigSeq")
                        .HasColumnType("int")
                        .HasComment("帰庫営業所コードＳＥＱ");

                    b.Property<string>("KikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("帰庫地名")
                        .HasMaxLength(50);

                    b.Property<decimal>("KisoIpkm")
                        .HasColumnName("KisoIPkm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("回送一般キロ");

                    b.Property<decimal>("KisoKokm")
                        .HasColumnName("KisoKOKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("回送高速キロ");

                    b.Property<string>("KyuKendTime")
                        .IsRequired()
                        .HasColumnName("KyuKEndTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("休憩終了時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("KyuKmapCdSeq")
                        .HasColumnName("KyuKMapCdSeq")
                        .HasColumnType("int")
                        .HasComment("休憩地マップコードＳＥＱ");

                    b.Property<string>("KyuKnm")
                        .IsRequired()
                        .HasColumnName("KyuKNm")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("休憩地名")
                        .HasMaxLength(50);

                    b.Property<string>("KyuKstaTime")
                        .IsRequired()
                        .HasColumnName("KyuKStaTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("休憩開始時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KyuKtime")
                        .IsRequired()
                        .HasColumnName("KyuKTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("休憩時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint")
                        .HasComment("ログ処理区分");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint")
                        .HasComment("日程");

                    b.Property<int>("ShakuMapCdSeq")
                        .HasColumnName("SHakuMapCdSeq")
                        .HasColumnType("int")
                        .HasComment("宿泊地マップコードＳＥＱ");

                    b.Property<string>("ShakuNm")
                        .IsRequired()
                        .HasColumnName("SHakuNm")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("宿泊地名")
                        .HasMaxLength(50);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("使用区分");

                    b.Property<int>("SyuEigCdSeq")
                        .HasColumnType("int")
                        .HasComment("出庫営業所コードＳＥＱ");

                    b.Property<int>("SyuPaCdSeq")
                        .HasColumnType("int")
                        .HasComment("出発地コードＳＥＱ");

                    b.Property<string>("SyuPaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("出発地名")
                        .HasMaxLength(50);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("出発時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyukoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("出庫地名")
                        .HasMaxLength(50);

                    b.Property<string>("TaikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("待機時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("TeiDanNittei")
                        .HasColumnType("smallint")
                        .HasComment("悌団日程");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint")
                        .HasComment("悌団番号");

                    b.Property<byte>("TeiDanTomKbn")
                        .HasColumnType("tinyint")
                        .HasComment("悌団泊区分");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint")
                        .HasComment("泊区分");

                    b.Property<int>("TouCdSeq")
                        .HasColumnType("int")
                        .HasComment("到着地コードＳＥＱ");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("到着時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("到着地名")
                        .HasMaxLength(50);

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasComment("受付番号")
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Koteik1");

                    b.ToTable("LKD_Koteik");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdMfutTu", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_MFutTu1");

                    b.ToTable("LKD_MFutTu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdMihrim", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouKesRui")
                        .HasColumnType("int");

                    b.Property<int>("HaseiKin")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("MihRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("SihFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("SihRaiRui")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("YouFutTumRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("YoushaGak")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Mihrim1");

                    b.ToTable("LKD_Mihrim");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdMishum", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouKesRui")
                        .HasColumnType("int");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("FutuUnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("MisyuRen")
                        .HasColumnType("smallint");

                    b.Property<decimal>("NyuKinRui")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiKin")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Mishum1");

                    b.ToTable("LKD_Mishum");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdNyShCu", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouKesG")
                        .HasColumnType("int");

                    b.Property<int>("CouTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NyuKesiKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("NyuSihCouRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_NyShCu1");

                    b.ToTable("LKD_NyShCu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdNyShmi", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("FurKesG")
                        .HasColumnType("int");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("KesG")
                        .HasColumnType("int");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("NyuSihCouRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("NyuSihRen")
                        .HasColumnType("smallint");

                    b.Property<int>("NyuSihTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_NyShmi1");

                    b.ToTable("LKD_NyShmi");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdNyuSih", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCd")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("BankSitCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CardDen")
                        .IsRequired()
                        .HasColumnType("char(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("CardSyo")
                        .IsRequired()
                        .HasColumnType("char(23)")
                        .IsFixedLength(true)
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("EtcSyo1")
                        .IsRequired()
                        .HasColumnType("char(23)")
                        .IsFixedLength(true)
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("EtcSyo2")
                        .IsRequired()
                        .HasColumnType("char(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("FuriTes")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("NyuSihEigSeq")
                        .HasColumnType("int");

                    b.Property<int>("NyuSihG")
                        .HasColumnType("int");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NyuSihSyu")
                        .HasColumnType("tinyint");

                    b.Property<int>("NyuSihTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("NyuSihYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("TegataNo")
                        .IsRequired()
                        .HasColumnType("char(23)")
                        .IsFixedLength(true)
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("TegataYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YokinSyu")
                        .HasColumnType("tinyint");

                    b.HasKey("LogSeq")
                        .HasName("LKD_NyuSih1");

                    b.ToTable("LKD_NyuSih");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdShabni", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<decimal>("EndMeter")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<decimal>("JisaIpkm")
                        .HasColumnName("JisaIPKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("JisaKskm")
                        .HasColumnName("JisaKSKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<short>("JyoSyaJin")
                        .HasColumnType("smallint");

                    b.Property<decimal>("KisoIpkm")
                        .HasColumnName("KisoIPkm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("KisoKokm")
                        .HasColumnName("KisoKOKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Nenryo1")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<decimal>("Nenryo2")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<decimal>("Nenryo3")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<int>("NenryoCd1Seq")
                        .HasColumnType("int");

                    b.Property<int>("NenryoCd2Seq")
                        .HasColumnType("int");

                    b.Property<int>("NenryoCd3Seq")
                        .HasColumnType("int");

                    b.Property<int>("NenryoDai")
                        .HasColumnType("int");

                    b.Property<decimal>("OthKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<short>("PlusJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("StMeter")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UnkYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Shabni1");

                    b.ToTable("LKD_Shabni");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdShuYmd", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("ShuriEtime")
                        .IsRequired()
                        .HasColumnName("ShuriETime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ShuriStime")
                        .IsRequired()
                        .HasColumnName("ShuriSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("ShuriTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("ShuriYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_ShuYmd1");

                    b.ToTable("LKD_ShuYmd");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdShuri", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("ShuriCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("ShuriEtime")
                        .IsRequired()
                        .HasColumnName("ShuriETime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ShuriEymd")
                        .IsRequired()
                        .HasColumnName("ShuriEYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ShuriStime")
                        .IsRequired()
                        .HasColumnName("ShuriSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ShuriSymd")
                        .IsRequired()
                        .HasColumnName("ShuriSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("ShuriTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Shuri1");

                    b.ToTable("LKD_Shuri");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdTehai", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TehFax")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("TehJyus1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TehJyus2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TehMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TehNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("TehRen")
                        .HasColumnType("smallint");

                    b.Property<string>("TehTan")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TehTel")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<int>("TehaiCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("TeiDanNittei")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<byte>("TeiDanTomKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_Tehai1");

                    b.ToTable("LKD_Tehai");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdTokuYm", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EigyoCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeikYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("SitenCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("TokuiSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_TokuYm1");

                    b.ToTable("LKD_TokuYm");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdUnkobi", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaMapSeq")
                        .HasColumnType("int");

                    b.Property<string>("AreaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("DanTaKana")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DanTaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("DrvJin")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiSu")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiWnin")
                        .HasColumnName("GuiWNin")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiIkbn")
                        .HasColumnName("HaiIKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaiSbinCdSeq")
                        .HasColumnName("HaiSBinCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("HaiScdSeq")
                        .HasColumnName("HaiSCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSjyus1")
                        .IsRequired()
                        .HasColumnName("HaiSJyus1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("HaiSjyus2")
                        .IsRequired()
                        .HasColumnName("HaiSJyus2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("HaiSkbn")
                        .HasColumnName("HaiSKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaiSkouKcdSeq")
                        .HasColumnName("HaiSKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSnm")
                        .IsRequired()
                        .HasColumnName("HaiSNm")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HaiSsetTime")
                        .IsRequired()
                        .HasColumnName("HaiSSetTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("HaiStime")
                        .IsRequired()
                        .HasColumnName("HaiSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("HaiSymd")
                        .IsRequired()
                        .HasColumnName("HaiSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("HasMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HasNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("IkMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("IkNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("JyoKyakuCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("JyoSyaJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("KanDmhflg")
                        .HasColumnName("KanDMHFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("KanJnm")
                        .IsRequired()
                        .HasColumnName("KanJNm")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("KanjFax")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("KanjJyus1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("KanjJyus2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("KanjKeiNo")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("KanjMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KanjTel")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<byte>("KhakFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("KhinKbn")
                        .HasColumnName("KHinKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("KikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("Kskbn")
                        .HasColumnName("KSKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NippoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("OthJin1")
                        .HasColumnType("smallint");

                    b.Property<short>("OthJin2")
                        .HasColumnType("smallint");

                    b.Property<byte>("OthJinKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OthJinKbn2")
                        .HasColumnType("tinyint");

                    b.Property<short>("PlusJin")
                        .HasColumnType("smallint");

                    b.Property<int>("RotCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SijJoKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyuKoTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("TouBinCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("TouCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouJyusyo1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TouJyusyo2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TouKouKcdSeq")
                        .HasColumnName("TouKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TouSetTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("UkeJyKbnCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("UnkoJkbn")
                        .HasColumnName("UnkoJKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UriYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ZenHaFlg")
                        .HasColumnType("tinyint");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Unkobi1");

                    b.ToTable("LKD_Unkobi");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdUnkobiExp", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("HaiSbinNm")
                        .IsRequired()
                        .HasColumnName("HaiSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaiSkouKnm")
                        .IsRequired()
                        .HasColumnName("HaiSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("TouSbinNm")
                        .IsRequired()
                        .HasColumnName("TouSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSkouKnm")
                        .IsRequired()
                        .HasColumnName("TouSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.HasKey("LogSeq")
                        .HasName("LKD_UnkobiExp1");

                    b.ToTable("LKD_UnkobiExp");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYfutTu", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("DeRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("DeRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("FutTumCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("HaseiKin")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("IriRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("IriRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("IriRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScouKbn")
                        .HasColumnName("SCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeisanCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeisanKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeisanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("SihKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("TanKa")
                        .HasColumnType("int");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("YouFutTumRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("LogSeq")
                        .HasName("LKD_YFutTu1");

                    b.ToTable("LKD_YFutTu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYmfuTu", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaseiKin")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("YouFutTumRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_YMFuTu1");

                    b.ToTable("LKD_YMFuTu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYouSyu", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuDai")
                        .HasColumnType("smallint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaSyuTan")
                        .HasColumnType("int");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKataKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.HasKey("LogSeq")
                        .HasName("LKD_YouSyu1");

                    b.ToTable("LKD_YouSyu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYousha", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("JitaFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ScouKbn")
                        .HasColumnName("SCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SihKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SihYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("SihYotYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YouCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("YouSitCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Yousha1");

                    b.ToTable("LKD_Yousha");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYykReport", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ログＳＥＱ")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdjustTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("調整時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("AllSokoKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("総走行キロ");

                    b.Property<string>("AllSokoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("総走行時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("ChangeFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChangeKoskTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeShinTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("ChangeSokoKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("CheckTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("点検時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("変更前キー項目")
                        .HasMaxLength(4000);

                    b.Property<decimal>("JiSaKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車キロ");

                    b.Property<string>("JiSaTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("実車時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint")
                        .HasComment("ログ処理区分");

                    b.Property<string>("ShinSoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("深夜早朝時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("SpecialFlg")
                        .HasColumnType("tinyint")
                        .HasComment("特殊車両料金フラグ");

                    b.Property<byte>("SyaSyuRen")
                        .HasColumnType("tinyint")
                        .HasComment("車種連番");

                    b.Property<int>("UkeNo")
                        .HasColumnType("int")
                        .HasComment("受付番号");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<int?>("UnsoSyasyuRyokin")
                        .HasColumnType("int");

                    b.Property<int?>("UnsoSyasyuUnt")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("WaribikiKbn")
                        .HasColumnType("tinyint")
                        .HasComment("割引区分");

                    b.HasKey("LogSeq")
                        .HasName("LKD_YykReport1");

                    b.ToTable("LKD_YykReport");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYykReportMei", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ログＳＥＱ")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdjustTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("調整時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("AllSokoKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("総走行キロ");

                    b.Property<string>("AllSokoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("総走行時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("ChangeFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChangeKoskTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeShinTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("ChangeSokoKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("CheckTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("点検時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("変更前キー項目")
                        .HasMaxLength(4000);

                    b.Property<decimal>("JiSaKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車キロ");

                    b.Property<string>("JiSaTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("実車時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint")
                        .HasComment("ログ処理区分");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint")
                        .HasComment("日程");

                    b.Property<string>("ShinSoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("深夜早朝時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("SpecialFlg")
                        .HasColumnType("tinyint")
                        .HasComment("特殊車両料金フラグ");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint")
                        .HasComment("車種連番");

                    b.Property<int>("UkeNo")
                        .HasColumnType("int")
                        .HasComment("受付番号");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("WaribikiKbn")
                        .HasColumnType("tinyint")
                        .HasComment("割引区分");

                    b.HasKey("LogSeq")
                        .HasName("LKD_YykReportMei1");

                    b.ToTable("LKD_YykReportMei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYykSyu", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("KataKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<int>("SyaSyuCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuDai")
                        .HasColumnType("smallint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaSyuTan")
                        .HasColumnType("int");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("LogSeq")
                        .HasName("LKD_YykSyu1");

                    b.ToTable("LKD_YykSyu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.LkdYyksho", b =>
                {
                    b.Property<int>("LogSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("CanFuRiy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CanFuTanSeq")
                        .HasColumnType("int");

                    b.Property<string>("CanFuYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<decimal>("CanRit")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<string>("CanRiy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CanSyoG")
                        .HasColumnType("int");

                    b.Property<decimal>("CanSyoR")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<int>("CanTanSeq")
                        .HasColumnType("int");

                    b.Property<int>("CanUnc")
                        .HasColumnType("int");

                    b.Property<string>("CanYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("CanZkbn")
                        .HasColumnName("CanZKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("EigTanCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("GuiWnin")
                        .HasColumnName("GuiWNin")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiIkbn")
                        .HasColumnName("HaiIKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HaiSkbn")
                        .HasColumnName("HaiSKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("HenKeyItm")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("InTanCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("IraEigCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("KaknKais")
                        .HasColumnType("tinyint");

                    b.Property<string>("KaktYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("KasTourCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("KhinKbn")
                        .HasColumnName("KHinKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KikakuNo")
                        .HasColumnType("int");

                    b.Property<byte>("Kskbn")
                        .HasColumnName("KSKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LogShKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NcouKbn")
                        .HasColumnName("NCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NippoKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NyuKinKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ScouKbn")
                        .HasColumnName("SCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiEigCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SeiKyuKbnSeq")
                        .HasColumnType("int");

                    b.Property<string>("SeiTaiYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("SeikYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<byte>("SihKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SirCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SirSitenCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SitenCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<decimal>("TesuRyoG")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<string>("TokuiFax")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("TokuiMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TokuiSeq")
                        .HasColumnType("int");

                    b.Property<string>("TokuiTanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("TokuiTel")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("TourCd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UkeEigCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("UkeYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<decimal>("UntKin")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("YoyaKana")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("YoyaKbnSeq")
                        .HasColumnType("int");

                    b.Property<string>("YoyaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("YoyaSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ZeiRui")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("LogSeq")
                        .HasName("LKD_Yyksho1");

                    b.ToTable("LKD_Yyksho");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdBiko", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("BikoRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("BikTblKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "BikoTblSeq", "BikoRen")
                        .HasName("TKD_Biko2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Biko");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdBookingMaxMinFareFeeCalc", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("AnnualContractFlag")
                        .HasColumnType("tinyint");

                    b.Property<int>("ChangeDriverFareMaxAmountforHour")
                        .HasColumnType("int");

                    b.Property<int>("ChangeDriverFareMaxAmountforKm")
                        .HasColumnType("int");

                    b.Property<int>("ChangeDriverFareMinAmountforHour")
                        .HasColumnType("int");

                    b.Property<int>("ChangeDriverFareMinAmountforKm")
                        .HasColumnType("int");

                    b.Property<string>("ChangeDriverMidnightEarlyMorningTimeCalc")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeDriverMidnightEarlyMorningTimeSum")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeDriverRestraintTimeCalc")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeDriverRestraintTimeSum")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("ChangeDriverRunningKmCalc")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("ChangeDriverRunningKmSum")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<int>("FareMaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("FareMaxAmountforHour")
                        .HasColumnType("int");

                    b.Property<int>("FareMaxAmountforKm")
                        .HasColumnType("int");

                    b.Property<int>("FareMinAmount")
                        .HasColumnType("int");

                    b.Property<int>("FareMinAmountforHour")
                        .HasColumnType("int");

                    b.Property<int>("FareMinAmountforKm")
                        .HasColumnType("int");

                    b.Property<int>("FeeMaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("FeeMinAmount")
                        .HasColumnType("int");

                    b.Property<byte>("KataKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("MidnightEarlyMorningFeeMaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("MidnightEarlyMorningFeeMinAmount")
                        .HasColumnType("int");

                    b.Property<string>("MidnightEarlyMorningTimeCalc")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MidnightEarlyMorningTimeSum")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("RestraintTimeCalc")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("RestraintTimeSum")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("RunningKmCalc")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("RunningKmSum")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("ServiceKmSum")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("ServiceTimeSum")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("SpecialFlg")
                        .HasColumnType("tinyint");

                    b.Property<int>("SpecialVehicalFeeMaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("SpecialVehicalFeeMinAmount")
                        .HasColumnType("int");

                    b.Property<int>("TransportationPlaceCodeSeq")
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceMaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("UnitPriceMinAmount")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("WaribikiKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("UkeNo", "UnkRen", "SyaSyuRen");

                    b.ToTable("TKD_BookingMaxMinFareFeeCalc");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdBookingMaxMinFareFeeCalcMeisai", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChangeDriverFeeFlag")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChangeDriverMidnightEarlyMorningTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ChangeDriverRestraintTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("ChangeDriverRunningKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("InspectionEndTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("InspectionEndYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("InspectionStartTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("InspectionStartYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("MidnightEarlyMorningTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("RestraintTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("RunningKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("ServiceKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("ServiceTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("UnkYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "SyaSyuRen", "Nittei");

                    b.ToTable("TKD_BookingMaxMinFareFeeCalcMeisai");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdCalend", b =>
                {
                    b.Property<int>("CompanyCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("CalenSyu")
                        .HasColumnType("tinyint");

                    b.Property<string>("CalenYm")
                        .HasColumnName("CalenYM")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("CalenRen")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CalenCom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte?>("CalenKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("CalenRank")
                        .HasColumnType("tinyint");

                    b.Property<string>("CalenYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("CompanyCdSeq", "CalenSyu", "CalenYm", "CalenRen");

                    b.ToTable("TKD_Calend");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdCoupon", b =>
                {
                    b.Property<int>("CouTblSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouGkin")
                        .HasColumnType("int");

                    b.Property<string>("CouNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CouZan")
                        .HasColumnType("int");

                    b.Property<byte>("CouZanFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("HakoYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("NyuSihEigSeq")
                        .HasColumnType("int");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiSihCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SeiSihSitCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("CouTblSeq")
                        .HasName("TKD_Coupon1");

                    b.ToTable("TKD_Coupon");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdEtcImport", b =>
                {
                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("ファイル名")
                        .HasMaxLength(100);

                    b.Property<string>("CardNo")
                        .HasColumnType("char(19)")
                        .IsFixedLength(true)
                        .HasComment("カード番号")
                        .HasMaxLength(19)
                        .IsUnicode(false);

                    b.Property<short>("EtcRen")
                        .HasColumnType("smallint")
                        .HasComment("ＥＴＣ明細連番");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("備考")
                        .HasMaxLength(50);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint")
                        .HasComment("分割連番");

                    b.Property<string>("DeRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasComment("出料金所コード")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("DeRyoChiCd")
                        .HasColumnType("tinyint")
                        .HasComment("出料金所地区コード");

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasComment("拡張項目")
                        .HasMaxLength(255);

                    b.Property<int>("FutTumCdSeq")
                        .HasColumnType("int")
                        .HasComment("付帯積込品コードＳＥＱ");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("付帯積込品名")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<int>("ImportTanka")
                        .HasColumnType("int")
                        .HasComment("取込単価");

                    b.Property<string>("IriRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasComment("入料金所コード")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("IriRyoChiCd")
                        .HasColumnType("tinyint")
                        .HasComment("入料金所地区コード");

                    b.Property<int>("SeisanCdSeq")
                        .HasColumnType("int")
                        .HasComment("精算コードＳＥＱ");

                    b.Property<byte>("SeisanKbn")
                        .HasColumnType("tinyint")
                        .HasComment("精算区分");

                    b.Property<string>("SeisanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("精算名")
                        .HasMaxLength(50);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("使用区分");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint")
                        .HasComment("数量");

                    b.Property<int>("SyaRyoCd")
                        .HasColumnType("int")
                        .HasComment("車輌コード");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int")
                        .HasComment("手数料額");

                    b.Property<int>("TanKa")
                        .HasColumnType("int")
                        .HasComment("単価");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint")
                        .HasComment("悌団番号");

                    b.Property<byte>("TensoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("転送区分");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)")
                        .HasComment("手数料率");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasComment("受付番号")
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<string>("UnkTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("運行時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UnkYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("運行年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("FileName", "CardNo", "EtcRen")
                        .HasName("TKD_EtcImport1");

                    b.ToTable("TKD_EtcImport");

                    b.HasComment("ETCデータ取込テーブル");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdFavoriteMenu", b =>
                {
                    b.Property<int>("FavoriteMenuCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("MenuTitle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MenuUrl")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("FavoriteMenuCdSeq");

                    b.ToTable("TKD_FavoriteMenu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdFavoriteSite", b =>
                {
                    b.Property<int>("FavoriteSiteCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("SiteTitle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SiteUrl")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("FavoriteSiteCdSeq");

                    b.ToTable("TKD_FavoriteSite");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdFutTum", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DeRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("DeRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("DeRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("FutTumCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("IriRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("IriRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("IriRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("NcouKbn")
                        .HasColumnName("NCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("NyuKinKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeisanCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeisanKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeisanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("TanKa")
                        .HasColumnType("int");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("UkeNo", "UnkRen", "FutTumKbn", "FutTumRen")
                        .HasName("TKD_FutTum2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_FutTum");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdHaiin", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiInRen")
                        .HasColumnType("tinyint");

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("SyukinTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Syukinbasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaiknBasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaiknTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "HaiInRen")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Haiin");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdHaiinMail", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiInRen")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("KinKyuTblCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UnkYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Biko")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<byte>("MailExeCnt")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MailNowKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "HaiInRen", "SyainCdSeq", "KinKyuTblCdSeq", "UnkYmd");

                    b.ToTable("TKD_HaiinMail");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdHaisha", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("BunKsyuJyn")
                        .HasColumnName("BunKSyuJyn")
                        .HasColumnType("smallint");

                    b.Property<string>("DanTaNm2")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<short>("DrvJin")
                        .HasColumnType("smallint");

                    b.Property<string>("GoSya")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("GoSyaJyn")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiSu")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiWnin")
                        .HasColumnName("GuiWNin")
                        .HasColumnType("smallint");

                    b.Property<int?>("GuideSiteiEigyoCdSeq")
                        .HasColumnType("int")
                        .HasComment("ガイド指定営業所コードＳＥＱ");

                    b.Property<string>("HaiCom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte>("HaiIkbn")
                        .HasColumnName("HaiIKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaiSbinCdSeq")
                        .HasColumnName("HaiSBinCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSbinNm")
                        .HasColumnName("HaiSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasComment("配車地便名")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("HaiScdSeq")
                        .HasColumnName("HaiSCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSjyus1")
                        .IsRequired()
                        .HasColumnName("HaiSJyus1")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("HaiSjyus2")
                        .IsRequired()
                        .HasColumnName("HaiSJyus2")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<byte>("HaiSkbn")
                        .HasColumnName("HaiSKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("HaiSkigou")
                        .IsRequired()
                        .HasColumnName("HaiSKigou")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("HaiSkouKcdSeq")
                        .HasColumnName("HaiSKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSkouKnm")
                        .HasColumnName("HaiSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasComment("配車地交通機関名")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaiSnm")
                        .IsRequired()
                        .HasColumnName("HaiSNm")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HaiSsetTime")
                        .IsRequired()
                        .HasColumnName("HaiSSetTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("HaiSsryCdSeq")
                        .HasColumnName("HaiSSryCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiStime")
                        .IsRequired()
                        .HasColumnName("HaiSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("HaiSymd")
                        .IsRequired()
                        .HasColumnName("HaiSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("IkMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("IkNm")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<short>("JyoSyaJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("KhinKbn")
                        .HasColumnName("KHinKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KikEigSeq")
                        .HasColumnType("int");

                    b.Property<string>("KikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KikYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("Kskbn")
                        .HasColumnName("KSKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KssyaRseq")
                        .HasColumnName("KSSyaRSeq")
                        .HasColumnType("int");

                    b.Property<byte>("NippoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("OthJin1")
                        .HasColumnType("smallint");

                    b.Property<short>("OthJin2")
                        .HasColumnType("smallint");

                    b.Property<byte>("OthJinKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OthJinKbn2")
                        .HasColumnType("tinyint");

                    b.Property<string>("PlatNo")
                        .IsRequired()
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<short>("PlusJin")
                        .HasColumnType("smallint");

                    b.Property<int>("RotCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SijJoKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<int>("SyuEigCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("SyuKoTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyuKoYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyukinTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("出勤時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("TouBinCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("TouCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouJyusyo1")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("TouJyusyo2")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("TouKigou")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("TouKouKcdSeq")
                        .HasColumnName("TouKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouNm")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TouSbinNm")
                        .HasColumnName("TouSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasComment("到着地便名")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSetTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouSkouKnm")
                        .HasColumnName("TouSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasComment("到着地交通機関名")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("UkeJyKbnCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKataKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("YoushaSyo")
                        .HasColumnType("int");

                    b.Property<int>("YoushaTes")
                        .HasColumnType("int");

                    b.Property<int>("YoushaUnc")
                        .HasColumnType("int");

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Haisha");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdHaishaExp", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("HaiSbinNm")
                        .IsRequired()
                        .HasColumnName("HaiSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaiSkouKnm")
                        .IsRequired()
                        .HasColumnName("HaiSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSbinNm")
                        .IsRequired()
                        .HasColumnName("TouSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSkouKnm")
                        .IsRequired()
                        .HasColumnName("TouSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen")
                        .HasName("TKD_HaishaExp1");

                    b.ToTable("TKD_HaishaExp");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdHenko", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<byte>("YykSiyoFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("HenTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("HenYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo")
                        .HasName("TKD_Henko1");

                    b.ToTable("TKD_Henko");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdJitHou", b =>
                {
                    b.Property<byte>("UnsouKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyoriYm")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("EigyoCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("KataKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NenRyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("DayJisaKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("DayTotalKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("DayUnsoSyu")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<decimal>("DayYusoJin")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("JitJisaKm")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal>("JitKisoKm")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<decimal>("JitudoRitu")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<int>("NobeJitCnt")
                        .HasColumnType("int");

                    b.Property<int>("NobeJyoCnt")
                        .HasColumnType("int");

                    b.Property<int>("NobeRinCnt")
                        .HasColumnType("int");

                    b.Property<int>("NobeSumCnt")
                        .HasColumnType("int");

                    b.Property<decimal>("RinjiRitu")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<int>("UnkoCnt")
                        .HasColumnType("int");

                    b.Property<int>("UnkoKikak1Cnt")
                        .HasColumnType("int");

                    b.Property<int>("UnkoKikak2Cnt")
                        .HasColumnType("int");

                    b.Property<int>("UnkoOthCnt")
                        .HasColumnType("int");

                    b.Property<decimal>("UnsoSyu")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<decimal>("UnsoZaSyu")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YusoJin")
                        .HasColumnType("int");

                    b.HasKey("UnsouKbn", "SyoriYm", "EigyoCdSeq", "KataKbn", "NenRyoKbn")
                        .HasName("PK_TKD_JisHou");

                    b.ToTable("TKD_JitHou");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdJyosha", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("JyoRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("JyoChiNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("JyoScdSeq")
                        .HasColumnName("JyoSCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("PicUpJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "JyoRen")
                        .HasName("TKD_Jyosha1");

                    b.ToTable("TKD_Jyosha");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKaknin", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("KaknRen")
                        .HasColumnType("smallint");

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("DaiSuFlg")
                        .HasColumnType("tinyint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("KaknAit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<short>("KaknNin")
                        .HasColumnType("smallint");

                    b.Property<string>("KaknYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("KingFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NitteiFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SaikFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "KaknRen")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Kaknin");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKariei", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<short>("KarieiRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<short>("KariDai")
                        .HasColumnType("smallint");

                    b.Property<int>("KseigSeq")
                        .HasColumnName("KSEigSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "SyaSyuRen", "KarieiRen")
                        .HasName("TKD_Kariei1");

                    b.ToTable("TKD_Kariei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKikyuj", b =>
                {
                    b.Property<int>("KinKyuTblCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("KinKyuCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("KinKyuEtime")
                        .IsRequired()
                        .HasColumnName("KinKyuETime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KinKyuEymd")
                        .IsRequired()
                        .HasColumnName("KinKyuEYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("KinKyuStime")
                        .IsRequired()
                        .HasColumnName("KinKyuSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KinKyuSymd")
                        .IsRequired()
                        .HasColumnName("KinKyuSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("KinKyuTblCdSeq")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Kikyuj");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKoban", b =>
                {
                    b.Property<string>("UnkYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("KouBnRen")
                        .HasColumnType("smallint");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("FuriYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("JitdTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("KinKyuTblCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("KitYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("KouStime")
                        .IsRequired()
                        .HasColumnName("KouSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("KouZokPtnKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("KyuKtime")
                        .IsRequired()
                        .HasColumnName("KyuKTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("RenEigCd")
                        .HasColumnType("int");

                    b.Property<int>("RotCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("RouTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SigyCd")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte>("SigyKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SigySyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SsinTime")
                        .IsRequired()
                        .HasColumnName("SSinTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("SyugyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyukinTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Syukinbasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TaiknBasy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TaiknTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UsinyTime")
                        .IsRequired()
                        .HasColumnName("USinyTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ZangTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("UnkYmd", "SyainCdSeq", "KouBnRen")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Koban");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKotei", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("KouRen")
                        .HasColumnType("tinyint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("Koutei")
                        .IsRequired()
                        .HasColumnType("nvarchar(102)")
                        .HasMaxLength(102);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("TeiDanNittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("TeiDanTomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "TomKbn", "Nittei", "KouRen")
                        .HasName("TKD_Kotei2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Kotei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKoteik", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasComment("受付番号")
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint")
                        .HasComment("悌団番号");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint")
                        .HasComment("分割連番");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint")
                        .HasComment("泊区分");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint")
                        .HasComment("日程");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("備考")
                        .HasMaxLength(50);

                    b.Property<string>("HaiStime")
                        .IsRequired()
                        .HasColumnName("HaiSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("配車時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<decimal>("JisaIpkm")
                        .HasColumnName("JisaIPKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車一般キロ");

                    b.Property<decimal>("JisaKskm")
                        .HasColumnName("JisaKSKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車高速キロ");

                    b.Property<int>("KeiyuMapCdSeq")
                        .HasColumnType("int")
                        .HasComment("経由地マップコードＳＥＱ");

                    b.Property<string>("KeiyuNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("経由地名")
                        .HasMaxLength(50);

                    b.Property<int>("KikEigSeq")
                        .HasColumnType("int")
                        .HasComment("帰庫営業所コードＳＥＱ");

                    b.Property<string>("KikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("帰庫地名")
                        .HasMaxLength(50);

                    b.Property<decimal>("KisoIpkm")
                        .HasColumnName("KisoIPkm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("回送一般キロ");

                    b.Property<decimal>("KisoKokm")
                        .HasColumnName("KisoKOKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("回送高速キロ");

                    b.Property<string>("KyuKendTime")
                        .IsRequired()
                        .HasColumnName("KyuKEndTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("休憩終了時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("KyuKmapCdSeq")
                        .HasColumnName("KyuKMapCdSeq")
                        .HasColumnType("int")
                        .HasComment("休憩地マップコードＳＥＱ");

                    b.Property<string>("KyuKnm")
                        .IsRequired()
                        .HasColumnName("KyuKNm")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("休憩地名")
                        .HasMaxLength(50);

                    b.Property<string>("KyuKstaTime")
                        .IsRequired()
                        .HasColumnName("KyuKStaTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("休憩開始時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KyuKtime")
                        .IsRequired()
                        .HasColumnName("KyuKTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("休憩時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("ShakuMapCdSeq")
                        .HasColumnName("SHakuMapCdSeq")
                        .HasColumnType("int")
                        .HasComment("宿泊地マップコードＳＥＱ");

                    b.Property<string>("ShakuNm")
                        .IsRequired()
                        .HasColumnName("SHakuNm")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("宿泊地名")
                        .HasMaxLength(50);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("使用区分");

                    b.Property<int>("SyuEigCdSeq")
                        .HasColumnType("int")
                        .HasComment("出庫営業所コードＳＥＱ");

                    b.Property<int>("SyuPaCdSeq")
                        .HasColumnType("int")
                        .HasComment("出発地コードＳＥＱ");

                    b.Property<string>("SyuPaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("出発地名")
                        .HasMaxLength(50);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("出発時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyukoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("出庫地名")
                        .HasMaxLength(50);

                    b.Property<string>("TaikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("待機時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<short>("TeiDanNittei")
                        .HasColumnType("smallint")
                        .HasComment("悌団日程");

                    b.Property<byte>("TeiDanTomKbn")
                        .HasColumnType("tinyint")
                        .HasComment("悌団泊区分");

                    b.Property<int>("TouCdSeq")
                        .HasColumnType("int")
                        .HasComment("到着地コードＳＥＱ");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("到着時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("到着地名")
                        .HasMaxLength(50);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "TomKbn", "Nittei");

                    b.ToTable("TKD_Koteik");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdKuri", b =>
                {
                    b.Property<byte>("SeinKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("YoyaKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyoriYm")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("SyoEigyoSeq")
                        .HasColumnType("int");

                    b.Property<int>("SyoTokuiSeq")
                        .HasColumnType("int");

                    b.Property<int>("SyoSitenSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<int>("AzuKin")
                        .HasColumnType("int");

                    b.Property<int>("Kingk")
                        .HasColumnType("int");

                    b.Property<int>("KuriKin")
                        .HasColumnType("int");

                    b.Property<int>("NyukinG")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("TaxKin")
                        .HasColumnType("int");

                    b.Property<int>("TesKin")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("SeinKbn", "YoyaKbn", "SyoriYm", "SyoEigyoSeq", "SyoTokuiSeq", "SyoSitenSeq", "SeiFutSyu")
                        .HasName("TKD_Kuri1");

                    b.ToTable("TKD_Kuri");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdLockTable", b =>
                {
                    b.Property<string>("SenbikiYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("YoyakuYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.ToTable("TKD_LockTable");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdMfutTu", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int");

                    b.HasKey("UkeNo", "UnkRen", "FutTumKbn", "FutTumRen", "TeiDanNo", "BunkRen")
                        .HasName("TKD_MFutTu2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_MFutTu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdMihrim", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("MihRen")
                        .HasColumnType("smallint");

                    b.Property<int>("CouKesRui")
                        .HasColumnType("int");

                    b.Property<int>("HaseiKin")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("SihFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("SihRaiRui")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("YouFutTumRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("YoushaGak")
                        .HasColumnType("int");

                    b.HasKey("UkeNo", "MihRen")
                        .HasName("TKD_Mihrim1");

                    b.ToTable("TKD_Mihrim");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdMishum", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("MisyuRen")
                        .HasColumnType("smallint");

                    b.Property<int>("CouKesRui")
                        .HasColumnType("int");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("FutuUnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<decimal>("NyuKinRui")
                        .HasColumnType("numeric(9, 0)");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiKin")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int");

                    b.HasKey("UkeNo", "MisyuRen")
                        .HasName("TKD_Mishum1");

                    b.ToTable("TKD_Mishum");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdNotice", b =>
                {
                    b.Property<int>("NoticeCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NoticeContent")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<byte>("NoticeDisplayKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("NoticeCdSeq")
                        .HasName("PK_TKD_Notice1");

                    b.ToTable("TKD_Notice");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdNyShCu", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("NyuSihCouRen")
                        .HasColumnType("smallint");

                    b.Property<int>("CouKesG")
                        .HasColumnType("int");

                    b.Property<int>("CouTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("NyuKesiKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.HasKey("UkeNo", "NyuSihCouRen")
                        .HasName("TKD_NyShCu1");

                    b.ToTable("TKD_NyShCu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdNyShmi", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("NyuSihRen")
                        .HasColumnType("smallint");

                    b.Property<int>("CouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("FurKesG")
                        .HasColumnType("int");

                    b.Property<short>("FutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("KesG")
                        .HasColumnType("int");

                    b.Property<short>("NyuSihCouRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("NyuSihTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeiFutSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.HasKey("UkeNo", "NyuSihRen")
                        .HasName("TKD_NyShmi1");

                    b.ToTable("TKD_NyShmi");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdNyuSih", b =>
                {
                    b.Property<int>("NyuSihTblSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCd")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("BankSitCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CardDen")
                        .IsRequired()
                        .HasColumnType("char(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("CardSyo")
                        .IsRequired()
                        .HasColumnType("char(23)")
                        .IsFixedLength(true)
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("EtcSyo1")
                        .IsRequired()
                        .HasColumnType("char(23)")
                        .IsFixedLength(true)
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("EtcSyo2")
                        .IsRequired()
                        .HasColumnType("char(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("FuriTes")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("NyuSihEigSeq")
                        .HasColumnType("int");

                    b.Property<int>("NyuSihG")
                        .HasColumnType("int");

                    b.Property<byte>("NyuSihKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NyuSihSyu")
                        .HasColumnType("tinyint");

                    b.Property<string>("NyuSihYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("TegataNo")
                        .IsRequired()
                        .HasColumnType("char(23)")
                        .IsFixedLength(true)
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("TegataYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YokinSyu")
                        .HasColumnType("tinyint");

                    b.HasKey("NyuSihTblSeq")
                        .HasName("TKD_NyuSih1");

                    b.ToTable("TKD_NyuSih");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdPersonalNote", b =>
                {
                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("SyainCdSeq");

                    b.ToTable("TKD_PersonalNote");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSchCusGrp", b =>
                {
                    b.Property<int>("CusGrpSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GrpNnm")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("CusGrpSeq")
                        .HasName("TKD_SchCusGrp1");

                    b.ToTable("TKD_SchCusGrp");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSchCusGrpMem", b =>
                {
                    b.Property<int>("CusGrpSeq")
                        .HasColumnType("int");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("CusGrpSeq", "SyainCdSeq")
                        .HasName("TKD_SchCusGrpMem1");

                    b.ToTable("TKD_SchCusGrpMem");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSchHyoSet", b =>
                {
                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("DefltDispTyp")
                        .HasColumnType("tinyint");

                    b.Property<string>("StrTimeOfDay")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("TimeZn")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("WeekStrDay")
                        .HasColumnType("tinyint");

                    b.HasKey("SyainCdSeq")
                        .HasName("TKD_SchHyoSet1");

                    b.ToTable("TKD_SchHyoSet");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSchYotKsya", b =>
                {
                    b.Property<int>("YoteiSeq")
                        .HasColumnType("int");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("AcceptKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("YoteiSeq", "SyainCdSeq")
                        .HasName("TKD_SchYotKSya1");

                    b.ToTable("TKD_SchYotKSya");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSchYotei", b =>
                {
                    b.Property<int>("YoteiSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AllDayKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GaiKkKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KinKyuCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("KinKyuTblCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("KuriEndYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("KuriKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("KuriReg")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("KuriRule")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShoRejBiko")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("ShoSyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("ShoUpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("ShoUpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyainCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TukiLabKbn")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("YoteiBiko")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("YoteiEtime")
                        .IsRequired()
                        .HasColumnName("YoteiETime")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("YoteiEymd")
                        .IsRequired()
                        .HasColumnName("YoteiEYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YoteiShoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("YoteiStime")
                        .IsRequired()
                        .HasColumnName("YoteiSTime")
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("YoteiSymd")
                        .IsRequired()
                        .HasColumnName("YoteiSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YoteiType")
                        .HasColumnType("int");

                    b.HasKey("YoteiSeq")
                        .HasName("TKD_SchYotei1");

                    b.ToTable("TKD_SchYotei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSeiMei", b =>
                {
                    b.Property<int>("SeiOutSeq")
                        .HasColumnType("int")
                        .HasComment("請求書出力ＳＥＱ");

                    b.Property<short>("SeiRen")
                        .HasColumnType("smallint")
                        .HasComment("請求書連番");

                    b.Property<short>("SeiMeiRen")
                        .HasColumnType("smallint")
                        .HasComment("請求書明細連番");

                    b.Property<short>("MisyuRen")
                        .HasColumnType("smallint")
                        .HasComment("未収明細連番");

                    b.Property<decimal>("NyuKinRui")
                        .HasColumnType("numeric(9, 0)")
                        .HasComment("入金累計");

                    b.Property<int>("SeiKin")
                        .HasColumnType("int")
                        .HasComment("請求額");

                    b.Property<byte>("SeiSaHkbn")
                        .HasColumnName("SeiSaHKbn")
                        .HasColumnType("tinyint")
                        .HasComment("請求書再発行区分");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint")
                        .HasComment("使用区分");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int")
                        .HasComment("消費税額");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int")
                        .HasComment("手数料額");

                    b.Property<string>("UkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasComment("受付番号")
                        .HasMaxLength(15);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UriGakKin")
                        .HasColumnType("int")
                        .HasComment("売上額");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)")
                        .HasComment("消費税率");

                    b.HasKey("SeiOutSeq", "SeiRen", "SeiMeiRen")
                        .HasName("TKD_SeiMei1");

                    b.ToTable("TKD_SeiMei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSeiPrS", b =>
                {
                    b.Property<int>("SeiOutSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EndSeiCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("EndSeiSitCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("EndUkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<byte>("EndYoyaKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("InTanCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("Jyus1")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Jyus2")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<byte>("PrnCpys")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PrnCpysTan")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiEigCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeiFutCanKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutFutKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutGuiKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutTehKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutTukKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiFutUncKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiGenFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeiHatYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SeiOutSyKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeiOutTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("SeiSitKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeikYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<byte>("SimeD")
                        .HasColumnType("tinyint");

                    b.Property<string>("SitenNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("StaSeiCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("StaSeiSitCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("StaUkeNo")
                        .IsRequired()
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<byte>("StaYoyaKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TesPrnKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("TokuiNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ZipCd")
                        .IsRequired()
                        .HasColumnType("char(12)")
                        .IsFixedLength(true)
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("SeiOutSeq");

                    b.ToTable("TKD_SeiPrS");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSeiUch", b =>
                {
                    b.Property<int>("SeiOutSeq")
                        .HasColumnType("int");

                    b.Property<short>("SeiRen")
                        .HasColumnType("smallint");

                    b.Property<short>("SeiMeiRen")
                        .HasColumnType("smallint");

                    b.Property<short>("SeiUchRen")
                        .HasColumnType("smallint");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HaiSymd")
                        .IsRequired()
                        .HasColumnName("HaiSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<string>("SyaSyuNm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(12)")
                        .HasDefaultValueSql("(' ')")
                        .HasMaxLength(12);

                    b.Property<int>("TanKa")
                        .HasColumnType("int");

                    b.Property<string>("TouYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("YoyaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SeiOutSeq", "SeiRen", "SeiMeiRen", "SeiUchRen")
                        .HasName("TKD_SeiUch1");

                    b.ToTable("TKD_SeiUch");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdSeikyu", b =>
                {
                    b.Property<int>("SeiOutSeq")
                        .HasColumnType("int");

                    b.Property<short>("SeiRen")
                        .HasColumnType("smallint");

                    b.Property<int>("KonNyuG")
                        .HasColumnType("int");

                    b.Property<int>("KonSeiG")
                        .HasColumnType("int");

                    b.Property<int>("KonSyoG")
                        .HasColumnType("int");

                    b.Property<int>("KonTesG")
                        .HasColumnType("int");

                    b.Property<int>("KonUriG")
                        .HasColumnType("int");

                    b.Property<string>("SeikYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("SitenCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("SiyoEndYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("TokuiSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("ZenKurG")
                        .HasColumnType("int");

                    b.HasKey("SeiOutSeq", "SeiRen")
                        .HasName("TKD_Seikyu1");

                    b.ToTable("TKD_Seikyu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdShabni", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("UnkYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<decimal>("EndMeter")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("JisTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('0000')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("JisaIpkm")
                        .HasColumnName("JisaIPKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("JisaKskm")
                        .HasColumnName("JisaKSKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<short>("JyoSyaJin")
                        .HasColumnType("smallint");

                    b.Property<string>("KikTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('0000')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("KisoIpkm")
                        .HasColumnName("KisoIPkm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<decimal>("KisoKokm")
                        .HasColumnName("KisoKOKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("KoskuTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('0000')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<decimal>("Nenryo1")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<decimal>("Nenryo2")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<decimal>("Nenryo3")
                        .HasColumnType("numeric(5, 2)");

                    b.Property<int>("NenryoCd1Seq")
                        .HasColumnType("int");

                    b.Property<int>("NenryoCd2Seq")
                        .HasColumnType("int");

                    b.Property<int>("NenryoCd3Seq")
                        .HasColumnType("int");

                    b.Property<int>("NenryoDai")
                        .HasColumnType("int");

                    b.Property<decimal>("OthKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<short>("PlusJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("StMeter")
                        .HasColumnType("numeric(9, 2)");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<string>("SyuKoTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('0000')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('0000')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(4)")
                        .HasDefaultValueSql("('0000')")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("UnkKai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "UnkYmd")
                        .HasName("PK_TKD_Shabni_1");

                    b.ToTable("TKD_Shabni");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdShuYmd", b =>
                {
                    b.Property<int>("ShuriTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("ShuriYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("ShuriEtime")
                        .IsRequired()
                        .HasColumnName("ShuriETime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ShuriStime")
                        .IsRequired()
                        .HasColumnName("ShuriSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("ShuriTblSeq", "ShuriYmd")
                        .HasName("TKD_ShuYmd1");

                    b.ToTable("TKD_ShuYmd");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdShuri", b =>
                {
                    b.Property<int>("ShuriTblSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("ShuriCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("ShuriEtime")
                        .IsRequired()
                        .HasColumnName("ShuriETime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ShuriEymd")
                        .IsRequired()
                        .HasColumnName("ShuriEYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("ShuriStime")
                        .IsRequired()
                        .HasColumnName("ShuriSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ShuriSymd")
                        .IsRequired()
                        .HasColumnName("ShuriSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("ShuriTblSeq")
                        .HasName("TKD_Shuri1");

                    b.ToTable("TKD_Shuri");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdTehai", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TehRen")
                        .HasColumnType("smallint");

                    b.Property<string>("BikoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TehFax")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("TehJyus1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TehJyus2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TehMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TehNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TehTan")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TehTel")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<int>("TehaiCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("TeiDanNittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("TeiDanTomKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "TeiDanNo", "BunkRen", "TehRen")
                        .HasName("TKD_Tehai1")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Tehai");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdTokuYm", b =>
                {
                    b.Property<int>("TokuiSeq")
                        .HasColumnType("int");

                    b.Property<int>("SitenCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("EigyoCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("SeikYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("TokuiSeq", "SitenCdSeq", "EigyoCdSeq")
                        .HasName("TKD_TokuYm1");

                    b.ToTable("TKD_TokuYm");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdUnkobi", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("AreaMapSeq")
                        .HasColumnType("int");

                    b.Property<string>("AreaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BikoNm")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("DanTaKana")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DanTaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DispKikTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("表示帰庫時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("DispKikYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("表示帰庫日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("DispTouChTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("表示到着時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("DispTouYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("表示到着年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("DrvJin")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiSu")
                        .HasColumnType("smallint");

                    b.Property<short>("GuiWnin")
                        .HasColumnName("GuiWNin")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiIkbn")
                        .HasColumnName("HaiIKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaiSbinCdSeq")
                        .HasColumnName("HaiSBinCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("HaiScdSeq")
                        .HasColumnName("HaiSCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSjyus1")
                        .IsRequired()
                        .HasColumnName("HaiSJyus1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("HaiSjyus2")
                        .IsRequired()
                        .HasColumnName("HaiSJyus2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("HaiSkbn")
                        .HasColumnName("HaiSKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("HaiSkouKcdSeq")
                        .HasColumnName("HaiSKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HaiSnm")
                        .IsRequired()
                        .HasColumnName("HaiSNm")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HaiSsetTime")
                        .IsRequired()
                        .HasColumnName("HaiSSetTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("HaiStime")
                        .IsRequired()
                        .HasColumnName("HaiSTime")
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("HaiSymd")
                        .IsRequired()
                        .HasColumnName("HaiSYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("HasMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HasNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("IkMapCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("IkNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("JyoKyakuCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("JyoSyaJin")
                        .HasColumnType("smallint");

                    b.Property<byte>("KanDmhflg")
                        .HasColumnName("KanDMHFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("KanJnm")
                        .IsRequired()
                        .HasColumnName("KanJNm")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("KanjFax")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("KanjJyus1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("KanjJyus2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("KanjKeiNo")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("KanjMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KanjTel")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<byte>("KhakFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("KhinKbn")
                        .HasColumnName("KHinKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("KikTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("帰庫時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("KikYmd")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("帰庫日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("Kskbn")
                        .HasColumnName("KSKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NippoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("OthJin1")
                        .HasColumnType("smallint");

                    b.Property<short>("OthJin2")
                        .HasColumnType("smallint");

                    b.Property<byte>("OthJinKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("OthJinKbn2")
                        .HasColumnType("tinyint");

                    b.Property<short>("PlusJin")
                        .HasColumnType("smallint");

                    b.Property<int>("RotCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SijJoKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SijJoKbn5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyuKoTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SyuPaTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("TouBinCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("TouCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouChTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasComment("到着時間")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouJyusyo1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TouJyusyo2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TouKouKcdSeq")
                        .HasColumnName("TouKouKCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("TouNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TouSetTime")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .IsFixedLength(true)
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("TouYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("到着年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("UkeJyKbnCd")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UnkoJkbn")
                        .HasColumnName("UnkoJKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("UriYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ZenHaFlg")
                        .HasColumnType("tinyint");

                    b.HasKey("UkeNo", "UnkRen")
                        .HasName("TKD_Unkobi2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Unkobi");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdUnkobiExp", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("HaiSbinNm")
                        .IsRequired()
                        .HasColumnName("HaiSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaiSkouKnm")
                        .IsRequired()
                        .HasColumnName("HaiSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSbinNm")
                        .IsRequired()
                        .HasColumnName("TouSBinNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TouSkouKnm")
                        .IsRequired()
                        .HasColumnName("TouSKouKNm")
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen")
                        .HasName("TKD_UnkobiExp1");

                    b.ToTable("TKD_UnkobiExp");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYfutTu", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("YouFutTumRen")
                        .HasColumnType("smallint");

                    b.Property<string>("DeRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("DeRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("DeRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("FutTumCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("FutTumNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("HaseiKin")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<string>("IriRyoCd")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<byte>("IriRyoChiCd")
                        .HasColumnType("tinyint");

                    b.Property<string>("IriRyoNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScouKbn")
                        .HasColumnName("SCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeisanCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SeisanKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SeisanNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("SihKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("TanKa")
                        .HasColumnType("int");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<byte>("TomKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("UkeNo", "UnkRen", "YouTblSeq", "FutTumKbn", "YouFutTumRen")
                        .HasName("TKD_YFutTu2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_YFutTu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYmfuTu", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<byte>("FutTumKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("YouFutTumRen")
                        .HasColumnType("smallint");

                    b.Property<short>("TeiDanNo")
                        .HasColumnType("smallint");

                    b.Property<short>("BunkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("HaseiKin")
                        .HasColumnType("int");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("Suryo")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "YouTblSeq", "FutTumKbn", "YouFutTumRen", "TeiDanNo", "BunkRen")
                        .HasName("TKD_YMFuTu2")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_YMFuTu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYouSyu", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuDai")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaSyuTan")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKataKbn")
                        .HasColumnType("tinyint");

                    b.HasKey("UkeNo", "UnkRen", "YouTblSeq", "SyaSyuRen");

                    b.ToTable("TKD_YouSyu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYousha", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<int>("YouTblSeq")
                        .HasColumnType("int");

                    b.Property<int>("CompanyCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("HasYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("JitaFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ScouKbn")
                        .HasColumnName("SCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SihKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("SihYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("SihYotYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoSyo")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoTes")
                        .HasColumnType("int");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("YouCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("YouSitCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("UkeNo", "UnkRen", "YouTblSeq")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("TKD_Yousha");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYykReport", b =>
                {
                    b.Property<int>("UkeNo")
                        .HasColumnType("int")
                        .HasComment("受付番号");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint")
                        .HasComment("車種連番");

                    b.Property<string>("AdjustTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("調整時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("AllSokoKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("総走行キロ");

                    b.Property<string>("AllSokoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("総走行時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("ChangeFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChangeKoskTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeShinTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("ChangeSokoKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("CheckTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("点検時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<decimal>("JiSaKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車キロ");

                    b.Property<string>("JiSaTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("実車時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ShinSoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("深夜早朝時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("SpecialFlg")
                        .HasColumnType("tinyint")
                        .HasComment("特殊車両料金フラグ");

                    b.Property<int?>("UnsoSyasyuRyokin")
                        .HasColumnType("int");

                    b.Property<int?>("UnsoSyasyuUnt")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("WaribikiKbn")
                        .HasColumnType("tinyint")
                        .HasComment("割引区分");

                    b.HasKey("UkeNo", "UnkRen", "SyaSyuRen");

                    b.ToTable("TKD_YykReport");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYykReportMei", b =>
                {
                    b.Property<int>("UkeNo")
                        .HasColumnType("int")
                        .HasComment("受付番号");

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint")
                        .HasComment("運行日連番");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint")
                        .HasComment("車種連番");

                    b.Property<short>("Nittei")
                        .HasColumnType("smallint")
                        .HasComment("日程");

                    b.Property<string>("AdjustTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("調整時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("AllSokoKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("総走行キロ");

                    b.Property<string>("AllSokoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("総走行時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("ChangeFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("ChangeKoskTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ChangeShinTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal>("ChangeSokoKm")
                        .HasColumnType("numeric(7, 2)");

                    b.Property<string>("CheckTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("点検時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint")
                        .HasComment("変更回数");

                    b.Property<decimal>("JiSaKm")
                        .HasColumnType("numeric(7, 2)")
                        .HasComment("実車キロ");

                    b.Property<string>("JiSaTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("実車時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ShinSoTime")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasComment("深夜早朝時間")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("SpecialFlg")
                        .HasColumnType("tinyint")
                        .HasComment("特殊車両料金フラグ");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasComment("最終更新プログラムＩＤ")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int")
                        .HasComment("最終更新社員コードＳＥＱ");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasComment("最終更新時間")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasComment("最終更新年月日")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("WaribikiKbn")
                        .HasColumnType("tinyint")
                        .HasComment("割引区分");

                    b.HasKey("UkeNo", "UnkRen", "SyaSyuRen", "Nittei");

                    b.ToTable("TKD_YykReportMei");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYykSyu", b =>
                {
                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<short>("UnkRen")
                        .HasColumnType("smallint");

                    b.Property<short>("SyaSyuRen")
                        .HasColumnType("smallint");

                    b.Property<byte>("DriverNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((1))")
                        .HasComment("運転手人数");

                    b.Property<byte>("GuiderNum")
                        .HasColumnType("tinyint")
                        .HasComment("ガイド人数");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<byte>("KataKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SyaRyoUnc")
                        .HasColumnType("int")
                        .HasComment("運賃（バス代）");

                    b.Property<int>("SyaSyuCdSeq")
                        .HasColumnType("int");

                    b.Property<short>("SyaSyuDai")
                        .HasColumnType("smallint");

                    b.Property<int>("SyaSyuTan")
                        .HasColumnType("int");

                    b.Property<int>("UnitBusFee")
                        .HasColumnType("int")
                        .HasComment("料金単価");

                    b.Property<int>("UnitBusPrice")
                        .HasColumnType("int")
                        .HasComment("運賃単価");

                    b.Property<int>("UnitGuiderFee")
                        .HasColumnType("int")
                        .HasComment("ガイド料金");

                    b.Property<int>("UnitGuiderPrice")
                        .HasColumnType("int")
                        .HasComment("ガイド単価");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("UkeNo", "UnkRen", "SyaSyuRen");

                    b.HasIndex("SiyoKbn", "UkeNo", "UnkRen", "SyaSyuRen", "HenKai")
                        .HasName("TKD_YykSyu1");

                    b.HasIndex("SyaSyuDai", "SyaSyuTan", "SyaRyoUnc", "SiyoKbn", "UkeNo", "UnkRen")
                        .HasName("TKD_YykSyu_SyaSyuDai");

                    b.ToTable("TKD_YykSyu");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkdYyksho", b =>
                {
                    b.Property<int>("TenantCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UkeNo")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasComment("受付番号：[テナント3桁数][受付コード7桁数]")
                        .HasMaxLength(15);

                    b.Property<int>("BikoTblSeq")
                        .HasColumnType("int");

                    b.Property<string>("CanFuRiy")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CanFuTanSeq")
                        .HasColumnType("int");

                    b.Property<string>("CanFuYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<decimal>("CanRit")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<string>("CanRiy")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CanSyoG")
                        .HasColumnType("int");

                    b.Property<decimal>("CanSyoR")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<int>("CanTanSeq")
                        .HasColumnType("int");

                    b.Property<int>("CanUnc")
                        .HasColumnType("int");

                    b.Property<string>("CanYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("CanZkbn")
                        .HasColumnName("CanZKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("EigTanCdSeq")
                        .HasColumnType("int");

                    b.Property<decimal>("FeeGuider")
                        .HasColumnType("numeric(18, 0)")
                        .HasComment("手数料税");

                    b.Property<decimal>("FeeGuiderRate")
                        .HasColumnType("numeric(3, 1)")
                        .HasComment("手数料率（ガイド用）");

                    b.Property<short>("GuiWnin")
                        .HasColumnName("GuiWNin")
                        .HasColumnType("smallint");

                    b.Property<byte>("HaiIkbn")
                        .HasColumnName("HaiIKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HaiSkbn")
                        .HasColumnName("HaiSKbn")
                        .HasColumnType("tinyint");

                    b.Property<short>("HenKai")
                        .HasColumnType("smallint");

                    b.Property<int>("InTanCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("IraEigCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("KaknKais")
                        .HasColumnType("tinyint");

                    b.Property<string>("KaktYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("KasTourCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("KhinKbn")
                        .HasColumnName("KHinKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("KikakuNo")
                        .HasColumnType("int");

                    b.Property<byte>("Kskbn")
                        .HasColumnName("KSKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NcouKbn")
                        .HasColumnName("NCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NippoKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NyuKinKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ScouKbn")
                        .HasColumnName("SCouKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SeiEigCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SeiKyuKbnSeq")
                        .HasColumnType("int");

                    b.Property<string>("SeiTaiYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("SeikYm")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<byte>("SihKbn")
                        .HasColumnType("tinyint");

                    b.Property<int>("SirCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SirSitenCdSeq")
                        .HasColumnType("int");

                    b.Property<int>("SitenCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("SiyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("TaxGuider")
                        .HasColumnType("numeric(18, 0)")
                        .HasComment("ガイド税");

                    b.Property<byte>("TaxTypeforGuider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((3))")
                        .HasComment("消費税タイプ（ガイド用）");

                    b.Property<decimal>("TesuRitu")
                        .HasColumnType("numeric(3, 1)");

                    b.Property<decimal>("TesuRyoG")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("TokuiFax")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("TokuiMail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TokuiSeq")
                        .HasColumnType("int");

                    b.Property<string>("TokuiTanNm")
                        .IsRequired()
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("TokuiTel")
                        .IsRequired()
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("TourCd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("UkeCd")
                        .HasColumnType("int")
                        .HasComment("受付コード");

                    b.Property<int>("UkeEigCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UkeYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<decimal>("UntKin")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("YouKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("YoyaKana")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("YoyaKbnSeq")
                        .HasColumnType("int");

                    b.Property<string>("YoyaNm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("YoyaSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ZeiRui")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("Zeiritsu")
                        .HasColumnType("numeric(3, 1)");

                    b.HasKey("TenantCdSeq", "UkeNo")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("SiyoKbn", "UkeNo")
                        .HasName("TKD_Yyksho1")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("TKD_Yyksho");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkmJisKin", b =>
                {
                    b.Property<int>("CompanyCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("JisKinKyuCd")
                        .HasColumnType("tinyint");

                    b.Property<int>("KinKyuCdSeq")
                        .HasColumnType("int");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .HasColumnType("int");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .HasColumnType("char(6)")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("CompanyCdSeq", "JisKinKyuCd", "KinKyuCdSeq")
                        .HasName("TKM_JisKin1");

                    b.ToTable("TKM_JisKin");
                });

            modelBuilder.Entity("HassyaAllrightCloud.Domain.Entities.TkmKasSet", b =>
                {
                    b.Property<int>("CompanyCdSeq")
                        .HasColumnType("int");

                    b.Property<byte>("AutKarJyun")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AutKouKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanEkan1")
                        .HasColumnName("CanEKan1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanEkan2")
                        .HasColumnName("CanEKan2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanEkan3")
                        .HasColumnName("CanEKan3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanEkan4")
                        .HasColumnName("CanEKan4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanEkan5")
                        .HasColumnName("CanEKan5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanEkan6")
                        .HasColumnName("CanEKan6")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanJidoKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanKikan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanMdkbn")
                        .HasColumnName("CanMDKbn")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("CanRit1")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<decimal>("CanRit2")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<decimal>("CanRit3")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<decimal>("CanRit4")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<decimal>("CanRit5")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<decimal>("CanRit6")
                        .HasColumnType("numeric(4, 1)");

                    b.Property<byte>("CanSkan1")
                        .HasColumnName("CanSKan1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanSkan2")
                        .HasColumnName("CanSKan2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanSkan3")
                        .HasColumnName("CanSKan3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanSkan4")
                        .HasColumnName("CanSKan4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanSkan5")
                        .HasColumnName("CanSKan5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanSkan6")
                        .HasColumnName("CanSKan6")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CanWaitKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("ColHai")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColHaiin")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcHai")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcHaiin")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcKari")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcKariH")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcNcou")
                        .IsRequired()
                        .HasColumnName("ColIcNCou")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcNip")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcNyu")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcScou")
                        .IsRequired()
                        .HasColumnName("ColIcSCou")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcShiha")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcWari")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColIcYou")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColKahar")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColKaku")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColKanyu")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColKari")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColKariH")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColKyoy")
                        .IsRequired()
                        .HasColumnName("ColKYoy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColMiKari")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColNcou")
                        .IsRequired()
                        .HasColumnName("ColNCou")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColNin")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColNip")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColNyu")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColScou")
                        .IsRequired()
                        .HasColumnName("ColSCou")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColSelect")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColShiha")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColWari")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ColYou")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("DaySyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DrvAutoSet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("EtckinKbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ETCKinKbn")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ExpItem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(255);

                    b.Property<byte>("FutSf1flg")
                        .HasColumnName("FutSF1Flg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FutSf2flg")
                        .HasColumnName("FutSF2Flg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FutSf3flg")
                        .HasColumnName("FutSF3Flg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FutSf4flg")
                        .HasColumnName("FutSF4Flg")
                        .HasColumnType("tinyint");

                    b.Property<int>("FutTumCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("FutaiCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GetSyoKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GoSyaAutoSet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("GuiAutoSet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("GuideFutTumCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("HouOutKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HouZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoukoKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("JisKinKyuNm01")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm02")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm03")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm04")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm05")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm06")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm07")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm08")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm09")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JisKinKyuNm10")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("JkariKbn")
                        .HasColumnName("JKariKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JkbunPat")
                        .HasColumnName("JKBunPat")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JoshaCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JymAchkKbn")
                        .HasColumnName("JymAChkKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("JyoSenInfoPtnCol1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol10")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol11")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol12")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol13")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol14")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol15")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol4")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol5")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol6")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol7")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol8")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenInfoPtnCol9")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<byte>("JyoSenInfoPtnKbn1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("JyoSenInfoPtnKbn9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("JyoSenMjPtnCol1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenMjPtnCol2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenMjPtnCol3")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenMjPtnCol4")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("JyoSenMjPtnCol5")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("JyoSenMjPtnKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JyoSenMjPtnKbn2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JyoSenMjPtnKbn3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JyoSenMjPtnKbn4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JyoSenMjPtnKbn5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("JyoSyaChkSiyoKbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("KarSyuKiTimeSiyoKbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("KoteiCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("KouYouSet")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MeiShyKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("QuotationTransfer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SeiCom1")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("SeiCom2")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("SeiCom3")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("SeiCom4")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("SeiCom5")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("SeiCom6")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<byte>("SeiGenFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiKrksKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SeiMuki")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("SeisanCdSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SenBackPtnCol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<byte>("SenBackPtnKbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SenDayRenge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<short>("SenDefWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SenHyoHi")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SenMikDefFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("SenObptnCol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SenOBPtnCol")
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<byte>("SenObptnKbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SenOBPtnKbn")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SenYouDefFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SokoJunKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SryHyjHga")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SryHyjSyu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SryHyjTch")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SryHyjTde")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SryHyjTka")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyaIrePat")
                        .HasColumnType("tinyint");

                    b.Property<string>("SyaSenInfoPtnCol1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol10")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol11")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol12")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol13")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol14")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol15")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol4")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol5")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol6")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol7")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol8")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenInfoPtnCol9")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<byte>("SyaSenInfoPtnKbn1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("SyaSenInfoPtnKbn9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SyaSenMjPtnCol1")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenMjPtnCol2")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenMjPtnCol3")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenMjPtnCol4")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SyaSenMjPtnCol5")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte>("SyaSenMjPtnKbn1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyaSenMjPtnKbn2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyaSenMjPtnKbn3")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyaSenMjPtnKbn4")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyaSenMjPtnKbn5")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyaUntKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SyohiHasu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TehaiAutoSet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("TehaiCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TesuHasu")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TumZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TumiCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UkbCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UntZeiKbn")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdPrgId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UpdPrgID")
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("UpdSyainCd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UpdTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(6)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("UpdYmd")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(8)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<byte>("UriHenKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UriHenKikan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UriKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UriMdkbn")
                        .HasColumnName("UriMDKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UriZeroChk")
                        .HasColumnType("tinyint");

                    b.Property<byte>("YouSagaKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("YouTesuKbn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("YoySyuKiTimeSiyoKbn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("('')");

                    b.Property<byte>("YykCopyFlg")
                        .HasColumnType("tinyint");

                    b.Property<string>("YykHaiStime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("YykHaiSTime")
                        .HasColumnType("nvarchar(4)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(4);

                    b.Property<string>("YykTouTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(4)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(4);

                    b.Property<byte>("ZasyuKbn")
                        .HasColumnType("tinyint");

                    b.HasKey("CompanyCdSeq")
                        .HasName("TKM_KasSet1");

                    b.ToTable("TKM_KasSet");
                });
#pragma warning restore 612, 618
        }
    }
}
