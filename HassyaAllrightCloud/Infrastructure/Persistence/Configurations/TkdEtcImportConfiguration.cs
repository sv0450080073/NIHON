// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using HassyaAllrightCloud.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace HassyaAllrightCloud.Infrastructure.Persistence
{
    public class TkdEtcImportConfiguration : IEntityTypeConfiguration<TkdEtcImport>
    {
        public void Configure(EntityTypeBuilder<TkdEtcImport> entity)
        {
            entity.HasKey(e => new { e.FileName, e.CardNo, e.EtcRen, e.TenantCdSeq })
                .HasName("TKD_EtcImport1");

            entity.ToTable("TKD_EtcImport");

            entity.HasComment("ETCデータ取込テーブル");

            entity.Property(e => e.FileName)
                .HasMaxLength(100)
                .HasComment("ファイル名");

            entity.Property(e => e.CardNo)
                .HasMaxLength(19)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("カード番号");

            entity.Property(e => e.EtcRen).HasComment("ＥＴＣ明細連番");

            entity.Property(e => e.BikoNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("備考");

            entity.Property(e => e.BunkRen).HasComment("分割連番");

            entity.Property(e => e.DeRyoCd)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("出料金所コード");

            entity.Property(e => e.DeRyoChiCd).HasComment("出料金所地区コード");

            entity.Property(e => e.ExpItem)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("拡張項目");

            entity.Property(e => e.FutTumCdSeq).HasComment("付帯積込品コードＳＥＱ");

            entity.Property(e => e.FutTumNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("付帯積込品名");

            entity.Property(e => e.HenKai).HasComment("変更回数");

            entity.Property(e => e.ImportTanka).HasComment("取込単価");

            entity.Property(e => e.IriRyoCd)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("入料金所コード");

            entity.Property(e => e.IriRyoChiCd).HasComment("入料金所地区コード");

            entity.Property(e => e.SeisanCdSeq).HasComment("精算コードＳＥＱ");

            entity.Property(e => e.SeisanKbn).HasComment("精算区分");

            entity.Property(e => e.SeisanNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("精算名");

            entity.Property(e => e.SiyoKbn).HasComment("使用区分");

            entity.Property(e => e.Suryo).HasComment("数量");

            entity.Property(e => e.SyaRyoCd).HasComment("車輌コード");

            entity.Property(e => e.SyaRyoTes).HasComment("手数料額");

            entity.Property(e => e.TanKa).HasComment("単価");

            entity.Property(e => e.TeiDanNo).HasComment("悌団番号");

            entity.Property(e => e.TensoKbn).HasComment("転送区分");

            entity.Property(e => e.TesuRitu)
                .HasColumnType("numeric(3, 1)")
                .HasComment("手数料率");

            entity.Property(e => e.UkeNo)
                .IsRequired()
                .HasMaxLength(15)
                .IsFixedLength()
                .HasComment("受付番号");

            entity.Property(e => e.UnkRen).HasComment("運行日連番");

            entity.Property(e => e.UnkTime)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("運行時間");

            entity.Property(e => e.UnkYmd)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("運行年月日");

            entity.Property(e => e.UpdPrgId)
                .IsRequired()
                .HasColumnName("UpdPrgID")
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新プログラムＩＤ");

            entity.Property(e => e.UpdSyainCd).HasComment("最終更新社員コードＳＥＱ");

            entity.Property(e => e.UpdTime)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新時間");

            entity.Property(e => e.UpdYmd)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新年月日");
        }
    }
}
