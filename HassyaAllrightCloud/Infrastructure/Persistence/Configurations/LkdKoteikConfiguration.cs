// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using HassyaAllrightCloud.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace HassyaAllrightCloud.Infrastructure.Persistence
{
    public class LkdKoteikConfiguration : IEntityTypeConfiguration<LkdKoteik>
    {
        public void Configure(EntityTypeBuilder<LkdKoteik> entity)
        {
            entity.HasKey(e => e.LogSeq)
                .HasName("LKD_Koteik1");

            entity.ToTable("LKD_Koteik");

            entity.Property(e => e.LogSeq).HasComment("ログＳＥＱ");

            entity.Property(e => e.BikoNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("備考");

            entity.Property(e => e.BunkRen).HasComment("分割連番");

            entity.Property(e => e.HaiStime)
                .IsRequired()
                .HasColumnName("HaiSTime")
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("配車時間");

            entity.Property(e => e.HenKai).HasComment("変更回数");

            entity.Property(e => e.HenKeyItm)
                .IsRequired()
                .HasMaxLength(4000)
                .HasComment("変更前キー項目");

            entity.Property(e => e.JisaIpkm)
                .HasColumnName("JisaIPKm")
                .HasColumnType("numeric(7, 2)")
                .HasComment("実車一般キロ");

            entity.Property(e => e.JisaKskm)
                .HasColumnName("JisaKSKm")
                .HasColumnType("numeric(7, 2)")
                .HasComment("実車高速キロ");

            entity.Property(e => e.KeiyuMapCdSeq).HasComment("経由地マップコードＳＥＱ");

            entity.Property(e => e.KeiyuNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("経由地名");

            entity.Property(e => e.KikEigSeq).HasComment("帰庫営業所コードＳＥＱ");

            entity.Property(e => e.KikoNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("帰庫地名");

            entity.Property(e => e.KisoIpkm)
                .HasColumnName("KisoIPkm")
                .HasColumnType("numeric(7, 2)")
                .HasComment("回送一般キロ");

            entity.Property(e => e.KisoKokm)
                .HasColumnName("KisoKOKm")
                .HasColumnType("numeric(7, 2)")
                .HasComment("回送高速キロ");

            entity.Property(e => e.KyuKendTime)
                .IsRequired()
                .HasColumnName("KyuKEndTime")
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("休憩終了時間");

            entity.Property(e => e.KyuKmapCdSeq)
                .HasColumnName("KyuKMapCdSeq")
                .HasComment("休憩地マップコードＳＥＱ");

            entity.Property(e => e.KyuKnm)
                .IsRequired()
                .HasColumnName("KyuKNm")
                .HasMaxLength(50)
                .HasComment("休憩地名");

            entity.Property(e => e.KyuKstaTime)
                .IsRequired()
                .HasColumnName("KyuKStaTime")
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("休憩開始時間");

            entity.Property(e => e.KyuKtime)
                .IsRequired()
                .HasColumnName("KyuKTime")
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("休憩時間");

            entity.Property(e => e.LogShKbn).HasComment("ログ処理区分");

            entity.Property(e => e.Nittei).HasComment("日程");

            entity.Property(e => e.ShakuMapCdSeq)
                .HasColumnName("SHakuMapCdSeq")
                .HasComment("宿泊地マップコードＳＥＱ");

            entity.Property(e => e.ShakuNm)
                .IsRequired()
                .HasColumnName("SHakuNm")
                .HasMaxLength(50)
                .HasComment("宿泊地名");

            entity.Property(e => e.SiyoKbn).HasComment("使用区分");

            entity.Property(e => e.SyuEigCdSeq).HasComment("出庫営業所コードＳＥＱ");

            entity.Property(e => e.SyuPaCdSeq).HasComment("出発地コードＳＥＱ");

            entity.Property(e => e.SyuPaNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("出発地名");

            entity.Property(e => e.SyuPaTime)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("出発時間");

            entity.Property(e => e.SyukoNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("出庫地名");

            entity.Property(e => e.TaikTime)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("待機時間");

            entity.Property(e => e.TeiDanNittei).HasComment("悌団日程");

            entity.Property(e => e.TeiDanNo).HasComment("悌団番号");

            entity.Property(e => e.TeiDanTomKbn).HasComment("悌団泊区分");

            entity.Property(e => e.TomKbn).HasComment("泊区分");

            entity.Property(e => e.TouCdSeq).HasComment("到着地コードＳＥＱ");

            entity.Property(e => e.TouChTime)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("到着時間");

            entity.Property(e => e.TouNm)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("到着地名");

            entity.Property(e => e.UkeNo)
                .IsRequired()
                .HasMaxLength(15)
                .IsFixedLength()
                .HasComment("受付番号");

            entity.Property(e => e.UnkRen).HasComment("運行日連番");

            entity.Property(e => e.UpdPrgId)
                .IsRequired()
                .HasColumnName("UpdPrgID")
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新プログラムＩＤ");

            entity.Property(e => e.UpdSyainCd).HasComment("最終更新社員コードＳＥＱ");

            entity.Property(e => e.UpdTime)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新時間");

            entity.Property(e => e.UpdYmd)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新年月日");
        }
    }
}
