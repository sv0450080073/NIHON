// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using HassyaAllrightCloud.Domain.Entities;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace HassyaAllrightCloud.Infrastructure.Persistence
{
    public class LkdYykReportMeiConfiguration : IEntityTypeConfiguration<LkdYykReportMei>
    {
        public void Configure(EntityTypeBuilder<LkdYykReportMei> entity)
        {
            entity.HasKey(e => e.LogSeq)
                .HasName("LKD_YykReportMei1");

            entity.ToTable("LKD_YykReportMei");

            entity.Property(e => e.LogSeq).HasComment("ログＳＥＱ");

            entity.Property(e => e.AdjustTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("調整時間");

            entity.Property(e => e.AllSokoKm)
                .HasColumnType("numeric(7, 2)")
                .HasComment("総走行キロ");

            entity.Property(e => e.AllSokoTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("総走行時間");

            entity.Property(e => e.ChangeKoskTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();

            entity.Property(e => e.ChangeShinTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();

            entity.Property(e => e.ChangeSokoKm).HasColumnType("numeric(7, 2)");

            entity.Property(e => e.CheckTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("点検時間");

            entity.Property(e => e.HenKai).HasComment("変更回数");

            entity.Property(e => e.HenKeyItm)
                .IsRequired()
                .HasMaxLength(4000)
                .HasComment("変更前キー項目");

            entity.Property(e => e.JiSaKm)
                .HasColumnType("numeric(7, 2)")
                .HasComment("実車キロ");

            entity.Property(e => e.JiSaTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("実車時間");

            entity.Property(e => e.LogShKbn).HasComment("ログ処理区分");

            entity.Property(e => e.Nittei).HasComment("日程");

            entity.Property(e => e.ShinSoTime)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("深夜早朝時間");

            entity.Property(e => e.SpecialFlg).HasComment("特殊車両料金フラグ");

            entity.Property(e => e.SyaSyuRen).HasComment("車種連番");

            entity.Property(e => e.UkeNo).HasComment("受付番号");

            entity.Property(e => e.UnkRen).HasComment("運行日連番");

            entity.Property(e => e.UpdPrgId)
                .IsRequired()
                .HasColumnName("UpdPrgID")
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新プログラムＩＤ");

            entity.Property(e => e.UpdSyainCd).HasComment("最終更新社員コードＳＥＱ");

            entity.Property(e => e.UpdTime)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新時間");

            entity.Property(e => e.UpdYmd)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("最終更新年月日");

            entity.Property(e => e.WaribikiKbn).HasComment("割引区分");
        }
    }
}
