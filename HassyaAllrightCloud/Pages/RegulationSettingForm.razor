@using HassyaAllrightCloud.Domain.Dto.RegulationSetting
@inherits RegulationSettingFormBase
<DxPopup @bind-Visible="@ShowPopup" CssClass="modal-lg modal-dialog-centered custom-popup-kashikirisetting" Id="kasikirisetting-popup">
    <HeaderTemplate>
        <div class="custom-header bg-primary text-white w-100 d-flex" style="justify-content:space-between">
            <p class="ml-1 mt-1">
            @(IsCreate ? _lang["form_title_create"] : _lang["form_title_update"])
            </p>
            <a class="close-button oi oi-x text-white mr-1 mt-1" href="javascript:void(0);" aria-hidden="true" role="button" aria-label="Close popup" @onclick="(e) => CloseDialog()"></a>
        </div>
    </HeaderTemplate>
    <Content>
        <div class="form-layout">
            @if (formContext != null)
            {
                <EditForm Context="editContext" EditContext="@formContext">
                    <FluentValidator TValidator="RegulationSettingFormValidator" />
                    <div class="form-header">
                        <div class="p-3 border-black d-flex">
                            <label class="col-form-label-sm" for="compny" style="margin-top: 13px">@_lang["company_lbl"]</label>
                            <div class="col has-tooltip-error" style="margin-top: 13px">
                                <Tooltip ValueExpressions="@(() => model.Company)"
                                         Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                <DxComboBox SelectedItem="model.Company"
                                            SelectedItemExpression="@(() => model.Company)"
                                            Data="@companyList"
                                            AllowUserInput="false"
                                            ReadOnly="CompanyReadOnly"
                                            CssClass="cw-240 ml-2"
                                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                            NullText="@_lang["company_nulltext"]"
                                            TextFieldName="@nameof(CompanyListItem.DisplayName)"
                                            FilteringMode="DataGridFilteringMode.Contains"
                                            SelectedItemChanged="async item => await FormChanged(nameof(model.Company), item)" Id="compny"></DxComboBox>
                            </div>
                        </div>
                    </div>
                    <div class="form-body mt-2" style="min-width:1080px">
                        <DxTabs CssClass="kobo-tabs" ActiveTabIndexChanged="(e) => TriggerTabChange()">
                            <DxTabPage Text="@_lang["tab_1"]">
                                <div class="kobo-tab enterField">
                                    <div class="row">
                                        <div class="col-2 mb-auto">@_lang["EditFormMonthlyProcess"]</div>
                                        <div class="col-10">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="transfer-monthly" id="transfer-monthly"
                                                       disabled="@ReadOnly"
                                                       value="@(EditFormMonthlyProcess.TransferMonthly)"
                                                       checked="@(model.EditFormMonthlyProcess == EditFormMonthlyProcess.TransferMonthly)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormMonthlyProcess), e.Value)">
                                                <label class="k-radio-label ml-2" for="transfer-monthly">
                                                    @_lang["transfer_monthly"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="donot-transfer-monthly" id="donot-transfer-monthly" disabled="@ReadOnly"
                                                       value="@(EditFormMonthlyProcess.DonotTransferMonthly)"
                                                       checked="@(model.EditFormMonthlyProcess == EditFormMonthlyProcess.DonotTransferMonthly)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormMonthlyProcess), e.Value)">
                                                <label class="k-radio-label ml-2" for="donot-transfer-monthly">
                                                    @_lang["donot_transfer_monthly"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormBillForward"]</div>
                                        <div class="col-10">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="carry-forward" id="carry-forward" disabled="@ReadOnly"
                                                       value="@(EditFormBillForward.CarryForward)"
                                                       checked="@(model.EditFormBillForward == EditFormBillForward.CarryForward)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormBillForward), e.Value)">
                                                <label class="k-radio-label ml-2" for="carry-forward">
                                                    @_lang["carry_forward"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="donot-carry-forward" id="donot-carry-forward" disabled="@ReadOnly"
                                                       value="@(EditFormBillForward.DonotCarryForward)"
                                                       checked="@(model.EditFormBillForward == EditFormBillForward.DonotCarryForward)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormBillForward), e.Value)">
                                                <label class="k-radio-label ml-2" for="donot-carry-forward">
                                                    @_lang["donot_carry_forward"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormDailyProcess"]</div>
                                        <div class="col-10">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="process-daily" id="process-daily" disabled="@ReadOnly"
                                                       value="@(EditFormDailyProcess.ProcessDaily)"
                                                       checked="@(model.EditFormDailyProcess == EditFormDailyProcess.ProcessDaily)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormDailyProcess), e.Value)">
                                                <label class="k-radio-label ml-2" for="process-daily">
                                                    @_lang["process_daily"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="donot-process-daily" id="donot-process-daily" disabled="@ReadOnly"
                                                       value="@(EditFormDailyProcess.DonotProcessDaily)"
                                                       checked="@(model.EditFormDailyProcess == EditFormDailyProcess.DonotProcessDaily)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormDailyProcess), e.Value)">
                                                <label class="k-radio-label ml-2" for="donot-process-daily">
                                                    @_lang["donot_process_daily"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormLastUpdateStaff"]</div>
                                        <div class="col-5">
                                            <DxTextBox ReadOnly="true" CssClass="w-38"
                                                       Text="@model.EditFormLastUpdateStaffCode"
                                                       TextExpression="@(() => model.EditFormLastUpdateStaffCode)"></DxTextBox>
                                        </div>
                                        <div class="col-5">
                                            <DxTextBox ReadOnly="true"
                                                       Text="@model.EditFormLastUpdateStaffName"
                                                       TextExpression="@(() => model.EditFormLastUpdateStaffName)"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormLastUpdateDate"]</div>
                                        <div class="col-10">
                                            <DxTextBox ReadOnly="true"
                                                       Text="@model.EditFormLastUpdateDate"
                                                       TextExpression="@(() => model.EditFormLastUpdateDate)"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormLastUpdateTime"]</div>
                                        <div class="col-10">
                                            <DxTextBox ReadOnly="true"
                                                       Text="@model.EditFormLastUpdateTime"
                                                       TextExpression="@(() => model.EditFormLastUpdateTime)"></DxTextBox>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_2"]">
                                <div class="kobo-tab enterField">
                                    <div class="row">
                                        <div class="col-2 mb-auto">@_lang["EditFormSaleClassification"]</div>
                                        <div class="col-10">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="start1" id="start1" disabled="@ReadOnly"
                                                       value="@(EditFormSaleClassification.Start)"
                                                       checked="@(model.EditFormSaleClassification == EditFormSaleClassification.Start)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormSaleClassification), e.Value)">
                                                <label class="k-radio-label ml-2" for="start1">
                                                    @_lang["EditFormSaleClassification.Start"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="end" id="end" disabled="@ReadOnly"
                                                       value="@(EditFormSaleClassification.End)"
                                                       checked="@(model.EditFormSaleClassification == EditFormSaleClassification.End)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormSaleClassification), e.Value)">
                                                <label class="k-radio-label ml-2" for="end">
                                                    @_lang["EditFormSaleClassification.End"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["sale_change"]</div>
                                        <div class="col-10 d-flex">
                                            <div class="form-check form-check-inline mr-3">
                                                <input class="k-checkbox header-checkbox" type="checkbox" disabled="@ReadOnly"
                                                       checked="@model.EditFormSaleChange"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormSaleChange), e.Value)">
                                                <label class="k-radio-label ml-2" for="start">
                                                    @_lang["ticket_price_static"]
                                                </label>
                                            </div>
                                            <div class="mr-3">
                                                <DxTextBox TextChanged="async e => await FormChanged(nameof(model.EditFormSalesChangeablePeriod), e)"
                                                           Text="@model.EditFormSalesChangeablePeriod"
                                                           CssClass="length2"
                                                           ReadOnly="model.EditFormSaleChange || ReadOnly"
                                                           TextExpression="@(() => model.EditFormSalesChangeablePeriod)"></DxTextBox>
                                            </div>
                                            <div>
                                                <div class="form-check form-check-inline">
                                                    <input type="radio" class="k-radio" disabled="@model.EditFormSaleChange" name="day" id="day"
                                                           value="@(EditFormSalesChangeDateClassification.Day)"
                                                           checked="@(model.EditFormSalesChangeDateClassification == EditFormSalesChangeDateClassification.Day)"
                                                           @onchange="async e => await FormChanged(nameof(model.EditFormSalesChangeDateClassification), e.Value)">
                                                    <label class="k-radio-label ml-2" for="day">
                                                        @_lang["day"]
                                                    </label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input type="radio" class="k-radio" disabled="@model.EditFormSaleChange" name="month" id="month"
                                                           value="@(EditFormSalesChangeDateClassification.Month)"
                                                           checked="@(model.EditFormSalesChangeDateClassification == EditFormSalesChangeDateClassification.Month)"
                                                           @onchange="async e => await FormChanged(nameof(model.EditFormSalesChangeDateClassification), e.Value)">
                                                    <label class="k-radio-label ml-2" for="month">
                                                        @_lang["month"]
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["sale_0_yen_check"]</div>
                                        <div class="col-10 d-flex">
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="k-radio" name="donot-check" id="donot-check" disabled="@ReadOnly"
                                                       value="@(EditFormCheckZeroYen.DonotCheck)"
                                                       checked="@(model.EditFormCheckZeroYen == EditFormCheckZeroYen.DonotCheck)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormCheckZeroYen), e.Value)">
                                                <label class="k-radio-label ml-2" for="donot-check">
                                                    @_lang["donot_check"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="k-radio" name="cannot-change" id="cannot-change" disabled="@ReadOnly"
                                                       value="@(EditFormCheckZeroYen.CannotChange)"
                                                       checked="@(model.EditFormCheckZeroYen == EditFormCheckZeroYen.CannotChange)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormCheckZeroYen), e.Value)">
                                                <label class="k-radio-label ml-2" for="cannot-change">
                                                    @_lang["cannot_change"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="k-radio" name="msg-only" id="msg-only" disabled="@ReadOnly"
                                                       value="@(EditFormCheckZeroYen.MessageOnly)"
                                                       checked="@(model.EditFormCheckZeroYen == EditFormCheckZeroYen.MessageOnly)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormCheckZeroYen), e.Value)">
                                                <label class="k-radio-label ml-2" for="msg-only">
                                                    @_lang["msg_only"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["cancel_type"]</div>
                                        <div class="col-10 d-flex">
                                            <div class="form-check form-check-inline mr-3">
                                                <input class="k-checkbox header-checkbox" type="checkbox" disabled="@ReadOnly"
                                                       checked="@model.EditFormCancelClassification"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormCancelClassification), e.Value)">
                                                <label class="k-radio-label ml-2" for="start">
                                                    @_lang["cannot_cancel"]
                                                </label>
                                            </div>
                                            <div class="mr-3">
                                                <DxTextBox TextChanged="async e => await FormChanged(nameof(model.EditFormCancellationPeriod), e)"
                                                           Text="@model.EditFormCancellationPeriod"
                                                           CssClass="length2"
                                                           ReadOnly="model.EditFormCancelClassification"
                                                           TextExpression="@(() => model.EditFormCancellationPeriod)"></DxTextBox>
                                            </div>
                                            <div>
                                                <div class="form-check form-check-inline">
                                                    <input type="radio" class="k-radio" disabled="@model.EditFormCancelClassification" name="day2" id="day2"
                                                           value="@(EditFormSalesChangeDateClassification2.Day)"
                                                           checked="@(model.EditFormCancelDateClassification == EditFormSalesChangeDateClassification2.Day)"
                                                           @onchange="async e => await FormChanged(nameof(model.EditFormCancelDateClassification), e.Value)">
                                                    <label class="k-radio-label ml-2" for="day2">
                                                        @_lang["day"]
                                                    </label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input type="radio" class="k-radio" disabled="@model.EditFormCancelClassification" name="month2" id="month2"
                                                           value="@(EditFormSalesChangeDateClassification2.Month)"
                                                           checked="@(model.EditFormCancelDateClassification == EditFormSalesChangeDateClassification2.Month)"
                                                           @onchange="async e => await FormChanged(nameof(model.EditFormCancelDateClassification), e.Value)">
                                                    <label class="k-radio-label ml-2" for="month2">
                                                        @_lang["month"]
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["ticket_price_by_vehicle"]</div>
                                        <div class="col-10 d-flex">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="caculate-by-total" id="caculate-by-total" disabled="@ReadOnly"
                                                       value="@(EditFormFareByVehicle.CaculateByTotal)"
                                                       checked="@(model.EditFormFareByVehicle == EditFormFareByVehicle.CaculateByTotal)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormFareByVehicle), e.Value)">
                                                <label class="k-radio-label ml-2" for="caculate-by-total">
                                                    @_lang["caculate_by_total"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="caculate-by-bustype" id="caculate-by-bustype" disabled="@ReadOnly"
                                                       value="@(EditFormFareByVehicle.CaculateByBusType)"
                                                       checked="@(model.EditFormFareByVehicle == EditFormFareByVehicle.CaculateByBusType)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormFareByVehicle), e.Value)">
                                                <label class="k-radio-label ml-2" for="caculate-by-bustype">
                                                    @_lang["caculate_by_bus_type"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["consumption_tax"]</div>
                                        <div class="col-4 d-flex">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="cut" id="cut" disabled="@ReadOnly"
                                                       value="@(EditFormTaxFraction.Cut)"
                                                       checked="@(model.EditFormTaxFraction == EditFormTaxFraction.Cut)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormTaxFraction), e.Value)">
                                                <label class="k-radio-label ml-2" for="cut">
                                                    @_lang["cut"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="truncate" id="truncate" disabled="@ReadOnly"
                                                       value="@(EditFormTaxFraction.Truncate)"
                                                       checked="@(model.EditFormTaxFraction == EditFormTaxFraction.Truncate)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormTaxFraction), e.Value)">
                                                <label class="k-radio-label ml-2" for="truncate">
                                                    @_lang["truncate"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="round" id="round" disabled="@ReadOnly"
                                                       value="@(EditFormTaxFraction.Round)"
                                                       checked="@(model.EditFormTaxFraction == EditFormTaxFraction.Round)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormTaxFraction), e.Value)">
                                                <label class="k-radio-label ml-2" for="round">
                                                    @_lang["round"]
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-2 mb-auto">@_lang["fee_fraction"]</div>
                                        <div class="col-4 d-flex">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="fee-fraction-cut" id="fee-fraction-cut" disabled="@ReadOnly"
                                                       value="@(EditFormTaxFraction.Cut)"
                                                       checked="@(model.EditFormFeeFraction == EditFormTaxFraction.Cut)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormFeeFraction), e.Value)">
                                                <label class="k-radio-label ml-2" for="cut">
                                                    @_lang["cut"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="fee-fraction-truncate" id="fee-fraction-truncate" disabled="@ReadOnly"
                                                       value="@(EditFormTaxFraction.Truncate)"
                                                       checked="@(model.EditFormFeeFraction == EditFormTaxFraction.Truncate)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormFeeFraction), e.Value)">
                                                <label class="k-radio-label ml-2" for="fee-fraction-truncate">
                                                    @_lang["truncate"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="fee-fraction-round" id="fee-fraction-round" disabled="@ReadOnly"
                                                       value="@(EditFormTaxFraction.Round)"
                                                       checked="@(model.EditFormFeeFraction == EditFormTaxFraction.Round)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormFeeFraction), e.Value)">
                                                <label class="k-radio-label ml-2" for="fee-fraction-round">
                                                    @_lang["round"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormHiredBusFee"]</div>
                                        <div class="col-4 d-flex">
                                            <div class="form-check form-check-inline mw-7rem"> 
                                                <input type="radio" class="k-radio" name="reservation" id="reservation" disabled="@ReadOnly"
                                                       value="@(EditFormHiredBusFee.Reservation)"
                                                       checked="@(model.EditFormHiredBusFee == EditFormHiredBusFee.Reservation)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormHiredBusFee), e.Value)">
                                                <label class="k-radio-label ml-2" for="reservation">
                                                    @_lang["EditFormHiredBusFee.Reservation"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="car-destination" id="car-destination" disabled="@ReadOnly"
                                                       value="@(EditFormHiredBusFee.CarDestination)"
                                                       checked="@(model.EditFormHiredBusFee == EditFormHiredBusFee.CarDestination)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormHiredBusFee), e.Value)">
                                                <label class="k-radio-label ml-2" for="car-destination">
                                                    @_lang["EditFormHiredBusFee.CarDestination"]
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-2 mb-auto">@_lang["EditFormHiredBusDifferentClassification"]</div>
                                        <div class="col-4 d-flex">
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="add-company" id="add-company" disabled="@ReadOnly"
                                                       value="@(EditFormHiredBusDifferentClassification.AddToYourCompany)"
                                                       checked="@(model.EditFormHiredBusDifferentClassification == EditFormHiredBusDifferentClassification.AddToYourCompany)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormHiredBusDifferentClassification), e.Value)">
                                                <label class="k-radio-label ml-2" for="add-company">
                                                    @_lang["EditFormHiredBusDifferentClassification.AddToYourCompany"]
                                                </label>
                                            </div>
                                            <div class="form-check form-check-inline mw-7rem">
                                                <input type="radio" class="k-radio" name="donot-add" id="donot-add" disabled="@ReadOnly"
                                                       value="@(EditFormHiredBusDifferentClassification.DonotAdd)"
                                                       checked="@(model.EditFormHiredBusDifferentClassification == EditFormHiredBusDifferentClassification.DonotAdd)"
                                                       @onchange="async e => await FormChanged(nameof(model.EditFormHiredBusDifferentClassification), e.Value)">
                                                <label class="k-radio-label ml-2" for="donot-add">
                                                    @_lang["EditFormHiredBusDifferentClassification.DonotAdd"]
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2 mb-2">
                                        <div class="col-2 mb-auto">@_lang["show_tax_ticket_price"]</div>
                                        <div class="col-4">
                                            <KoboInputRadio Value="EditFormFareTaxDisplay.FreeTax"
                                                            Checked="model.EditFormFareTaxDisplay == EditFormFareTaxDisplay.FreeTax"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormFareTaxDisplay), e.Value)"
                                                            Label="@_lang["free_tax"]"
                                                            ReadOnly="ReadOnly"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormFareTaxDisplay.IncludedTax"
                                                            Checked="model.EditFormFareTaxDisplay == EditFormFareTaxDisplay.IncludedTax"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormFareTaxDisplay), e.Value)"
                                                            Label="@_lang["included_tax"]"
                                                            ReadOnly="ReadOnly"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormFareTaxDisplay.OtherTax"
                                                            Checked="model.EditFormFareTaxDisplay == EditFormFareTaxDisplay.OtherTax"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormFareTaxDisplay), e.Value)"
                                                            Label="@_lang["other_tax"]"
                                                            ReadOnly="ReadOnly"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                        <div class="col-2 mb-auto">@_lang["show_tax_loaded_goods"]</div>
                                        <div class="col-4">
                                            <KoboInputRadio Value="EditFormFareTaxDisplay.FreeTax"
                                                            Checked="model.EditFormLoadingGoodsTaxDisplay == EditFormFareTaxDisplay.FreeTax"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormLoadingGoodsTaxDisplay), e.Value)"
                                                            Label="@_lang["free_tax"]"
                                                            ReadOnly="ReadOnly"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormFareTaxDisplay.IncludedTax"
                                                            Checked="model.EditFormLoadingGoodsTaxDisplay == EditFormFareTaxDisplay.IncludedTax"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormLoadingGoodsTaxDisplay), e.Value)"
                                                            Label="@_lang["included_tax"]"
                                                            ReadOnly="ReadOnly"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormFareTaxDisplay.OtherTax"
                                                            Checked="model.EditFormLoadingGoodsTaxDisplay == EditFormFareTaxDisplay.OtherTax"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormLoadingGoodsTaxDisplay), e.Value)"
                                                            Label="@_lang["other_tax"]"
                                                            ReadOnly="ReadOnly"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>


                                    <hr style="margin-left: -1rem; margin-right: -1rem" />


                                    <h5 class="my-2">@_lang["cancellation_rate"]</h5>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["cancellation_rate1"]</div>
                                        <div class="col-2 d-flex mr-100">
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate1StartTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate1StartTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate1StartTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate1StartTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["sunday"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate1EndTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate1EndTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate1EndTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate1EndTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["day"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate1)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length5"
                                                       Text="@model.EditFormCancelRate1"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate1), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate1)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["percent"]</label>
                                        </div>
                                        <div class="col-2 mb-auto">@_lang["cancellation_rate2"]</div>
                                        <div class="col-2 d-flex">
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate2StartTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate2StartTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate2StartTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate2StartTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["sunday"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate2EndTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate2EndTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate2EndTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate2EndTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["day"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate2)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length5"
                                                       Text="@model.EditFormCancelRate2"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate2), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate2)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["percent"]</label>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["cancellation_rate3"]</div>
                                        <div class="col-2 d-flex  mr-100">
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate3StartTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate3StartTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate3StartTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate3StartTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["sunday"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate3EndTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate3EndTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate3EndTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate3EndTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["day"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate3)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length5"
                                                       Text="@model.EditFormCancelRate3"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate3), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate3)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["percent"]</label>
                                        </div>
                                        <div class="col-2 mb-auto">@_lang["cancellation_rate4"]</div>
                                        <div class="col-2 d-flex">
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate4StartTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate4StartTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate4StartTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate4StartTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["sunday"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate4EndTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate4EndTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate4EndTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate4EndTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["day"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate4)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length5"
                                                       Text="@model.EditFormCancelRate4"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate4), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate4)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["percent"]</label>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["cancellation_rate5"]</div>
                                        <div class="col-2 d-flex  mr-100">
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate5StartTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate5StartTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate5StartTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate5StartTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["sunday"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate5EndTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate5EndTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate5EndTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate5EndTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["day"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate5)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length5"
                                                       Text="@model.EditFormCancelRate5"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate5), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate5)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["percent"]</label>
                                        </div>
                                        <div class="col-2 mb-auto">@_lang["cancellation_rate6"]</div>
                                        <div class="col-2 d-flex">
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate6StartTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate6StartTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate6StartTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate6StartTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["sunday"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate6EndTime)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length2"
                                                       Text="@model.EditFormCancelRate6EndTime"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate6EndTime), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate6EndTime)"></DxTextBox>
                                            </div>
                                            <label class="my-auto mx-2">@_lang["day"]</label>
                                            <div class='has-tooltip-error'>
                                            <Tooltip ValueExpressions="@(() => model.EditFormCancelRate6)"
                                                     Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                            <DxTextBox ReadOnly="ReadOnly" CssClass="number-rate length5"
                                                       Text="@model.EditFormCancelRate6"
                                                       TextChanged="async e => await FormChanged(nameof(model.EditFormCancelRate6), e)"
                                                       TextExpression="@(() => model.EditFormCancelRate6)"></DxTextBox>
                                                </div>
                                            <label class="my-auto mx-2">@_lang["percent"]</label>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_3"]">
                                <div class="kobo-tab enterField">
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormAutoTemporaryBus"]</div>
                                        <div class="col-10">
                                            <KoboInputRadio Value="EditFormAutoTemporaryBus.Do"
                                                            Checked="model.EditFormAutoTemporaryBus == EditFormAutoTemporaryBus.Do"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoTemporaryBus), e.Value)"
                                                            ReadOnly="ReadOnly"
                                                            Label="@_lang["EditFormAutoTemporaryBus.Do"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormAutoTemporaryBus.Donot"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormAutoTemporaryBus == EditFormAutoTemporaryBus.Donot"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoTemporaryBus), e.Value)"
                                                            Label="@_lang["EditFormAutoTemporaryBus.DoNot"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormPriority"]</div>
                                        <div class="col-10">
                                            <KoboInputRadio Value="EditFormPriority.SaleOfficeOrder"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormPriority == EditFormPriority.SaleOfficeOrder"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormPriority), e.Value)"
                                                            Label="@_lang["EditFormPriority.SaleOfficeOrder"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormPriority.VehicleTypeOrder"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormPriority == EditFormPriority.VehicleTypeOrder"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormPriority), e.Value)"
                                                            Label="@_lang["EditFormPriority.VehicleTypeOrder"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormAutoTemporaryBusDivision"]</div>
                                        <div class="col-10">
                                            <KoboInputRadio Value="EditFormAutoTemporaryBusDivision.Standard"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormAutoTemporaryBusDivision == EditFormAutoTemporaryBusDivision.Standard"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoTemporaryBusDivision), e.Value)"
                                                            Label="@_lang["EditFormAutoTemporaryBusDivision.Standard"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormAutoTemporaryBusDivision.Daily"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormAutoTemporaryBusDivision == EditFormAutoTemporaryBusDivision.Daily"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoTemporaryBusDivision), e.Value)"
                                                            Label="@_lang["EditFormAutoTemporaryBusDivision.Daily"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_4"]">
                                <div class="kobo-tab enterField">
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormVehicleReplacement"]</div>
                                        <div class="col-8">
                                            <KoboInputRadio Value="EditFormVehicleReplacement.VehicleOnly"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormVehicleReplacement == EditFormVehicleReplacement.VehicleOnly"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormVehicleReplacement), e.Value)"
                                                            Label="@_lang["EditFormVehicleReplacement.VehicleOnly"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormVehicleReplacement.VehicleDriver"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormVehicleReplacement == EditFormVehicleReplacement.VehicleDriver"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormVehicleReplacement), e.Value)"
                                                            Label="@_lang["EditFormVehicleReplacement.VehicleDriver"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormVehicleReplacement.VehicleGuider"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormVehicleReplacement == EditFormVehicleReplacement.VehicleGuider"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormVehicleReplacement), e.Value)"
                                                            Label="@_lang["EditFormVehicleReplacement.VehicleGuider"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormVehicleReplacement.All" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormVehicleReplacement == EditFormVehicleReplacement.All"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormVehicleReplacement), e.Value)"
                                                            Label="@_lang["EditFormVehicleReplacement.All"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormCrewCompatibilityCheck"]</div>
                                        <div class="col-8">
                                            <KoboInputRadio Value="EditFormCrewCompatibilityCheck.DonotCheck"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormCrewCompatibilityCheck == EditFormCrewCompatibilityCheck.DonotCheck"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormCrewCompatibilityCheck), e.Value)"
                                                            Label="@_lang["EditFormCrewCompatibilityCheck.DonotCheck"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormCrewCompatibilityCheck.Check"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormCrewCompatibilityCheck == EditFormCrewCompatibilityCheck.Check"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormCrewCompatibilityCheck), e.Value)"
                                                            Label="@_lang["EditFormCrewCompatibilityCheck.Check"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormAutoKoban"]</div>
                                        <div class="col-8">
                                            <KoboInputRadio Value="EditFormAutoKoban.No"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormAutoKoban == EditFormAutoKoban.No"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoKoban), e.Value)"
                                                            Label="@_lang["EditFormAutoKoban.No"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormAutoKoban.VehiclePersonAssignment"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormAutoKoban == EditFormAutoKoban.VehiclePersonAssignment"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoKoban), e.Value)"
                                                            Label="@_lang["EditFormAutoKoban.VehiclePersonAssignment"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormAutoKoban.AutomaticPoliceBox"
                                                            ReadOnly="ReadOnly"
                                                            Checked="model.EditFormAutoKoban == EditFormAutoKoban.AutomaticPoliceBox"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormAutoKoban), e.Value)"
                                                            Label="@_lang["EditFormAutoKoban.AutomaticPoliceBox"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_5"]">
                                <div class="kobo-tab enterField">
                                    <h5 class="my-2">@_lang["tab5_header_1"]</h5>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter1DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter1DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter1DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter1DisplayByBusType), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor1DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor1DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter2DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter2DisplayByBusType"
                                                        ReadOnly="ReadOnly"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter2DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        CssClass="max-150"
                                                        AllowUserInput="false"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter2DisplayByBusType), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor2DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor2DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter3DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter3DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter3DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        AllowUserInput="false"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter3DisplayByBusType), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor3DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor3DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter4DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter4DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter4DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter4DisplayByBusType), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor4DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor4DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter5DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter5DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter5DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter5DisplayByBusType), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor5DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor5DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                    <h5 class="my-2">@_lang["tab5_header_2"]</h5>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter1DisplayByCrew"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter1DisplayByCrew"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter1DisplayByCrew)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter1DisplayByCrew), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor1DisplayByCrew"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor1DisplayByCrew" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter2DisplayByCrew"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter2DisplayByCrew"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter2DisplayByCrew)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter2DisplayByCrew), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor2DisplayByCrew"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor2DisplayByCrew" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter3DisplayByCrew"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter3DisplayByCrew"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter3DisplayByCrew)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter3DisplayByCrew), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor3DisplayByCrew"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor3DisplayByCrew" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter4DisplayByCrew"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter4DisplayByCrew"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter4DisplayByCrew)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter4DisplayByCrew), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor4DisplayByCrew"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor4DisplayByCrew" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-2 mb-auto">@_lang["EditFormCharacter5DisplayByCrew"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacter5DisplayByCrew"
                                                        SelectedItemExpression="@(() => model.EditFormCharacter5DisplayByCrew)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="@(async (item) => await FormChanged(nameof(model.EditFormCharacter5DisplayByCrew), item))"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColor5DisplayByCrew"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColor5DisplayByCrew" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_6"]">
                                <div class="kobo-tab enterField">
                                    <div class="row mt-2">
                                        <div class="col-6">
                                            <h5 class="my-2">@_lang["tab6_header_1"]</h5>
                                        </div>
                                        <div class="col-6 text-center">
                                            <h5 class="my-2">@_lang["tab6_header_2"]</h5>
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification1DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification1DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification1DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification1DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification1DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification1DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification1DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification1DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification1DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification1DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification1DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification1DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification2DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification2DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification2DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification2DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification2DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification2DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification2DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification2DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification2DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification2DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification2DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification2DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification3DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification3DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification3DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification3DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification3DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification3DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification3DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification3DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification3DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification3DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification3DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification3DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification4DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification4DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification4DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification4DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification4DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification4DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification4DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification4DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification4DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification4DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification4DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification4DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification5DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification5DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification5DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification5DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification5DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification5DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification5DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification5DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification5DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification5DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification5DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification5DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification6DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification6DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification6DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification6DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification6DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification6DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification6DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification6DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification6DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification6DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification6DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification6DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification7DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification7DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification7DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification7DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification7DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification7DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification7DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification7DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification7DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification7DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification7DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification7DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification8DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification8DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification8DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification8DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification8DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification8DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification8DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification8DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification8DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification8DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification8DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification8DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification9DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification9DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification9DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification9DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto mr-3">@_lang["EditFormColorClassification9DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification9DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification9DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification9DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification9DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification9DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification9DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex ml-3">
                                            <input @bind="@model.EditFormColorClassification9DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification10DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification10DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification10DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification10DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification10DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification10DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification10DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification10DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification10DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification10DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification10DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification10DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification11DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification11DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification11DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification11DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification11DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification11DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification11DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification11DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification11DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        AllowUserInput="false"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification11DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification11DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification11DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification12DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification12DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification12DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification12DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification12DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification12DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification12DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification12DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification12DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        AllowUserInput="false"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification12DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification12DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification12DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification13DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification13DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification13DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification13DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification13DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification13DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification13DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification13DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification13DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification13DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification13DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification13DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification14DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification14DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification14DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        AllowUserInput="false"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification14DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification14DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification14DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification14DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification14DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification14DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        CssClass="max-150"
                                                        ReadOnly="ReadOnly"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification14DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification14DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification14DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>

                                    <div class="row mt-2">
                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification15DisplayByBusType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification15DisplayByBusType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification15DisplayByBusType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification15DisplayByBusType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification15DisplayByBusType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification15DisplayByBusType" disabled="@ReadOnly" type="color" />
                                        </div>

                                        <div class="custom-width mb-auto">@_lang["EditFormCharacterClassification15DisplayByCrewType"]</div>
                                        <div class="col-2 d-flex">
                                            <DxComboBox SelectedItem="model.EditFormCharacterClassification15DisplayByCrewType"
                                                        SelectedItemExpression="@(() => model.EditFormCharacterClassification15DisplayByCrewType)"
                                                        Data="@eiygoItems"
                                                        AllowUserInput="false"
                                                        ReadOnly="ReadOnly"
                                                        CssClass="max-150"
                                                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                        TextFieldName="@nameof(EiygoItem.DisplayName)"
                                                        FilteringMode="DataGridFilteringMode.Contains"
                                                        SelectedItemChanged="async item => await FormChanged(nameof(model.EditFormCharacterClassification15DisplayByCrewType), item)"></DxComboBox>
                                        </div>
                                        <div class="mb-auto">@_lang["EditFormColorClassification15DisplayByCrewType"]</div>
                                        <div class="col-1 d-flex">
                                            <input @bind="@model.EditFormColorClassification15DisplayByCrewType" disabled="@ReadOnly" type="color" />
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_7"]">
                                <div class="kobo-tab enterField">
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormBillComent1"]</div>
                                        <div class="col-9 d-flex">
                                            <DxTextBox TextChanged="async item => await FormChanged(nameof(model.EditFormBillComent1), item)"
                                                       TextExpression="() => model.EditFormBillComent1"
                                                       ReadOnly="ReadOnly"
                                                       CssClass="length60"
                                                       Text="@model.EditFormBillComent1"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormBillComent2"]</div>
                                        <div class="col-9 d-flex">
                                            <DxTextBox TextChanged="async item => await FormChanged(nameof(model.EditFormBillComent2), item)"
                                                       TextExpression="() => model.EditFormBillComent2"
                                                       ReadOnly="ReadOnly"
                                                       CssClass="length60"
                                                       Text="@model.EditFormBillComent2"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormBillComent3"]</div>
                                        <div class="col-9 d-flex">
                                            <DxTextBox TextChanged="async item => await FormChanged(nameof(model.EditFormBillComent3), item)"
                                                       TextExpression="() => model.EditFormBillComent3"
                                                       ReadOnly="ReadOnly"
                                                       CssClass="length60"
                                                       Text="@model.EditFormBillComent3"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormBillComent4"]</div>
                                        <div class="col-9 d-flex">
                                            <DxTextBox TextChanged="async item => await FormChanged(nameof(model.EditFormBillComent4), item)"
                                                       TextExpression="() => model.EditFormBillComent4" ReadOnly="ReadOnly"
                                                       CssClass="length60"
                                                       Text="@model.EditFormBillComent4"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormBillComent5"]</div>
                                        <div class="col-9 d-flex">
                                            <DxTextBox TextChanged="async item => await FormChanged(nameof(model.EditFormBillComent5), item)"
                                                       TextExpression="() => model.EditFormBillComent5" ReadOnly="ReadOnly"
                                                       CssClass="length60"
                                                       Text="@model.EditFormBillComent5"></DxTextBox>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormBillComent6"]</div>
                                        <div class="col-9 d-flex">
                                            <DxTextBox TextChanged="async item => await FormChanged(nameof(model.EditFormBillComent6), item)"
                                                       TextExpression="() => model.EditFormBillComent6" ReadOnly="ReadOnly"
                                                       CssClass="length60"
                                                       Text="@model.EditFormBillComent6"></DxTextBox>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_8"]">
                                <div class="kobo-tab enterField">
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormReportClassification"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="EditFormReportClassification.Departure"
                                                            Checked="model.EditFormReportClassification == EditFormReportClassification.Departure"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormReportClassification), e.Value)" ReadOnly="ReadOnly"
                                                            Label="@_lang["EditFormReportClassification.Departure"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormReportClassification.Return"
                                                            Checked="model.EditFormReportClassification == EditFormReportClassification.Return"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormReportClassification), e.Value)" ReadOnly="ReadOnly"
                                                            Label="@_lang["EditFormReportClassification.Return"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormReportSummary"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="EditFormReportSummary.Delivery"
                                                            Checked="model.EditFormReportSummary == EditFormReportSummary.Delivery"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormReportSummary), e.Value)" ReadOnly="ReadOnly"
                                                            Label="@_lang["EditFormReportSummary.Delivery"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormReportSummary.TaxExcluded"
                                                            Checked="model.EditFormReportSummary == EditFormReportSummary.TaxExcluded"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormReportSummary), e.Value)" ReadOnly="ReadOnly"
                                                            Label="@_lang["EditFormReportSummary.TaxExcluded"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormReportOutput"]</div>
                                        <div class="col-3 d-flex">
                                            <div>
                                                <KoboInputRadio Value="EditFormReportOutput.Tohoku"
                                                                Checked="model.EditFormReportOutput == EditFormReportOutput.Tohoku"
                                                                OnChanged="async e => await FormChanged(nameof(model.EditFormReportOutput), e.Value)" ReadOnly="ReadOnly"
                                                                Label="@_lang["EditFormReportOutput.Tohoku"]"
                                                                CssClass="mw-7rem"></KoboInputRadio>
                                                <KoboInputRadio Value="EditFormReportOutput.Kanto"
                                                                Checked="model.EditFormReportOutput == EditFormReportOutput.Kanto"
                                                                OnChanged="async e => await FormChanged(nameof(model.EditFormReportOutput), e.Value)" ReadOnly="ReadOnly"
                                                                Label="@_lang["EditFormReportOutput.Kanto"]"
                                                                CssClass="mw-7rem"></KoboInputRadio>
                                            </div>
                                            
                                            <div>
                                                <KoboInputRadio Value="EditFormReportOutput.Koshinetsu"
                                                                Checked="model.EditFormReportOutput == EditFormReportOutput.Koshinetsu"
                                                                OnChanged="async e => await FormChanged(nameof(model.EditFormReportOutput), e.Value)" ReadOnly="ReadOnly"
                                                                Label="@_lang["EditFormReportOutput.Koshinetsu"]"
                                                                CssClass="mw-7rem"></KoboInputRadio>
                                                <KoboInputRadio Value="EditFormReportOutput.Other"
                                                                Checked="model.EditFormReportOutput == EditFormReportOutput.Other"
                                                                OnChanged="async e => await FormChanged(nameof(model.EditFormReportOutput), e.Value)" ReadOnly="ReadOnly"
                                                                Label="@_lang["EditFormReportOutput.Other"]"
                                                                CssClass="mw-7rem"></KoboInputRadio>
                                            </div>
                                            
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormTransportationMiscellaneousIncome"]</div>
                                        <div class="col-3">
                                            <div class="d-flex">
                                                <KoboInputRadio Value="EditFormTransportationMiscellaneousIncome.Yes" ReadOnly="ReadOnly"
                                                                Checked="model.EditFormTransportationMiscellaneousIncome == EditFormTransportationMiscellaneousIncome.Yes"
                                                                OnChanged="async e => await FormChanged(nameof(model.EditFormTransportationMiscellaneousIncome), e.Value)"
                                                                Label="@_lang["EditFormTransportationMiscellaneousIncome.Yes"]"
                                                                CssClass="mw-7rem"></KoboInputRadio>
                                                <KoboInputRadio Value="EditFormTransportationMiscellaneousIncome.No" ReadOnly="ReadOnly"
                                                                Checked="model.EditFormTransportationMiscellaneousIncome == EditFormTransportationMiscellaneousIncome.No"
                                                                OnChanged="async e => await FormChanged(nameof(model.EditFormTransportationMiscellaneousIncome), e.Value)"
                                                                Label="@_lang["EditFormTransportationMiscellaneousIncome.No"]"
                                                                CssClass="mw-7rem"></KoboInputRadio>
                                            </div>
                                            
                                            <div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormDisplayDetailSelection"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="EditFormDisplayDetailSelection.Invert" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormDisplayDetailSelection == EditFormDisplayDetailSelection.Invert"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormDisplayDetailSelection), e.Value)"
                                                            Label="@_lang["EditFormDisplayDetailSelection.Invert"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormDisplayDetailSelection.Frame" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormDisplayDetailSelection == EditFormDisplayDetailSelection.Frame"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormDisplayDetailSelection), e.Value)"
                                                            Label="@_lang["EditFormDisplayDetailSelection.Frame"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormCurrentInvoice"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="EditFormCurrentInvoice.NoManagement" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormCurrentInvoice == EditFormCurrentInvoice.NoManagement"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormCurrentInvoice), e.Value)"
                                                            Label="@_lang["EditFormCurrentInvoice.NoManagement"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="EditFormCurrentInvoice.Manage" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormCurrentInvoice == EditFormCurrentInvoice.Manage"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormCurrentInvoice), e.Value)"
                                                            Label="@_lang["EditFormCurrentInvoice.Manage"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormIncidentalType1Addition"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType1Addition == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType1Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType1Addition == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType1Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormIncidentalType2Addition"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType2Addition == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType2Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType2Addition == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType2Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormIncidentalType3Addition"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType3Addition == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType3Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType3Addition == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType3Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormIncidentalType4Addition"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType4Addition == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType4Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormIncidentalType4Addition == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormIncidentalType4Addition), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>

                                    <hr style="margin-left: -1rem; margin-right: -1rem" />

                                    <h5 class="my-2">@_lang["CopyInitialFlag"]</h5>

                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyProcessData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyProcessData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyProcessData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyProcessData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyProcessData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyIncidentalData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyIncidentalData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyIncidentalData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyIncidentalData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyIncidentalData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyLoadingGoodData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyLoadingGoodData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyLoadingGoodData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyLoadingGoodData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyLoadingGoodData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyArrangeData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyArrangeData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyArrangeData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyArrangeData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyArrangeData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyBoardingPlaceData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyBoardingPlaceData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyBoardingPlaceData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyBoardingPlaceData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyBoardingPlaceData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyReservationRemarkData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyReservationRemarkData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyReservationRemarkData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyReservationRemarkData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyReservationRemarkData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-3 mb-auto">@_lang["EditFormInitCopyOperationDateRemarkData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyOperationDateRemarkData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyOperationDateRemarkData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitCopyOperationDateRemarkData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitCopyOperationDateRemarkData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>

                                        <div class="col-3 mb-auto">@_lang["EditFormInitTransferEstimateData"]</div>
                                        <div class="col-3 d-flex">
                                            <KoboInputRadio Value="YesNoRadio.None" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitTransferEstimateData == YesNoRadio.None"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitTransferEstimateData), e.Value)"
                                                            Label="@_lang["YesNoRadio.None"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                            <KoboInputRadio Value="YesNoRadio.Yes" ReadOnly="ReadOnly"
                                                            Checked="model.EditFormInitTransferEstimateData == YesNoRadio.Yes"
                                                            OnChanged="async e => await FormChanged(nameof(model.EditFormInitTransferEstimateData), e.Value)"
                                                            Label="@_lang["YesNoRadio.Yes"]"
                                                            CssClass="mw-7rem"></KoboInputRadio>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                            <DxTabPage Text="@_lang["tab_9"]">
                                <div class="kobo-tab enterField">
                                    <div class="d-flex">
                                        <div class="col-5">
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]１</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm01), v)"  ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm01"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm01"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]２</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm02), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm02"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm02"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]３</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm03), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm03"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm03"></DxTextBox>
                                                </div>
                                            </div>

                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]４</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm04), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm04"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm04"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]５</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm05), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm05"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm05"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]6</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm06), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm06"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm06"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]7</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm07), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm07"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm07"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]8</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm08), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm08"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm08"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]9</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm09), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm09"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm09"></DxTextBox>
                                                </div>
                                            </div>
                                            <div class="row mb-55 mb-1">
                                                <div class="mb-auto">@_lang["Jinkyu"]10</div>
                                                <div class="col-5">
                                                    <DxTextBox TextChanged="async v => await FormChanged(nameof(model.JisKinKyuNm10), v)" ReadOnly="ReadOnly"
                                                               TextExpression="() => model.JisKinKyuNm10"
                                                               CssClass="length30"
                                                               Text="@model.JisKinKyuNm10"></DxTextBox>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-7">
                                            <div class="d-flex">
                                                <div class="mr-2">
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(1))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow1)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow1, 1))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(2))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow2)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow2, 2))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(3))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow3)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow3, 3))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(4))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow4)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow4, 4))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(5))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow5)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow5, 5))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(6))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow6)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow6, 6))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(7))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow7)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow7, 7))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(8))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow8)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow8, 8))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(9))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow9)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow9, 9))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                    <div class="@("dropzone drop-zone mb-1" + (@ReadOnly ? " display-none" : ""))" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(10))">
                                                        <table id="table-kinkyu">
                                                            @foreach (var item in WorkHolidayRow10)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, WorkHolidayRow10, 10))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </table>
                                                    </div>
                                                </div>
                                                <div class="" style="max-height:840px; overflow: auto">
                                                    <table id="table-kinkyu">
                                                        <thead>
                                                            <tr>
                                                                <th>
                                                                    @_lang["header1"]
                                                                </th>
                                                                <th>
                                                                    @_lang["header2"]
                                                                </th>
                                                                <th>
                                                                    @_lang["header3"]
                                                                </th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="dropzone" ondragover="event.preventDefault();" @ondrop="@(()=>HandleDrop(11))">
                                                            @foreach (var item in UnAssignList)
                                                            {
                                                                <tr class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(item, UnAssignList, 11))">
                                                                    <td>
                                                                        @(item.KinKyuCd)
                                                                    </td>
                                                                    <td>
                                                                        @(item.KinKyuNm)
                                                                    </td>
                                                                    <td>
                                                                        @(item.CodeKbnNm)
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </DxTabPage>
                        </DxTabs>
                    </div>

                    <div class="form-footer mt-2 d-flex justify-content-between">
                        <div class="left">
                            <button class="btn btn-sm btn-danger" @onclick="ResetForm">
                                <i class="fa fa-refresh mr-1"></i>@_lang["clear_btn"]
                            </button>
                        </div>
                        <div class="right">
                            <button class="btn btn-sm btn-outline-dark mr-2" @onclick="(e) => CloseDialog()">
                                @_lang["cancel_btn"]
                            </button>
                            <button @onclick="Save" class="btn btn-sm btn-primary" disabled="@ReadOnly">
                                <i class="fa fa-floppy-o mr-1"></i>@_lang["save_btn"]
                            </button>
                        </div>
                    </div>
                </EditForm>
            }
        </div>
    </Content>
</DxPopup>
