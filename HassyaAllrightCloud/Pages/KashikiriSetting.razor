@inherits RegulationSettingBase

<div class="regulation-setting-layout">
    <div class="mb-3 search-panel">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <div class="d-flex align-items-center">
                <h5>@_lang["page_title"]</h5>
            </div>
            <button class="btn btn-sm btn-danger btnclear" @onclick="ResetForm">
                <i class="fa fa-refresh" aria-hidden="true"></i>
                @_lang["EraseAll"]
            </button>
        </div>
        
        <div id="control-tab" class="title-section border busrepair-accordion-header">
            <i class="fa fa-angle-down" aria-hidden="true"></i> &nbsp;&nbsp;&nbsp;@_lang["search_condition_title"]
        </div>
        <div style="display: none;">
            @if (formContext != null)
            {
                <EditForm Context="editContext" EditContext="@formContext">
                    <FluentValidator TValidator="RegulationSettingValidator" />
                    <DxTabs CssClass="kobo-tabs" ActiveTabIndexChanged="(e) => TriggerTabChange()">
                        <DxTabPage Text="@_lang["condition_setting_title"]">
                            <div class="kobo-tab enterField">
                                <div class="row enterField">
                                    <div class="col" style="min-width: 35rem;">
                                        <div class="form-check-inline">
                                            <label class="mr-3">@_lang["company_lbl"]</label>
                                            <div class="form-row">
                                                <div class="col has-tooltip-error">
                                                    <Tooltip ValueExpressions="@(() => model.CompanyFrom)"
                                                             Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                                    <DxComboBox SelectedItem="model.CompanyFrom"
                                                                SelectedItemExpression="@(() => model.CompanyFrom)"
                                                                Data="@companyList"
                                                                AllowUserInput="true"
                                                                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                NullText="@_lang["company_nulltext"]"
                                                                TextFieldName="@nameof(CompanyListItem.DisplayName)"
                                                                FilteringMode="DataGridFilteringMode.Contains"
                                                                SelectedItemChanged="async item => await CompanyChanged(item, true)"></DxComboBox>
                                                </div>
                                                <span class="ml-2 mr-2 mt-auto mb-auto">～</span>
                                                <div class="col has-tooltip-error">
                                                    <Tooltip ValueExpressions="@(() => model.CompanyTo)"
                                                             Lang="@LangDic" Text="" Position="PositionTooltip.top"></Tooltip>
                                                    <DxComboBox SelectedItem="model.CompanyTo"
                                                                SelectedItemExpression="@(() => model.CompanyTo)"
                                                                Data="@companyList"
                                                                AllowUserInput="true"
                                                                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                                NullText="@_lang["company_nulltext"]"
                                                                TextFieldName="@nameof(CompanyListItem.DisplayName)"
                                                                FilteringMode="DataGridFilteringMode.Contains"
                                                                SelectedItemChanged="async item => await CompanyChanged(item, false)"></DxComboBox>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </DxTabPage>
                        <DxTabPage Text="@_lang["display_title"]">
                            <div class="kobo-tab enterField">
                                <div class="row">
                                    <div class="col-1">
                                        @_lang["fontsize_title"]
                                    </div>
                                    <div class="col-11 d-flex">
                                        <button class="@string.Format("btn-option {0}", gridSize == (int)ViewMode.Large ? "btn-active" : string.Empty)"
                                                type="button" @onclick="e => gridSize = (int)ViewMode.Large">
                                            @_lang["large"]
                                        </button>
                                        <button class="@string.Format("btn-option mx-2 {0}", gridSize == (int)ViewMode.Medium ? "btn-active" : string.Empty)" type="button"
                                                @onclick="(e) =>  gridSize = (int)ViewMode.Medium">
                                            @_lang["medium"]
                                        </button>
                                        <button class="@string.Format("btn-option {0}", gridSize == (int)ViewMode.Small ? "btn-active" : string.Empty)" type="button"
                                                @onclick="(e) =>  gridSize = (int)ViewMode.Small">
                                            @_lang["small"]
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </DxTabPage>
                    </DxTabs>
                </EditForm>
            }
        </div>
    </div>

    <div class="my-3">
        <button class="btn btn-sm btn-primary" @onclick="ShowPopup">
            <i class="fa fa-plus-square-o mr-2" title="@_lang["add_new_btn"]"></i>
            @_lang["add_new_btn"]
        </button>
    </div>

    <div class="regulation-setting-content">
        <div class="mt-3 position-relative d-flex flex-1 overflow-auto w-100">
            @if (Body != null && Header != null)
            {
                <KoboSimpleGrid OnRowDbClick="OnDbClick" Body="Body" Header="Header" DataItems="displayItems" CssClass="@(string.Format("grid-flex-1 kobo-grid-size-{0}", (int)gridSize))"></KoboSimpleGrid>
            }
        </div>
        <div class="mt-2 mb-2">
            <HassyaAllrightCloud.Pages.Components.Pagination OnChangePage="OnChangePage" ItemPerPage="itemPerPage" OnChangeItemPerPage="OnChangeItemPerPage"
                                                             TotalCount="items.Count" @ref="paging">
            </HassyaAllrightCloud.Pages.Components.Pagination>
        </div>
    </div>
</div>

<RegulationSettingForm @bind-ShowPopup="showPopup" IsCreate="isCreate" OnReset="OnReset" OnTogglePopup="OnTogglePopup" @ref="RegulationSettingForm"></RegulationSettingForm>